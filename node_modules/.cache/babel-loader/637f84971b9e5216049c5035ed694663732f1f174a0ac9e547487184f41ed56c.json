{"ast":null,"code":"import { ref } from 'vue';\nimport VueEmojiPicker from 'vue-emoji-picker';\nimport getCurrentUser from '../composables/getCurrentUser';\nimport { timestamp } from '../firebase/config';\nimport useCollection from '../composables/useCollection.js';\nexport default {\n  components: {\n    VueEmojiPicker\n  },\n  data() {\n    return {\n      message: '',\n      showEmojiPicker: false\n    };\n  },\n  methods: {\n    openEmojiPicker() {\n      this.showEmojiPicker = true;\n    },\n    async handleSubmit() {\n      const {\n        user\n      } = getCurrentUser();\n      const {\n        addDoc,\n        error\n      } = useCollection('messages');\n      const chat = {\n        name: user.value.displayName,\n        message: this.message,\n        createdAt: timestamp()\n      };\n      await addDoc(chat);\n      //console.log(chat)\n      if (!error.value) {\n        this.message = '';\n      }\n    }\n  }\n};","map":{"version":3,"mappings":"AAoBA,SAASA,GAAE,QAAS,KAAI;AACxB,OAAOC,cAAa,MAAO,kBAAiB;AAC5C,OAAOC,cAAa,MAAO,+BAA8B;AACzD,SAASC,SAAQ,QAAS,oBAAmB;AAC7C,OAAOC,aAAY,MAAO,iCAAgC;AAE1D,eAAe;EACXC,UAAU,EAAE;IACRJ;EACJ,CAAC;EACDK,IAAI,GAAG;IACH,OAAO;MACHC,OAAO,EAAE,EAAE;MACXC,eAAe,EAAE;IACrB;EACJ,CAAC;EACDC,OAAO,EAAE;IACLC,eAAe,GAAG;MACd,IAAI,CAACF,eAAc,GAAI,IAAG;IAC9B,CAAC;IACD,MAAMG,YAAY,GAAG;MACjB,MAAM;QAAEC;MAAK,IAAIV,cAAc,EAAC;MAChC,MAAM;QAAEW,MAAM;QAAEC;MAAM,IAAIV,aAAa,CAAC,UAAU;MAClD,MAAMW,IAAG,GAAI;QACTC,IAAI,EAAEJ,IAAI,CAACK,KAAK,CAACC,WAAW;QAC5BX,OAAO,EAAE,IAAI,CAACA,OAAO;QACrBY,SAAS,EAAEhB,SAAS;MACxB;MACA,MAAMU,MAAM,CAACE,IAAI;MACjB;MACA,IAAI,CAACD,KAAK,CAACG,KAAK,EAAE;QACd,IAAI,CAACV,OAAM,GAAI,EAAC;MACpB;IACJ;EACJ;AACJ","names":["ref","VueEmojiPicker","getCurrentUser","timestamp","useCollection","components","data","message","showEmojiPicker","methods","openEmojiPicker","handleSubmit","user","addDoc","error","chat","name","value","displayName","createdAt"],"sourceRoot":"","sources":["C:\\Users\\lego5\\Desktop\\Vue-Project\\Vue-Project\\src\\components\\NewChatForm.vue"],"sourcesContent":["<template>\r\n    <form>\r\n        <textarea class=\"comment-box\"\r\n            placeholder = 'Type your best message...'\r\n            v-model = \"message\"\r\n            @keypress.enter.prevent=\"handleSubmit\"\r\n        ></textarea>\r\n        <div class=\"emoji-picker-container\">\r\n            <button v-on:click=\"openEmojiPicker\">\r\n                <i class=\"fas fa-smile\"></i>\r\n            </button>\r\n            <vue-emoji-picker v-model=\"message\" v-if=\"showEmojiPicker\"></vue-emoji-picker>\r\n        </div>\r\n        <div class=\"error\">{{ error }}</div>\r\n        <button type=\"submit\" @click.prevent=\"handleSubmit\">Submit</button>\r\n    </form>\r\n</template>\r\n\r\n\r\n<script>\r\nimport { ref } from 'vue'\r\nimport VueEmojiPicker from 'vue-emoji-picker'\r\nimport getCurrentUser from '../composables/getCurrentUser'\r\nimport { timestamp } from '../firebase/config'\r\nimport useCollection from '../composables/useCollection.js'\r\n\r\nexport default {\r\n    components: {\r\n        VueEmojiPicker\r\n    },\r\n    data() {\r\n        return {\r\n            message: '',\r\n            showEmojiPicker: false\r\n        }\r\n    },\r\n    methods: {\r\n        openEmojiPicker() {\r\n            this.showEmojiPicker = true\r\n        },\r\n        async handleSubmit() {\r\n            const { user } = getCurrentUser()\r\n            const { addDoc, error } = useCollection('messages')\r\n            const chat = {\r\n                name: user.value.displayName,\r\n                message: this.message,\r\n                createdAt: timestamp()\r\n            }\r\n            await addDoc(chat)\r\n            //console.log(chat)\r\n            if (!error.value) {\r\n                this.message = ''\r\n            }\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n\r\n<style>\r\n\r\n/* Box for commenting */\r\n.comment-box {\r\n    border: 1px solid #ddd;\r\n    padding: 10px;\r\n    border-radius: 5px;\r\n    box-shadow: 2px 2px 5px #ccc;\r\n    width: 100%;\r\n    height: 200px;\r\n    resize: none;\r\n}\r\n\r\n\r\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}