{"ast":null,"code":"import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"p\", null, \"Chatroom\", -1 /* HOISTED */);\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"container\"\n}, null, -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_NavBar = _resolveComponent(\"NavBar\");\n  const _component_ChatWindow = _resolveComponent(\"ChatWindow\");\n  const _component_NewChatForm = _resolveComponent(\"NewChatForm\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_hoisted_1, _hoisted_2, _createVNode(_component_NavBar), _createVNode(_component_ChatWindow), _createVNode(_component_NewChatForm)], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"mappings":";gCACIA,oBAAe,WAAZ,UAAQ;gCACXA,oBAA6B;EAAxBC,KAAK,EAAC;AAAW;;;;;;6DADtBC,UAAe,EACfC,UAA6B,EAC7BC,aAASC,oBACTD,aAAaE,wBACbF,aAAcG","names":["_createElementVNode","class","_hoisted_1","_hoisted_2","_createVNode","_component_NavBar","_component_ChatWindow","_component_NewChatForm"],"sourceRoot":"","sources":["C:\\Users\\JW\\Desktop\\VUE_JS\\class10\\live-chat-1\\src\\views\\ChatRoom.vue"],"sourcesContent":["<template>\r\n    <p>Chatroom</p>\r\n    <div class=\"container\"></div>\r\n    <NavBar/>\r\n    <ChatWindow/>\r\n    <NewChatForm/>\r\n</template>\r\n\r\n<script>\r\nimport NewChatForm from '../components/NewChatForm.vue'\r\nimport NavBar from '../components/NavBar.vue'\r\nimport getCurrentUser from '../composables/getCurrentUser.js'\r\nimport { watch } from 'vue'\r\nimport { useRouter } from 'vue-router'\r\nimport ChatWindow from '../components/ChatWindow.vue'\r\n\r\nexport default{\r\n    components: {NavBar, NewChatForm, ChatWindow},\r\n    setup(){\r\n        const { user } = getCurrentUser()\r\n        const router = useRouter()\r\n\r\n        watch(user, () => {\r\n            if (!user.value){\r\n                router.push({ name: 'welcome' })\r\n            }\r\n        })\r\n    }\r\n}\r\n</script>\r\n\r\n<style>\r\n\r\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}