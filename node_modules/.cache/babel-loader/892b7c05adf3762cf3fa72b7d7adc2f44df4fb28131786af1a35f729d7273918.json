{"ast":null,"code":"import\"core-js/modules/es.array.push.js\";import firebase from'@firebase/app';import{Provider,ComponentContainer,Component}from'@firebase/component';import{stringify,jsonEval,contains,assert,isNodeSdk,base64,stringToByteArray,Sha1,deepCopy,base64Encode,isMobileCordova,stringLength,Deferred,safeGet,isAdmin,isValidFormat,isEmpty,isReactNative,assertionError,map,querystring,errorPrefix,getModularInstance,createMockUserToken,validateArgCount,validateCallback,validateContextObject}from'@firebase/util';import{__spreadArray,__read,__values,__extends,__awaiter,__generator,__assign}from'tslib';import{Logger,LogLevel}from'@firebase/logger';var name=\"@firebase/database\";var version=\"0.11.0\";/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /** The semver (www.semver.org) version of the SDK. */var SDK_VERSION='';// SDK_VERSION should be set before any database instance is created\nfunction setSDKVersion(version){SDK_VERSION=version;}/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * Wraps a DOM Storage object and:\r\n * - automatically encode objects as JSON strings before storing them to allow us to store arbitrary types.\r\n * - prefixes names with \"firebase:\" to avoid collisions with app data.\r\n *\r\n * We automatically (see storage.js) create two such wrappers, one for sessionStorage,\r\n * and one for localStorage.\r\n *\r\n */var DOMStorageWrapper=/** @class */function(){/**\r\n     * @param domStorage_ - The underlying storage object (e.g. localStorage or sessionStorage)\r\n     */function DOMStorageWrapper(domStorage_){this.domStorage_=domStorage_;// Use a prefix to avoid collisions with other stuff saved by the app.\nthis.prefix_='firebase:';}/**\r\n     * @param key - The key to save the value under\r\n     * @param value - The value being stored, or null to remove the key.\r\n     */DOMStorageWrapper.prototype.set=function(key,value){if(value==null){this.domStorage_.removeItem(this.prefixedName_(key));}else{this.domStorage_.setItem(this.prefixedName_(key),stringify(value));}};/**\r\n     * @returns The value that was stored under this key, or null\r\n     */DOMStorageWrapper.prototype.get=function(key){var storedVal=this.domStorage_.getItem(this.prefixedName_(key));if(storedVal==null){return null;}else{return jsonEval(storedVal);}};DOMStorageWrapper.prototype.remove=function(key){this.domStorage_.removeItem(this.prefixedName_(key));};DOMStorageWrapper.prototype.prefixedName_=function(name){return this.prefix_+name;};DOMStorageWrapper.prototype.toString=function(){return this.domStorage_.toString();};return DOMStorageWrapper;}();/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * An in-memory storage implementation that matches the API of DOMStorageWrapper\r\n * (TODO: create interface for both to implement).\r\n */var MemoryStorage=/** @class */function(){function MemoryStorage(){this.cache_={};this.isInMemoryStorage=true;}MemoryStorage.prototype.set=function(key,value){if(value==null){delete this.cache_[key];}else{this.cache_[key]=value;}};MemoryStorage.prototype.get=function(key){if(contains(this.cache_,key)){return this.cache_[key];}return null;};MemoryStorage.prototype.remove=function(key){delete this.cache_[key];};return MemoryStorage;}();/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * Helper to create a DOMStorageWrapper or else fall back to MemoryStorage.\r\n * TODO: Once MemoryStorage and DOMStorageWrapper have a shared interface this method annotation should change\r\n * to reflect this type\r\n *\r\n * @param domStorageName - Name of the underlying storage object\r\n *   (e.g. 'localStorage' or 'sessionStorage').\r\n * @returns Turning off type information until a common interface is defined.\r\n */var createStoragefor=function(domStorageName){try{// NOTE: just accessing \"localStorage\" or \"window['localStorage']\" may throw a security exception,\n// so it must be inside the try/catch.\nif(typeof window!=='undefined'&&typeof window[domStorageName]!=='undefined'){// Need to test cache. Just because it's here doesn't mean it works\nvar domStorage=window[domStorageName];domStorage.setItem('firebase:sentinel','cache');domStorage.removeItem('firebase:sentinel');return new DOMStorageWrapper(domStorage);}}catch(e){}// Failed to create wrapper.  Just return in-memory storage.\n// TODO: log?\nreturn new MemoryStorage();};/** A storage object that lasts across sessions */var PersistentStorage=createStoragefor('localStorage');/** A storage object that only lasts one session */var SessionStorage=createStoragefor('sessionStorage');/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */var logClient=new Logger('@firebase/database');/**\r\n * Returns a locally-unique ID (generated by just incrementing up from 0 each time its called).\r\n */var LUIDGenerator=function(){var id=1;return function(){return id++;};}();/**\r\n * Sha1 hash of the input string\r\n * @param str - The string to hash\r\n * @returns {!string} The resulting hash\r\n */var sha1=function(str){var utf8Bytes=stringToByteArray(str);var sha1=new Sha1();sha1.update(utf8Bytes);var sha1Bytes=sha1.digest();return base64.encodeByteArray(sha1Bytes);};var buildLogMessage_=function(){var varArgs=[];for(var _i=0;_i<arguments.length;_i++){varArgs[_i]=arguments[_i];}var message='';for(var i=0;i<varArgs.length;i++){var arg=varArgs[i];if(Array.isArray(arg)||arg&&typeof arg==='object'&&// eslint-disable-next-line @typescript-eslint/no-explicit-any\ntypeof arg.length==='number'){message+=buildLogMessage_.apply(null,arg);}else if(typeof arg==='object'){message+=stringify(arg);}else{message+=arg;}message+=' ';}return message;};/**\r\n * Use this for all debug messages in Firebase.\r\n */var logger=null;/**\r\n * Flag to check for log availability on first log message\r\n */var firstLog_=true;/**\r\n * The implementation of Firebase.enableLogging (defined here to break dependencies)\r\n * @param logger_ - A flag to turn on logging, or a custom logger\r\n * @param persistent - Whether or not to persist logging settings across refreshes\r\n */var enableLogging=function(logger_,persistent){assert(!persistent||logger_===true||logger_===false,\"Can't turn on custom loggers persistently.\");if(logger_===true){logClient.logLevel=LogLevel.VERBOSE;logger=logClient.log.bind(logClient);if(persistent){SessionStorage.set('logging_enabled',true);}}else if(typeof logger_==='function'){logger=logger_;}else{logger=null;SessionStorage.remove('logging_enabled');}};var log=function(){var varArgs=[];for(var _i=0;_i<arguments.length;_i++){varArgs[_i]=arguments[_i];}if(firstLog_===true){firstLog_=false;if(logger===null&&SessionStorage.get('logging_enabled')===true){enableLogging(true);}}if(logger){var message=buildLogMessage_.apply(null,varArgs);logger(message);}};var logWrapper=function(prefix){return function(){var varArgs=[];for(var _i=0;_i<arguments.length;_i++){varArgs[_i]=arguments[_i];}log.apply(void 0,__spreadArray([prefix],__read(varArgs)));};};var error=function(){var varArgs=[];for(var _i=0;_i<arguments.length;_i++){varArgs[_i]=arguments[_i];}var message='FIREBASE INTERNAL ERROR: '+buildLogMessage_.apply(void 0,__spreadArray([],__read(varArgs)));logClient.error(message);};var fatal=function(){var varArgs=[];for(var _i=0;_i<arguments.length;_i++){varArgs[_i]=arguments[_i];}var message=\"FIREBASE FATAL ERROR: \"+buildLogMessage_.apply(void 0,__spreadArray([],__read(varArgs)));logClient.error(message);throw new Error(message);};var warn=function(){var varArgs=[];for(var _i=0;_i<arguments.length;_i++){varArgs[_i]=arguments[_i];}var message='FIREBASE WARNING: '+buildLogMessage_.apply(void 0,__spreadArray([],__read(varArgs)));logClient.warn(message);};/**\r\n * Logs a warning if the containing page uses https. Called when a call to new Firebase\r\n * does not use https.\r\n */var warnIfPageIsSecure=function(){// Be very careful accessing browser globals. Who knows what may or may not exist.\nif(typeof window!=='undefined'&&window.location&&window.location.protocol&&window.location.protocol.indexOf('https:')!==-1){warn('Insecure Firebase access from a secure page. '+'Please use https in calls to new Firebase().');}};/**\r\n * Returns true if data is NaN, or +/- Infinity.\r\n */var isInvalidJSONNumber=function(data){return typeof data==='number'&&(data!==data||// NaN\ndata===Number.POSITIVE_INFINITY||data===Number.NEGATIVE_INFINITY);};var executeWhenDOMReady=function(fn){if(isNodeSdk()||document.readyState==='complete'){fn();}else{// Modeled after jQuery. Try DOMContentLoaded and onreadystatechange (which\n// fire before onload), but fall back to onload.\nvar called_1=false;var wrappedFn_1=function(){if(!document.body){setTimeout(wrappedFn_1,Math.floor(10));return;}if(!called_1){called_1=true;fn();}};if(document.addEventListener){document.addEventListener('DOMContentLoaded',wrappedFn_1,false);// fallback to onload.\nwindow.addEventListener('load',wrappedFn_1,false);// eslint-disable-next-line @typescript-eslint/no-explicit-any\n}else if(document.attachEvent){// IE.\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ndocument.attachEvent('onreadystatechange',function(){if(document.readyState==='complete'){wrappedFn_1();}});// fallback to onload.\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nwindow.attachEvent('onload',wrappedFn_1);// jQuery has an extra hack for IE that we could employ (based on\n// http://javascript.nwbox.com/IEContentLoaded/) But it looks really old.\n// I'm hoping we don't need it.\n}}};/**\r\n * Minimum key name. Invalid for actual data, used as a marker to sort before any valid names\r\n */var MIN_NAME='[MIN_NAME]';/**\r\n * Maximum key name. Invalid for actual data, used as a marker to sort above any valid names\r\n */var MAX_NAME='[MAX_NAME]';/**\r\n * Compares valid Firebase key names, plus min and max name\r\n */var nameCompare=function(a,b){if(a===b){return 0;}else if(a===MIN_NAME||b===MAX_NAME){return-1;}else if(b===MIN_NAME||a===MAX_NAME){return 1;}else{var aAsInt=tryParseInt(a),bAsInt=tryParseInt(b);if(aAsInt!==null){if(bAsInt!==null){return aAsInt-bAsInt===0?a.length-b.length:aAsInt-bAsInt;}else{return-1;}}else if(bAsInt!==null){return 1;}else{return a<b?-1:1;}}};/**\r\n * @returns {!number} comparison result.\r\n */var stringCompare=function(a,b){if(a===b){return 0;}else if(a<b){return-1;}else{return 1;}};var requireKey=function(key,obj){if(obj&&key in obj){return obj[key];}else{throw new Error('Missing required key ('+key+') in object: '+stringify(obj));}};var ObjectToUniqueKey=function(obj){if(typeof obj!=='object'||obj===null){return stringify(obj);}var keys=[];// eslint-disable-next-line guard-for-in\nfor(var k in obj){keys.push(k);}// Export as json, but with the keys sorted.\nkeys.sort();var key='{';for(var i=0;i<keys.length;i++){if(i!==0){key+=',';}key+=stringify(keys[i]);key+=':';key+=ObjectToUniqueKey(obj[keys[i]]);}key+='}';return key;};/**\r\n * Splits a string into a number of smaller segments of maximum size\r\n * @param str - The string\r\n * @param segsize - The maximum number of chars in the string.\r\n * @returns The string, split into appropriately-sized chunks\r\n */var splitStringBySize=function(str,segsize){var len=str.length;if(len<=segsize){return[str];}var dataSegs=[];for(var c=0;c<len;c+=segsize){if(c+segsize>len){dataSegs.push(str.substring(c,len));}else{dataSegs.push(str.substring(c,c+segsize));}}return dataSegs;};/**\r\n * Apply a function to each (key, value) pair in an object or\r\n * apply a function to each (index, value) pair in an array\r\n * @param obj - The object or array to iterate over\r\n * @param fn - The function to apply\r\n */function each(obj,fn){for(var key in obj){if(obj.hasOwnProperty(key)){fn(key,obj[key]);}}}/**\r\n * Borrowed from http://hg.secondlife.com/llsd/src/tip/js/typedarray.js (MIT License)\r\n * I made one modification at the end and removed the NaN / Infinity\r\n * handling (since it seemed broken [caused an overflow] and we don't need it).  See MJL comments.\r\n * @param v - A double\r\n *\r\n */var doubleToIEEE754String=function(v){assert(!isInvalidJSONNumber(v),'Invalid JSON number');// MJL\nvar ebits=11,fbits=52;var bias=(1<<ebits-1)-1;var s,e,f,ln,i;// Compute sign, exponent, fraction\n// Skip NaN / Infinity handling --MJL.\nif(v===0){e=0;f=0;s=1/v===-Infinity?1:0;}else{s=v<0;v=Math.abs(v);if(v>=Math.pow(2,1-bias)){// Normalized\nln=Math.min(Math.floor(Math.log(v)/Math.LN2),bias);e=ln+bias;f=Math.round(v*Math.pow(2,fbits-ln)-Math.pow(2,fbits));}else{// Denormalized\ne=0;f=Math.round(v/Math.pow(2,1-bias-fbits));}}// Pack sign, exponent, fraction\nvar bits=[];for(i=fbits;i;i-=1){bits.push(f%2?1:0);f=Math.floor(f/2);}for(i=ebits;i;i-=1){bits.push(e%2?1:0);e=Math.floor(e/2);}bits.push(s?1:0);bits.reverse();var str=bits.join('');// Return the data as a hex string. --MJL\nvar hexByteString='';for(i=0;i<64;i+=8){var hexByte=parseInt(str.substr(i,8),2).toString(16);if(hexByte.length===1){hexByte='0'+hexByte;}hexByteString=hexByteString+hexByte;}return hexByteString.toLowerCase();};/**\r\n * Used to detect if we're in a Chrome content script (which executes in an\r\n * isolated environment where long-polling doesn't work).\r\n */var isChromeExtensionContentScript=function(){return!!(typeof window==='object'&&window['chrome']&&window['chrome']['extension']&&!/^chrome/.test(window.location.href));};/**\r\n * Used to detect if we're in a Windows 8 Store app.\r\n */var isWindowsStoreApp=function(){// Check for the presence of a couple WinRT globals\nreturn typeof Windows==='object'&&typeof Windows.UI==='object';};/**\r\n * Converts a server error code to a Javascript Error\r\n */function errorForServerCode(code,query){var reason='Unknown Error';if(code==='too_big'){reason='The data requested exceeds the maximum size '+'that can be accessed with a single request.';}else if(code==='permission_denied'){reason=\"Client doesn't have permission to access the desired data.\";}else if(code==='unavailable'){reason='The service is unavailable';}var error=new Error(code+' at '+query._path.toString()+': '+reason);// eslint-disable-next-line @typescript-eslint/no-explicit-any\nerror.code=code.toUpperCase();return error;}/**\r\n * Used to test for integer-looking strings\r\n */var INTEGER_REGEXP_=new RegExp('^-?(0*)\\\\d{1,10}$');/**\r\n * For use in keys, the minimum possible 32-bit integer.\r\n */var INTEGER_32_MIN=-2147483648;/**\r\n * For use in kyes, the maximum possible 32-bit integer.\r\n */var INTEGER_32_MAX=2147483647;/**\r\n * If the string contains a 32-bit integer, return it.  Else return null.\r\n */var tryParseInt=function(str){if(INTEGER_REGEXP_.test(str)){var intVal=Number(str);if(intVal>=INTEGER_32_MIN&&intVal<=INTEGER_32_MAX){return intVal;}}return null;};/**\r\n * Helper to run some code but catch any exceptions and re-throw them later.\r\n * Useful for preventing user callbacks from breaking internal code.\r\n *\r\n * Re-throwing the exception from a setTimeout is a little evil, but it's very\r\n * convenient (we don't have to try to figure out when is a safe point to\r\n * re-throw it), and the behavior seems reasonable:\r\n *\r\n * * If you aren't pausing on exceptions, you get an error in the console with\r\n *   the correct stack trace.\r\n * * If you're pausing on all exceptions, the debugger will pause on your\r\n *   exception and then again when we rethrow it.\r\n * * If you're only pausing on uncaught exceptions, the debugger will only pause\r\n *   on us re-throwing it.\r\n *\r\n * @param fn - The code to guard.\r\n */var exceptionGuard=function(fn){try{fn();}catch(e){// Re-throw exception when it's safe.\nsetTimeout(function(){// It used to be that \"throw e\" would result in a good console error with\n// relevant context, but as of Chrome 39, you just get the firebase.js\n// file/line number where we re-throw it, which is useless. So we log\n// e.stack explicitly.\nvar stack=e.stack||'';warn('Exception was thrown by user callback.',stack);throw e;},Math.floor(0));}};/**\r\n * @returns {boolean} true if we think we're currently being crawled.\r\n */var beingCrawled=function(){var userAgent=typeof window==='object'&&window['navigator']&&window['navigator']['userAgent']||'';// For now we whitelist the most popular crawlers.  We should refine this to be the set of crawlers we\n// believe to support JavaScript/AJAX rendering.\n// NOTE: Google Webmaster Tools doesn't really belong, but their \"This is how a visitor to your website\n// would have seen the page\" is flaky if we don't treat it as a crawler.\nreturn userAgent.search(/googlebot|google webmaster tools|bingbot|yahoo! slurp|baiduspider|yandexbot|duckduckbot/i)>=0;};/**\r\n * Same as setTimeout() except on Node.JS it will /not/ prevent the process from exiting.\r\n *\r\n * It is removed with clearTimeout() as normal.\r\n *\r\n * @param fn - Function to run.\r\n * @param time - Milliseconds to wait before running.\r\n * @returns The setTimeout() return value.\r\n */var setTimeoutNonBlocking=function(fn,time){var timeout=setTimeout(fn,time);// eslint-disable-next-line @typescript-eslint/no-explicit-any\nif(typeof timeout==='object'&&timeout['unref']){// eslint-disable-next-line @typescript-eslint/no-explicit-any\ntimeout['unref']();}return timeout;};/**\r\n * @license\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * Abstraction around AppCheck's token fetching capabilities.\r\n */var AppCheckTokenProvider=/** @class */function(){function AppCheckTokenProvider(appName_,appCheckProvider){var _this=this;this.appName_=appName_;this.appCheckProvider=appCheckProvider;this.appCheck=appCheckProvider===null||appCheckProvider===void 0?void 0:appCheckProvider.getImmediate({optional:true});if(!this.appCheck){appCheckProvider===null||appCheckProvider===void 0?void 0:appCheckProvider.get().then(function(appCheck){return _this.appCheck=appCheck;});}}AppCheckTokenProvider.prototype.getToken=function(forceRefresh){var _this=this;if(!this.appCheck){return new Promise(function(resolve,reject){// Support delayed initialization of FirebaseAppCheck. This allows our\n// customers to initialize the RTDB SDK before initializing Firebase\n// AppCheck and ensures that all requests are authenticated if a token\n// becomes available before the timoeout below expires.\nsetTimeout(function(){if(_this.appCheck){_this.getToken(forceRefresh).then(resolve,reject);}else{resolve(null);}},0);});}return this.appCheck.getToken(forceRefresh);};AppCheckTokenProvider.prototype.addTokenChangeListener=function(listener){var _a;(_a=this.appCheckProvider)===null||_a===void 0?void 0:_a.get().then(function(appCheck){return appCheck.addTokenListener(listener);});};AppCheckTokenProvider.prototype.notifyForInvalidToken=function(){warn(\"Provided AppCheck credentials for the app named \\\"\"+this.appName_+\"\\\" \"+'are invalid. This usually indicates your app was not initialized correctly.');};return AppCheckTokenProvider;}();/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * Abstraction around FirebaseApp's token fetching capabilities.\r\n */var FirebaseAuthTokenProvider=/** @class */function(){function FirebaseAuthTokenProvider(appName_,firebaseOptions_,authProvider_){var _this=this;this.appName_=appName_;this.firebaseOptions_=firebaseOptions_;this.authProvider_=authProvider_;this.auth_=null;this.auth_=authProvider_.getImmediate({optional:true});if(!this.auth_){authProvider_.onInit(function(auth){return _this.auth_=auth;});}}FirebaseAuthTokenProvider.prototype.getToken=function(forceRefresh){var _this=this;if(!this.auth_){return new Promise(function(resolve,reject){// Support delayed initialization of FirebaseAuth. This allows our\n// customers to initialize the RTDB SDK before initializing Firebase\n// Auth and ensures that all requests are authenticated if a token\n// becomes available before the timoeout below expires.\nsetTimeout(function(){if(_this.auth_){_this.getToken(forceRefresh).then(resolve,reject);}else{resolve(null);}},0);});}return this.auth_.getToken(forceRefresh).catch(function(error){// TODO: Need to figure out all the cases this is raised and whether\n// this makes sense.\nif(error&&error.code==='auth/token-not-initialized'){log('Got auth/token-not-initialized error.  Treating as null token.');return null;}else{return Promise.reject(error);}});};FirebaseAuthTokenProvider.prototype.addTokenChangeListener=function(listener){// TODO: We might want to wrap the listener and call it with no args to\n// avoid a leaky abstraction, but that makes removing the listener harder.\nif(this.auth_){this.auth_.addAuthTokenListener(listener);}else{this.authProvider_.get().then(function(auth){return auth.addAuthTokenListener(listener);});}};FirebaseAuthTokenProvider.prototype.removeTokenChangeListener=function(listener){this.authProvider_.get().then(function(auth){return auth.removeAuthTokenListener(listener);});};FirebaseAuthTokenProvider.prototype.notifyForInvalidToken=function(){var errorMessage='Provided authentication credentials for the app named \"'+this.appName_+'\" are invalid. This usually indicates your app was not '+'initialized correctly. ';if('credential'in this.firebaseOptions_){errorMessage+='Make sure the \"credential\" property provided to initializeApp() '+'is authorized to access the specified \"databaseURL\" and is from the correct '+'project.';}else if('serviceAccount'in this.firebaseOptions_){errorMessage+='Make sure the \"serviceAccount\" property provided to initializeApp() '+'is authorized to access the specified \"databaseURL\" and is from the correct '+'project.';}else{errorMessage+='Make sure the \"apiKey\" and \"databaseURL\" properties provided to '+'initializeApp() match the values provided for your app at '+'https://console.firebase.google.com/.';}warn(errorMessage);};return FirebaseAuthTokenProvider;}();/* AuthTokenProvider that supplies a constant token. Used by Admin SDK or mockUserToken with emulators. */var EmulatorTokenProvider=/** @class */function(){function EmulatorTokenProvider(accessToken){this.accessToken=accessToken;}EmulatorTokenProvider.prototype.getToken=function(forceRefresh){return Promise.resolve({accessToken:this.accessToken});};EmulatorTokenProvider.prototype.addTokenChangeListener=function(listener){// Invoke the listener immediately to match the behavior in Firebase Auth\n// (see packages/auth/src/auth.js#L1807)\nlistener(this.accessToken);};EmulatorTokenProvider.prototype.removeTokenChangeListener=function(listener){};EmulatorTokenProvider.prototype.notifyForInvalidToken=function(){};/** A string that is treated as an admin access token by the RTDB emulator. Used by Admin SDK. */EmulatorTokenProvider.OWNER='owner';return EmulatorTokenProvider;}();/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */var PROTOCOL_VERSION='5';var VERSION_PARAM='v';var TRANSPORT_SESSION_PARAM='s';var REFERER_PARAM='r';var FORGE_REF='f';// Matches console.firebase.google.com, firebase-console-*.corp.google.com and\n// firebase.corp.google.com\nvar FORGE_DOMAIN_RE=/(console\\.firebase|firebase-console-\\w+\\.corp|firebase\\.corp)\\.google\\.com/;var LAST_SESSION_PARAM='ls';var APPLICATION_ID_PARAM='p';var APP_CHECK_TOKEN_PARAM='ac';var WEBSOCKET='websocket';var LONG_POLLING='long_polling';/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * A class that holds metadata about a Repo object\r\n */var RepoInfo=/** @class */function(){/**\r\n     * @param host - Hostname portion of the url for the repo\r\n     * @param secure - Whether or not this repo is accessed over ssl\r\n     * @param namespace - The namespace represented by the repo\r\n     * @param webSocketOnly - Whether to prefer websockets over all other transports (used by Nest).\r\n     * @param nodeAdmin - Whether this instance uses Admin SDK credentials\r\n     * @param persistenceKey - Override the default session persistence storage key\r\n     */function RepoInfo(host,secure,namespace,webSocketOnly,nodeAdmin,persistenceKey,includeNamespaceInQueryParams){if(nodeAdmin===void 0){nodeAdmin=false;}if(persistenceKey===void 0){persistenceKey='';}if(includeNamespaceInQueryParams===void 0){includeNamespaceInQueryParams=false;}this.secure=secure;this.namespace=namespace;this.webSocketOnly=webSocketOnly;this.nodeAdmin=nodeAdmin;this.persistenceKey=persistenceKey;this.includeNamespaceInQueryParams=includeNamespaceInQueryParams;this._host=host.toLowerCase();this._domain=this._host.substr(this._host.indexOf('.')+1);this.internalHost=PersistentStorage.get('host:'+host)||this._host;}RepoInfo.prototype.isCacheableHost=function(){return this.internalHost.substr(0,2)==='s-';};RepoInfo.prototype.isCustomHost=function(){return this._domain!=='firebaseio.com'&&this._domain!=='firebaseio-demo.com';};Object.defineProperty(RepoInfo.prototype,\"host\",{get:function(){return this._host;},set:function(newHost){if(newHost!==this.internalHost){this.internalHost=newHost;if(this.isCacheableHost()){PersistentStorage.set('host:'+this._host,this.internalHost);}}},enumerable:false,configurable:true});RepoInfo.prototype.toString=function(){var str=this.toURLString();if(this.persistenceKey){str+='<'+this.persistenceKey+'>';}return str;};RepoInfo.prototype.toURLString=function(){var protocol=this.secure?'https://':'http://';var query=this.includeNamespaceInQueryParams?\"?ns=\"+this.namespace:'';return\"\"+protocol+this.host+\"/\"+query;};return RepoInfo;}();function repoInfoNeedsQueryParam(repoInfo){return repoInfo.host!==repoInfo.internalHost||repoInfo.isCustomHost()||repoInfo.includeNamespaceInQueryParams;}/**\r\n * Returns the websocket URL for this repo\r\n * @param repoInfo - RepoInfo object\r\n * @param type - of connection\r\n * @param params - list\r\n * @returns The URL for this repo\r\n */function repoInfoConnectionURL(repoInfo,type,params){assert(typeof type==='string','typeof type must == string');assert(typeof params==='object','typeof params must == object');var connURL;if(type===WEBSOCKET){connURL=(repoInfo.secure?'wss://':'ws://')+repoInfo.internalHost+'/.ws?';}else if(type===LONG_POLLING){connURL=(repoInfo.secure?'https://':'http://')+repoInfo.internalHost+'/.lp?';}else{throw new Error('Unknown connection type: '+type);}if(repoInfoNeedsQueryParam(repoInfo)){params['ns']=repoInfo.namespace;}var pairs=[];each(params,function(key,value){pairs.push(key+'='+value);});return connURL+pairs.join('&');}/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * Tracks a collection of stats.\r\n */var StatsCollection=/** @class */function(){function StatsCollection(){this.counters_={};}StatsCollection.prototype.incrementCounter=function(name,amount){if(amount===void 0){amount=1;}if(!contains(this.counters_,name)){this.counters_[name]=0;}this.counters_[name]+=amount;};StatsCollection.prototype.get=function(){return deepCopy(this.counters_);};return StatsCollection;}();/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */var collections={};var reporters={};function statsManagerGetCollection(repoInfo){var hashString=repoInfo.toString();if(!collections[hashString]){collections[hashString]=new StatsCollection();}return collections[hashString];}function statsManagerGetOrCreateReporter(repoInfo,creatorFunction){var hashString=repoInfo.toString();if(!reporters[hashString]){reporters[hashString]=creatorFunction();}return reporters[hashString];}/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * This class ensures the packets from the server arrive in order\r\n * This class takes data from the server and ensures it gets passed into the callbacks in order.\r\n */var PacketReceiver=/** @class */function(){/**\r\n     * @param onMessage_\r\n     */function PacketReceiver(onMessage_){this.onMessage_=onMessage_;this.pendingResponses=[];this.currentResponseNum=0;this.closeAfterResponse=-1;this.onClose=null;}PacketReceiver.prototype.closeAfter=function(responseNum,callback){this.closeAfterResponse=responseNum;this.onClose=callback;if(this.closeAfterResponse<this.currentResponseNum){this.onClose();this.onClose=null;}};/**\r\n     * Each message from the server comes with a response number, and an array of data. The responseNumber\r\n     * allows us to ensure that we process them in the right order, since we can't be guaranteed that all\r\n     * browsers will respond in the same order as the requests we sent\r\n     */PacketReceiver.prototype.handleResponse=function(requestNum,data){var _this=this;this.pendingResponses[requestNum]=data;var _loop_1=function(){var toProcess=this_1.pendingResponses[this_1.currentResponseNum];delete this_1.pendingResponses[this_1.currentResponseNum];var _loop_2=function(i){if(toProcess[i]){exceptionGuard(function(){_this.onMessage_(toProcess[i]);});}};for(var i=0;i<toProcess.length;++i){_loop_2(i);}if(this_1.currentResponseNum===this_1.closeAfterResponse){if(this_1.onClose){this_1.onClose();this_1.onClose=null;}return\"break\";}this_1.currentResponseNum++;};var this_1=this;while(this.pendingResponses[this.currentResponseNum]){var state_1=_loop_1();if(state_1===\"break\")break;}};return PacketReceiver;}();/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ // URL query parameters associated with longpolling\nvar FIREBASE_LONGPOLL_START_PARAM='start';var FIREBASE_LONGPOLL_CLOSE_COMMAND='close';var FIREBASE_LONGPOLL_COMMAND_CB_NAME='pLPCommand';var FIREBASE_LONGPOLL_DATA_CB_NAME='pRTLPCB';var FIREBASE_LONGPOLL_ID_PARAM='id';var FIREBASE_LONGPOLL_PW_PARAM='pw';var FIREBASE_LONGPOLL_SERIAL_PARAM='ser';var FIREBASE_LONGPOLL_CALLBACK_ID_PARAM='cb';var FIREBASE_LONGPOLL_SEGMENT_NUM_PARAM='seg';var FIREBASE_LONGPOLL_SEGMENTS_IN_PACKET='ts';var FIREBASE_LONGPOLL_DATA_PARAM='d';var FIREBASE_LONGPOLL_DISCONN_FRAME_REQUEST_PARAM='dframe';//Data size constants.\n//TODO: Perf: the maximum length actually differs from browser to browser.\n// We should check what browser we're on and set accordingly.\nvar MAX_URL_DATA_SIZE=1870;var SEG_HEADER_SIZE=30;//ie: &seg=8299234&ts=982389123&d=\nvar MAX_PAYLOAD_SIZE=MAX_URL_DATA_SIZE-SEG_HEADER_SIZE;/**\r\n * Keepalive period\r\n * send a fresh request at minimum every 25 seconds. Opera has a maximum request\r\n * length of 30 seconds that we can't exceed.\r\n */var KEEPALIVE_REQUEST_INTERVAL=25000;/**\r\n * How long to wait before aborting a long-polling connection attempt.\r\n */var LP_CONNECT_TIMEOUT=30000;/**\r\n * This class manages a single long-polling connection.\r\n */var BrowserPollConnection=/** @class */function(){/**\r\n     * @param connId An identifier for this connection, used for logging\r\n     * @param repoInfo The info for the endpoint to send data to.\r\n     * @param applicationId The Firebase App ID for this project.\r\n     * @param appCheckToken The AppCheck token for this client.\r\n     * @param authToken The AuthToken to use for this connection.\r\n     * @param transportSessionId Optional transportSessionid if we are\r\n     * reconnecting for an existing transport session\r\n     * @param lastSessionId Optional lastSessionId if the PersistentConnection has\r\n     * already created a connection previously\r\n     */function BrowserPollConnection(connId,repoInfo,applicationId,appCheckToken,authToken,transportSessionId,lastSessionId){var _this=this;this.connId=connId;this.repoInfo=repoInfo;this.applicationId=applicationId;this.appCheckToken=appCheckToken;this.authToken=authToken;this.transportSessionId=transportSessionId;this.lastSessionId=lastSessionId;this.bytesSent=0;this.bytesReceived=0;this.everConnected_=false;this.log_=logWrapper(connId);this.stats_=statsManagerGetCollection(repoInfo);this.urlFn=function(params){// Always add the token if we have one.\nif(_this.appCheckToken){params[APP_CHECK_TOKEN_PARAM]=_this.appCheckToken;}return repoInfoConnectionURL(repoInfo,LONG_POLLING,params);};}/**\r\n     * @param onMessage - Callback when messages arrive\r\n     * @param onDisconnect - Callback with connection lost.\r\n     */BrowserPollConnection.prototype.open=function(onMessage,onDisconnect){var _this=this;this.curSegmentNum=0;this.onDisconnect_=onDisconnect;this.myPacketOrderer=new PacketReceiver(onMessage);this.isClosed_=false;this.connectTimeoutTimer_=setTimeout(function(){_this.log_('Timed out trying to connect.');// Make sure we clear the host cache\n_this.onClosed_();_this.connectTimeoutTimer_=null;// eslint-disable-next-line @typescript-eslint/no-explicit-any\n},Math.floor(LP_CONNECT_TIMEOUT));// Ensure we delay the creation of the iframe until the DOM is loaded.\nexecuteWhenDOMReady(function(){if(_this.isClosed_){return;}//Set up a callback that gets triggered once a connection is set up.\n_this.scriptTagHolder=new FirebaseIFrameScriptHolder(function(){var args=[];for(var _i=0;_i<arguments.length;_i++){args[_i]=arguments[_i];}var _a=__read(args,5),command=_a[0],arg1=_a[1],arg2=_a[2];_a[3];_a[4];_this.incrementIncomingBytes_(args);if(!_this.scriptTagHolder){return;// we closed the connection.\n}if(_this.connectTimeoutTimer_){clearTimeout(_this.connectTimeoutTimer_);_this.connectTimeoutTimer_=null;}_this.everConnected_=true;if(command===FIREBASE_LONGPOLL_START_PARAM){_this.id=arg1;_this.password=arg2;}else if(command===FIREBASE_LONGPOLL_CLOSE_COMMAND){// Don't clear the host cache. We got a response from the server, so we know it's reachable\nif(arg1){// We aren't expecting any more data (other than what the server's already in the process of sending us\n// through our already open polls), so don't send any more.\n_this.scriptTagHolder.sendNewPolls=false;// arg1 in this case is the last response number sent by the server. We should try to receive\n// all of the responses up to this one before closing\n_this.myPacketOrderer.closeAfter(arg1,function(){_this.onClosed_();});}else{_this.onClosed_();}}else{throw new Error('Unrecognized command received: '+command);}},function(){var args=[];for(var _i=0;_i<arguments.length;_i++){args[_i]=arguments[_i];}var _a=__read(args,2),pN=_a[0],data=_a[1];_this.incrementIncomingBytes_(args);_this.myPacketOrderer.handleResponse(pN,data);},function(){_this.onClosed_();},_this.urlFn);//Send the initial request to connect. The serial number is simply to keep the browser from pulling previous results\n//from cache.\nvar urlParams={};urlParams[FIREBASE_LONGPOLL_START_PARAM]='t';urlParams[FIREBASE_LONGPOLL_SERIAL_PARAM]=Math.floor(Math.random()*100000000);if(_this.scriptTagHolder.uniqueCallbackIdentifier){urlParams[FIREBASE_LONGPOLL_CALLBACK_ID_PARAM]=_this.scriptTagHolder.uniqueCallbackIdentifier;}urlParams[VERSION_PARAM]=PROTOCOL_VERSION;if(_this.transportSessionId){urlParams[TRANSPORT_SESSION_PARAM]=_this.transportSessionId;}if(_this.lastSessionId){urlParams[LAST_SESSION_PARAM]=_this.lastSessionId;}if(_this.applicationId){urlParams[APPLICATION_ID_PARAM]=_this.applicationId;}if(_this.appCheckToken){urlParams[APP_CHECK_TOKEN_PARAM]=_this.appCheckToken;}if(typeof location!=='undefined'&&location.hostname&&FORGE_DOMAIN_RE.test(location.hostname)){urlParams[REFERER_PARAM]=FORGE_REF;}var connectURL=_this.urlFn(urlParams);_this.log_('Connecting via long-poll to '+connectURL);_this.scriptTagHolder.addTag(connectURL,function(){/* do nothing */});});};/**\r\n     * Call this when a handshake has completed successfully and we want to consider the connection established\r\n     */BrowserPollConnection.prototype.start=function(){this.scriptTagHolder.startLongPoll(this.id,this.password);this.addDisconnectPingFrame(this.id,this.password);};/**\r\n     * Forces long polling to be considered as a potential transport\r\n     */BrowserPollConnection.forceAllow=function(){BrowserPollConnection.forceAllow_=true;};/**\r\n     * Forces longpolling to not be considered as a potential transport\r\n     */BrowserPollConnection.forceDisallow=function(){BrowserPollConnection.forceDisallow_=true;};// Static method, use string literal so it can be accessed in a generic way\nBrowserPollConnection.isAvailable=function(){if(isNodeSdk()){return false;}else if(BrowserPollConnection.forceAllow_){return true;}else{// NOTE: In React-Native there's normally no 'document', but if you debug a React-Native app in\n// the Chrome debugger, 'document' is defined, but document.createElement is null (2015/06/08).\nreturn!BrowserPollConnection.forceDisallow_&&typeof document!=='undefined'&&document.createElement!=null&&!isChromeExtensionContentScript()&&!isWindowsStoreApp();}};/**\r\n     * No-op for polling\r\n     */BrowserPollConnection.prototype.markConnectionHealthy=function(){};/**\r\n     * Stops polling and cleans up the iframe\r\n     */BrowserPollConnection.prototype.shutdown_=function(){this.isClosed_=true;if(this.scriptTagHolder){this.scriptTagHolder.close();this.scriptTagHolder=null;}//remove the disconnect frame, which will trigger an XHR call to the server to tell it we're leaving.\nif(this.myDisconnFrame){document.body.removeChild(this.myDisconnFrame);this.myDisconnFrame=null;}if(this.connectTimeoutTimer_){clearTimeout(this.connectTimeoutTimer_);this.connectTimeoutTimer_=null;}};/**\r\n     * Triggered when this transport is closed\r\n     */BrowserPollConnection.prototype.onClosed_=function(){if(!this.isClosed_){this.log_('Longpoll is closing itself');this.shutdown_();if(this.onDisconnect_){this.onDisconnect_(this.everConnected_);this.onDisconnect_=null;}}};/**\r\n     * External-facing close handler. RealTime has requested we shut down. Kill our connection and tell the server\r\n     * that we've left.\r\n     */BrowserPollConnection.prototype.close=function(){if(!this.isClosed_){this.log_('Longpoll is being closed.');this.shutdown_();}};/**\r\n     * Send the JSON object down to the server. It will need to be stringified, base64 encoded, and then\r\n     * broken into chunks (since URLs have a small maximum length).\r\n     * @param data - The JSON data to transmit.\r\n     */BrowserPollConnection.prototype.send=function(data){var dataStr=stringify(data);this.bytesSent+=dataStr.length;this.stats_.incrementCounter('bytes_sent',dataStr.length);//first, lets get the base64-encoded data\nvar base64data=base64Encode(dataStr);//We can only fit a certain amount in each URL, so we need to split this request\n//up into multiple pieces if it doesn't fit in one request.\nvar dataSegs=splitStringBySize(base64data,MAX_PAYLOAD_SIZE);//Enqueue each segment for transmission. We assign each chunk a sequential ID and a total number\n//of segments so that we can reassemble the packet on the server.\nfor(var i=0;i<dataSegs.length;i++){this.scriptTagHolder.enqueueSegment(this.curSegmentNum,dataSegs.length,dataSegs[i]);this.curSegmentNum++;}};/**\r\n     * This is how we notify the server that we're leaving.\r\n     * We aren't able to send requests with DHTML on a window close event, but we can\r\n     * trigger XHR requests in some browsers (everything but Opera basically).\r\n     */BrowserPollConnection.prototype.addDisconnectPingFrame=function(id,pw){if(isNodeSdk()){return;}this.myDisconnFrame=document.createElement('iframe');var urlParams={};urlParams[FIREBASE_LONGPOLL_DISCONN_FRAME_REQUEST_PARAM]='t';urlParams[FIREBASE_LONGPOLL_ID_PARAM]=id;urlParams[FIREBASE_LONGPOLL_PW_PARAM]=pw;this.myDisconnFrame.src=this.urlFn(urlParams);this.myDisconnFrame.style.display='none';document.body.appendChild(this.myDisconnFrame);};/**\r\n     * Used to track the bytes received by this client\r\n     */BrowserPollConnection.prototype.incrementIncomingBytes_=function(args){// TODO: This is an annoying perf hit just to track the number of incoming bytes.  Maybe it should be opt-in.\nvar bytesReceived=stringify(args).length;this.bytesReceived+=bytesReceived;this.stats_.incrementCounter('bytes_received',bytesReceived);};return BrowserPollConnection;}();/*********************************************************************************************\r\n * A wrapper around an iframe that is used as a long-polling script holder.\r\n *********************************************************************************************/var FirebaseIFrameScriptHolder=/** @class */function(){/**\r\n     * @param commandCB - The callback to be called when control commands are recevied from the server.\r\n     * @param onMessageCB - The callback to be triggered when responses arrive from the server.\r\n     * @param onDisconnect - The callback to be triggered when this tag holder is closed\r\n     * @param urlFn - A function that provides the URL of the endpoint to send data to.\r\n     */function FirebaseIFrameScriptHolder(commandCB,onMessageCB,onDisconnect,urlFn){this.onDisconnect=onDisconnect;this.urlFn=urlFn;//We maintain a count of all of the outstanding requests, because if we have too many active at once it can cause\n//problems in some browsers.\nthis.outstandingRequests=new Set();//A queue of the pending segments waiting for transmission to the server.\nthis.pendingSegs=[];//A serial number. We use this for two things:\n// 1) A way to ensure the browser doesn't cache responses to polls\n// 2) A way to make the server aware when long-polls arrive in a different order than we started them. The\n//    server needs to release both polls in this case or it will cause problems in Opera since Opera can only execute\n//    JSONP code in the order it was added to the iframe.\nthis.currentSerial=Math.floor(Math.random()*100000000);// This gets set to false when we're \"closing down\" the connection (e.g. we're switching transports but there's still\n// incoming data from the server that we're waiting for).\nthis.sendNewPolls=true;if(!isNodeSdk()){//Each script holder registers a couple of uniquely named callbacks with the window. These are called from the\n//iframes where we put the long-polling script tags. We have two callbacks:\n//   1) Command Callback - Triggered for control issues, like starting a connection.\n//   2) Message Callback - Triggered when new data arrives.\nthis.uniqueCallbackIdentifier=LUIDGenerator();window[FIREBASE_LONGPOLL_COMMAND_CB_NAME+this.uniqueCallbackIdentifier]=commandCB;window[FIREBASE_LONGPOLL_DATA_CB_NAME+this.uniqueCallbackIdentifier]=onMessageCB;//Create an iframe for us to add script tags to.\nthis.myIFrame=FirebaseIFrameScriptHolder.createIFrame_();// Set the iframe's contents.\nvar script='';// if we set a javascript url, it's IE and we need to set the document domain. The javascript url is sufficient\n// for ie9, but ie8 needs to do it again in the document itself.\nif(this.myIFrame.src&&this.myIFrame.src.substr(0,'javascript:'.length)==='javascript:'){var currentDomain=document.domain;script='<script>document.domain=\"'+currentDomain+'\";</script>';}var iframeContents='<html><body>'+script+'</body></html>';try{this.myIFrame.doc.open();this.myIFrame.doc.write(iframeContents);this.myIFrame.doc.close();}catch(e){log('frame writing exception');if(e.stack){log(e.stack);}log(e);}}else{this.commandCB=commandCB;this.onMessageCB=onMessageCB;}}/**\r\n     * Each browser has its own funny way to handle iframes. Here we mush them all together into one object that I can\r\n     * actually use.\r\n     */FirebaseIFrameScriptHolder.createIFrame_=function(){var iframe=document.createElement('iframe');iframe.style.display='none';// This is necessary in order to initialize the document inside the iframe\nif(document.body){document.body.appendChild(iframe);try{// If document.domain has been modified in IE, this will throw an error, and we need to set the\n// domain of the iframe's document manually. We can do this via a javascript: url as the src attribute\n// Also note that we must do this *after* the iframe has been appended to the page. Otherwise it doesn't work.\nvar a=iframe.contentWindow.document;if(!a){// Apologies for the log-spam, I need to do something to keep closure from optimizing out the assignment above.\nlog('No IE domain setting required');}}catch(e){var domain=document.domain;iframe.src=\"javascript:void((function(){document.open();document.domain='\"+domain+\"';document.close();})())\";}}else{// LongPollConnection attempts to delay initialization until the document is ready, so hopefully this\n// never gets hit.\nthrow'Document body has not initialized. Wait to initialize Firebase until after the document is ready.';}// Get the document of the iframe in a browser-specific way.\nif(iframe.contentDocument){iframe.doc=iframe.contentDocument;// Firefox, Opera, Safari\n}else if(iframe.contentWindow){iframe.doc=iframe.contentWindow.document;// Internet Explorer\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\n}else if(iframe.document){// eslint-disable-next-line @typescript-eslint/no-explicit-any\niframe.doc=iframe.document;//others?\n}return iframe;};/**\r\n     * Cancel all outstanding queries and remove the frame.\r\n     */FirebaseIFrameScriptHolder.prototype.close=function(){var _this=this;//Mark this iframe as dead, so no new requests are sent.\nthis.alive=false;if(this.myIFrame){//We have to actually remove all of the html inside this iframe before removing it from the\n//window, or IE will continue loading and executing the script tags we've already added, which\n//can lead to some errors being thrown. Setting innerHTML seems to be the easiest way to do this.\nthis.myIFrame.doc.body.innerHTML='';setTimeout(function(){if(_this.myIFrame!==null){document.body.removeChild(_this.myIFrame);_this.myIFrame=null;}},Math.floor(0));}// Protect from being called recursively.\nvar onDisconnect=this.onDisconnect;if(onDisconnect){this.onDisconnect=null;onDisconnect();}};/**\r\n     * Actually start the long-polling session by adding the first script tag(s) to the iframe.\r\n     * @param id - The ID of this connection\r\n     * @param pw - The password for this connection\r\n     */FirebaseIFrameScriptHolder.prototype.startLongPoll=function(id,pw){this.myID=id;this.myPW=pw;this.alive=true;//send the initial request. If there are requests queued, make sure that we transmit as many as we are currently able to.\nwhile(this.newRequest_()){}};/**\r\n     * This is called any time someone might want a script tag to be added. It adds a script tag when there aren't\r\n     * too many outstanding requests and we are still alive.\r\n     *\r\n     * If there are outstanding packet segments to send, it sends one. If there aren't, it sends a long-poll anyways if\r\n     * needed.\r\n     */FirebaseIFrameScriptHolder.prototype.newRequest_=function(){// We keep one outstanding request open all the time to receive data, but if we need to send data\n// (pendingSegs.length > 0) then we create a new request to send the data.  The server will automatically\n// close the old request.\nif(this.alive&&this.sendNewPolls&&this.outstandingRequests.size<(this.pendingSegs.length>0?2:1)){//construct our url\nthis.currentSerial++;var urlParams={};urlParams[FIREBASE_LONGPOLL_ID_PARAM]=this.myID;urlParams[FIREBASE_LONGPOLL_PW_PARAM]=this.myPW;urlParams[FIREBASE_LONGPOLL_SERIAL_PARAM]=this.currentSerial;var theURL=this.urlFn(urlParams);//Now add as much data as we can.\nvar curDataString='';var i=0;while(this.pendingSegs.length>0){//first, lets see if the next segment will fit.\nvar nextSeg=this.pendingSegs[0];if(nextSeg.d.length+SEG_HEADER_SIZE+curDataString.length<=MAX_URL_DATA_SIZE){//great, the segment will fit. Lets append it.\nvar theSeg=this.pendingSegs.shift();curDataString=curDataString+'&'+FIREBASE_LONGPOLL_SEGMENT_NUM_PARAM+i+'='+theSeg.seg+'&'+FIREBASE_LONGPOLL_SEGMENTS_IN_PACKET+i+'='+theSeg.ts+'&'+FIREBASE_LONGPOLL_DATA_PARAM+i+'='+theSeg.d;i++;}else{break;}}theURL=theURL+curDataString;this.addLongPollTag_(theURL,this.currentSerial);return true;}else{return false;}};/**\r\n     * Queue a packet for transmission to the server.\r\n     * @param segnum - A sequential id for this packet segment used for reassembly\r\n     * @param totalsegs - The total number of segments in this packet\r\n     * @param data - The data for this segment.\r\n     */FirebaseIFrameScriptHolder.prototype.enqueueSegment=function(segnum,totalsegs,data){//add this to the queue of segments to send.\nthis.pendingSegs.push({seg:segnum,ts:totalsegs,d:data});//send the data immediately if there isn't already data being transmitted, unless\n//startLongPoll hasn't been called yet.\nif(this.alive){this.newRequest_();}};/**\r\n     * Add a script tag for a regular long-poll request.\r\n     * @param url - The URL of the script tag.\r\n     * @param serial - The serial number of the request.\r\n     */FirebaseIFrameScriptHolder.prototype.addLongPollTag_=function(url,serial){var _this=this;//remember that we sent this request.\nthis.outstandingRequests.add(serial);var doNewRequest=function(){_this.outstandingRequests.delete(serial);_this.newRequest_();};// If this request doesn't return on its own accord (by the server sending us some data), we'll\n// create a new one after the KEEPALIVE interval to make sure we always keep a fresh request open.\nvar keepaliveTimeout=setTimeout(doNewRequest,Math.floor(KEEPALIVE_REQUEST_INTERVAL));var readyStateCB=function(){// Request completed.  Cancel the keepalive.\nclearTimeout(keepaliveTimeout);// Trigger a new request so we can continue receiving data.\ndoNewRequest();};this.addTag(url,readyStateCB);};/**\r\n     * Add an arbitrary script tag to the iframe.\r\n     * @param url - The URL for the script tag source.\r\n     * @param loadCB - A callback to be triggered once the script has loaded.\r\n     */FirebaseIFrameScriptHolder.prototype.addTag=function(url,loadCB){var _this=this;if(isNodeSdk()){// eslint-disable-next-line @typescript-eslint/no-explicit-any\nthis.doNodeLongPoll(url,loadCB);}else{setTimeout(function(){try{// if we're already closed, don't add this poll\nif(!_this.sendNewPolls){return;}var newScript_1=_this.myIFrame.doc.createElement('script');newScript_1.type='text/javascript';newScript_1.async=true;newScript_1.src=url;// eslint-disable-next-line @typescript-eslint/no-explicit-any\nnewScript_1.onload=newScript_1.onreadystatechange=function(){// eslint-disable-next-line @typescript-eslint/no-explicit-any\nvar rstate=newScript_1.readyState;if(!rstate||rstate==='loaded'||rstate==='complete'){// eslint-disable-next-line @typescript-eslint/no-explicit-any\nnewScript_1.onload=newScript_1.onreadystatechange=null;if(newScript_1.parentNode){newScript_1.parentNode.removeChild(newScript_1);}loadCB();}};newScript_1.onerror=function(){log('Long-poll script failed to load: '+url);_this.sendNewPolls=false;_this.close();};_this.myIFrame.doc.body.appendChild(newScript_1);}catch(e){// TODO: we should make this error visible somehow\n}},Math.floor(1));}};return FirebaseIFrameScriptHolder;}();/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */var WEBSOCKET_MAX_FRAME_SIZE=16384;var WEBSOCKET_KEEPALIVE_INTERVAL=45000;var WebSocketImpl=null;if(typeof MozWebSocket!=='undefined'){WebSocketImpl=MozWebSocket;}else if(typeof WebSocket!=='undefined'){WebSocketImpl=WebSocket;}/**\r\n * Create a new websocket connection with the given callbacks.\r\n */var WebSocketConnection=/** @class */function(){/**\r\n     * @param connId identifier for this transport\r\n     * @param repoInfo The info for the websocket endpoint.\r\n     * @param applicationId The Firebase App ID for this project.\r\n     * @param appCheckToken The App Check Token for this client.\r\n     * @param authToken The Auth Token for this client.\r\n     * @param transportSessionId Optional transportSessionId if this is connecting\r\n     * to an existing transport session\r\n     * @param lastSessionId Optional lastSessionId if there was a previous\r\n     * connection\r\n     */function WebSocketConnection(connId,repoInfo,applicationId,appCheckToken,authToken,transportSessionId,lastSessionId){this.connId=connId;this.applicationId=applicationId;this.appCheckToken=appCheckToken;this.authToken=authToken;this.keepaliveTimer=null;this.frames=null;this.totalFrames=0;this.bytesSent=0;this.bytesReceived=0;this.log_=logWrapper(this.connId);this.stats_=statsManagerGetCollection(repoInfo);this.connURL=WebSocketConnection.connectionURL_(repoInfo,transportSessionId,lastSessionId,appCheckToken);this.nodeAdmin=repoInfo.nodeAdmin;}/**\r\n     * @param repoInfo - The info for the websocket endpoint.\r\n     * @param transportSessionId - Optional transportSessionId if this is connecting to an existing transport\r\n     *                                         session\r\n     * @param lastSessionId - Optional lastSessionId if there was a previous connection\r\n     * @returns connection url\r\n     */WebSocketConnection.connectionURL_=function(repoInfo,transportSessionId,lastSessionId,appCheckToken){var urlParams={};urlParams[VERSION_PARAM]=PROTOCOL_VERSION;if(!isNodeSdk()&&typeof location!=='undefined'&&location.hostname&&FORGE_DOMAIN_RE.test(location.hostname)){urlParams[REFERER_PARAM]=FORGE_REF;}if(transportSessionId){urlParams[TRANSPORT_SESSION_PARAM]=transportSessionId;}if(lastSessionId){urlParams[LAST_SESSION_PARAM]=lastSessionId;}if(appCheckToken){urlParams[APP_CHECK_TOKEN_PARAM]=appCheckToken;}return repoInfoConnectionURL(repoInfo,WEBSOCKET,urlParams);};/**\r\n     * @param onMessage - Callback when messages arrive\r\n     * @param onDisconnect - Callback with connection lost.\r\n     */WebSocketConnection.prototype.open=function(onMessage,onDisconnect){var _this=this;this.onDisconnect=onDisconnect;this.onMessage=onMessage;this.log_('Websocket connecting to '+this.connURL);this.everConnected_=false;// Assume failure until proven otherwise.\nPersistentStorage.set('previous_websocket_failure',true);try{if(isNodeSdk()){var device=this.nodeAdmin?'AdminNode':'Node';// UA Format: Firebase/<wire_protocol>/<sdk_version>/<platform>/<device>\nvar options={headers:{'User-Agent':\"Firebase/\"+PROTOCOL_VERSION+\"/\"+SDK_VERSION+\"/\"+process.platform+\"/\"+device,'X-Firebase-GMPID':this.applicationId||''}};// If using Node with admin creds, AppCheck-related checks are unnecessary.\n// Note that we send the credentials here even if they aren't admin credentials, which is\n// not a problem.\n// Note that this header is just used to bypass appcheck, and the token should still be sent\n// through the websocket connection once it is established.\nif(this.authToken){options.headers['Authorization']=\"Bearer \"+this.authToken;}if(this.appCheckToken){options.headers['X-Firebase-AppCheck']=this.appCheckToken;}// Plumb appropriate http_proxy environment variable into faye-websocket if it exists.\nvar env=process['env'];var proxy=this.connURL.indexOf('wss://')===0?env['HTTPS_PROXY']||env['https_proxy']:env['HTTP_PROXY']||env['http_proxy'];if(proxy){options['proxy']={origin:proxy};}this.mySock=new WebSocketImpl(this.connURL,[],options);}else{var options={headers:{'X-Firebase-GMPID':this.applicationId||'','X-Firebase-AppCheck':this.appCheckToken||''}};this.mySock=new WebSocketImpl(this.connURL,[],options);}}catch(e){this.log_('Error instantiating WebSocket.');var error=e.message||e.data;if(error){this.log_(error);}this.onClosed_();return;}this.mySock.onopen=function(){_this.log_('Websocket connected.');_this.everConnected_=true;};this.mySock.onclose=function(){_this.log_('Websocket connection was disconnected.');_this.mySock=null;_this.onClosed_();};this.mySock.onmessage=function(m){_this.handleIncomingFrame(m);};this.mySock.onerror=function(e){_this.log_('WebSocket error.  Closing connection.');// eslint-disable-next-line @typescript-eslint/no-explicit-any\nvar error=e.message||e.data;if(error){_this.log_(error);}_this.onClosed_();};};/**\r\n     * No-op for websockets, we don't need to do anything once the connection is confirmed as open\r\n     */WebSocketConnection.prototype.start=function(){};WebSocketConnection.forceDisallow=function(){WebSocketConnection.forceDisallow_=true;};WebSocketConnection.isAvailable=function(){var isOldAndroid=false;if(typeof navigator!=='undefined'&&navigator.userAgent){var oldAndroidRegex=/Android ([0-9]{0,}\\.[0-9]{0,})/;var oldAndroidMatch=navigator.userAgent.match(oldAndroidRegex);if(oldAndroidMatch&&oldAndroidMatch.length>1){if(parseFloat(oldAndroidMatch[1])<4.4){isOldAndroid=true;}}}return!isOldAndroid&&WebSocketImpl!==null&&!WebSocketConnection.forceDisallow_;};/**\r\n     * Returns true if we previously failed to connect with this transport.\r\n     */WebSocketConnection.previouslyFailed=function(){// If our persistent storage is actually only in-memory storage,\n// we default to assuming that it previously failed to be safe.\nreturn PersistentStorage.isInMemoryStorage||PersistentStorage.get('previous_websocket_failure')===true;};WebSocketConnection.prototype.markConnectionHealthy=function(){PersistentStorage.remove('previous_websocket_failure');};WebSocketConnection.prototype.appendFrame_=function(data){this.frames.push(data);if(this.frames.length===this.totalFrames){var fullMess=this.frames.join('');this.frames=null;var jsonMess=jsonEval(fullMess);//handle the message\nthis.onMessage(jsonMess);}};/**\r\n     * @param frameCount - The number of frames we are expecting from the server\r\n     */WebSocketConnection.prototype.handleNewFrameCount_=function(frameCount){this.totalFrames=frameCount;this.frames=[];};/**\r\n     * Attempts to parse a frame count out of some text. If it can't, assumes a value of 1\r\n     * @returns Any remaining data to be process, or null if there is none\r\n     */WebSocketConnection.prototype.extractFrameCount_=function(data){assert(this.frames===null,'We already have a frame buffer');// TODO: The server is only supposed to send up to 9999 frames (i.e. length <= 4), but that isn't being enforced\n// currently.  So allowing larger frame counts (length <= 6).  See https://app.asana.com/0/search/8688598998380/8237608042508\nif(data.length<=6){var frameCount=Number(data);if(!isNaN(frameCount)){this.handleNewFrameCount_(frameCount);return null;}}this.handleNewFrameCount_(1);return data;};/**\r\n     * Process a websocket frame that has arrived from the server.\r\n     * @param mess - The frame data\r\n     */WebSocketConnection.prototype.handleIncomingFrame=function(mess){if(this.mySock===null){return;// Chrome apparently delivers incoming packets even after we .close() the connection sometimes.\n}var data=mess['data'];this.bytesReceived+=data.length;this.stats_.incrementCounter('bytes_received',data.length);this.resetKeepAlive();if(this.frames!==null){// we're buffering\nthis.appendFrame_(data);}else{// try to parse out a frame count, otherwise, assume 1 and process it\nvar remainingData=this.extractFrameCount_(data);if(remainingData!==null){this.appendFrame_(remainingData);}}};/**\r\n     * Send a message to the server\r\n     * @param data - The JSON object to transmit\r\n     */WebSocketConnection.prototype.send=function(data){this.resetKeepAlive();var dataStr=stringify(data);this.bytesSent+=dataStr.length;this.stats_.incrementCounter('bytes_sent',dataStr.length);//We can only fit a certain amount in each websocket frame, so we need to split this request\n//up into multiple pieces if it doesn't fit in one request.\nvar dataSegs=splitStringBySize(dataStr,WEBSOCKET_MAX_FRAME_SIZE);//Send the length header\nif(dataSegs.length>1){this.sendString_(String(dataSegs.length));}//Send the actual data in segments.\nfor(var i=0;i<dataSegs.length;i++){this.sendString_(dataSegs[i]);}};WebSocketConnection.prototype.shutdown_=function(){this.isClosed_=true;if(this.keepaliveTimer){clearInterval(this.keepaliveTimer);this.keepaliveTimer=null;}if(this.mySock){this.mySock.close();this.mySock=null;}};WebSocketConnection.prototype.onClosed_=function(){if(!this.isClosed_){this.log_('WebSocket is closing itself');this.shutdown_();// since this is an internal close, trigger the close listener\nif(this.onDisconnect){this.onDisconnect(this.everConnected_);this.onDisconnect=null;}}};/**\r\n     * External-facing close handler.\r\n     * Close the websocket and kill the connection.\r\n     */WebSocketConnection.prototype.close=function(){if(!this.isClosed_){this.log_('WebSocket is being closed');this.shutdown_();}};/**\r\n     * Kill the current keepalive timer and start a new one, to ensure that it always fires N seconds after\r\n     * the last activity.\r\n     */WebSocketConnection.prototype.resetKeepAlive=function(){var _this=this;clearInterval(this.keepaliveTimer);this.keepaliveTimer=setInterval(function(){//If there has been no websocket activity for a while, send a no-op\nif(_this.mySock){_this.sendString_('0');}_this.resetKeepAlive();// eslint-disable-next-line @typescript-eslint/no-explicit-any\n},Math.floor(WEBSOCKET_KEEPALIVE_INTERVAL));};/**\r\n     * Send a string over the websocket.\r\n     *\r\n     * @param str - String to send.\r\n     */WebSocketConnection.prototype.sendString_=function(str){// Firefox seems to sometimes throw exceptions (NS_ERROR_UNEXPECTED) from websocket .send()\n// calls for some unknown reason.  We treat these as an error and disconnect.\n// See https://app.asana.com/0/58926111402292/68021340250410\ntry{this.mySock.send(str);}catch(e){this.log_('Exception thrown from WebSocket.send():',e.message||e.data,'Closing connection.');setTimeout(this.onClosed_.bind(this),0);}};/**\r\n     * Number of response before we consider the connection \"healthy.\"\r\n     */WebSocketConnection.responsesRequiredToBeHealthy=2;/**\r\n     * Time to wait for the connection te become healthy before giving up.\r\n     */WebSocketConnection.healthyTimeout=30000;return WebSocketConnection;}();/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * Currently simplistic, this class manages what transport a Connection should use at various stages of its\r\n * lifecycle.\r\n *\r\n * It starts with longpolling in a browser, and httppolling on node. It then upgrades to websockets if\r\n * they are available.\r\n */var TransportManager=/** @class */function(){/**\r\n     * @param repoInfo - Metadata around the namespace we're connecting to\r\n     */function TransportManager(repoInfo){this.initTransports_(repoInfo);}Object.defineProperty(TransportManager,\"ALL_TRANSPORTS\",{get:function(){return[BrowserPollConnection,WebSocketConnection];},enumerable:false,configurable:true});TransportManager.prototype.initTransports_=function(repoInfo){var e_1,_a;var isWebSocketsAvailable=WebSocketConnection&&WebSocketConnection['isAvailable']();var isSkipPollConnection=isWebSocketsAvailable&&!WebSocketConnection.previouslyFailed();if(repoInfo.webSocketOnly){if(!isWebSocketsAvailable){warn(\"wss:// URL used, but browser isn't known to support websockets.  Trying anyway.\");}isSkipPollConnection=true;}if(isSkipPollConnection){this.transports_=[WebSocketConnection];}else{var transports=this.transports_=[];try{for(var _b=__values(TransportManager.ALL_TRANSPORTS),_c=_b.next();!_c.done;_c=_b.next()){var transport=_c.value;if(transport&&transport['isAvailable']()){transports.push(transport);}}}catch(e_1_1){e_1={error:e_1_1};}finally{try{if(_c&&!_c.done&&(_a=_b.return))_a.call(_b);}finally{if(e_1)throw e_1.error;}}}};/**\r\n     * @returns The constructor for the initial transport to use\r\n     */TransportManager.prototype.initialTransport=function(){if(this.transports_.length>0){return this.transports_[0];}else{throw new Error('No transports available');}};/**\r\n     * @returns The constructor for the next transport, or null\r\n     */TransportManager.prototype.upgradeTransport=function(){if(this.transports_.length>1){return this.transports_[1];}else{return null;}};return TransportManager;}();/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ // Abort upgrade attempt if it takes longer than 60s.\nvar UPGRADE_TIMEOUT=60000;// For some transports (WebSockets), we need to \"validate\" the transport by exchanging a few requests and responses.\n// If we haven't sent enough requests within 5s, we'll start sending noop ping requests.\nvar DELAY_BEFORE_SENDING_EXTRA_REQUESTS=5000;// If the initial data sent triggers a lot of bandwidth (i.e. it's a large put or a listen for a large amount of data)\n// then we may not be able to exchange our ping/pong requests within the healthy timeout.  So if we reach the timeout\n// but we've sent/received enough bytes, we don't cancel the connection.\nvar BYTES_SENT_HEALTHY_OVERRIDE=10*1024;var BYTES_RECEIVED_HEALTHY_OVERRIDE=100*1024;var MESSAGE_TYPE='t';var MESSAGE_DATA='d';var CONTROL_SHUTDOWN='s';var CONTROL_RESET='r';var CONTROL_ERROR='e';var CONTROL_PONG='o';var SWITCH_ACK='a';var END_TRANSMISSION='n';var PING='p';var SERVER_HELLO='h';/**\r\n * Creates a new real-time connection to the server using whichever method works\r\n * best in the current browser.\r\n */var Connection=/** @class */function(){/**\r\n     * @param id - an id for this connection\r\n     * @param repoInfo_ - the info for the endpoint to connect to\r\n     * @param applicationId_ - the Firebase App ID for this project\r\n     * @param appCheckToken_ - The App Check Token for this device.\r\n     * @param authToken_ - The auth token for this session.\r\n     * @param onMessage_ - the callback to be triggered when a server-push message arrives\r\n     * @param onReady_ - the callback to be triggered when this connection is ready to send messages.\r\n     * @param onDisconnect_ - the callback to be triggered when a connection was lost\r\n     * @param onKill_ - the callback to be triggered when this connection has permanently shut down.\r\n     * @param lastSessionId - last session id in persistent connection. is used to clean up old session in real-time server\r\n     */function Connection(id,repoInfo_,applicationId_,appCheckToken_,authToken_,onMessage_,onReady_,onDisconnect_,onKill_,lastSessionId){this.id=id;this.repoInfo_=repoInfo_;this.applicationId_=applicationId_;this.appCheckToken_=appCheckToken_;this.authToken_=authToken_;this.onMessage_=onMessage_;this.onReady_=onReady_;this.onDisconnect_=onDisconnect_;this.onKill_=onKill_;this.lastSessionId=lastSessionId;this.connectionCount=0;this.pendingDataMessages=[];this.state_=0/* CONNECTING */;this.log_=logWrapper('c:'+this.id+':');this.transportManager_=new TransportManager(repoInfo_);this.log_('Connection created');this.start_();}/**\r\n     * Starts a connection attempt\r\n     */Connection.prototype.start_=function(){var _this=this;var conn=this.transportManager_.initialTransport();this.conn_=new conn(this.nextTransportId_(),this.repoInfo_,this.applicationId_,this.appCheckToken_,this.authToken_,null,this.lastSessionId);// For certain transports (WebSockets), we need to send and receive several messages back and forth before we\n// can consider the transport healthy.\nthis.primaryResponsesRequired_=conn['responsesRequiredToBeHealthy']||0;var onMessageReceived=this.connReceiver_(this.conn_);var onConnectionLost=this.disconnReceiver_(this.conn_);this.tx_=this.conn_;this.rx_=this.conn_;this.secondaryConn_=null;this.isHealthy_=false;/*\r\n         * Firefox doesn't like when code from one iframe tries to create another iframe by way of the parent frame.\r\n         * This can occur in the case of a redirect, i.e. we guessed wrong on what server to connect to and received a reset.\r\n         * Somehow, setTimeout seems to make this ok. That doesn't make sense from a security perspective, since you should\r\n         * still have the context of your originating frame.\r\n         */setTimeout(function(){// this.conn_ gets set to null in some of the tests. Check to make sure it still exists before using it\n_this.conn_&&_this.conn_.open(onMessageReceived,onConnectionLost);},Math.floor(0));var healthyTimeoutMS=conn['healthyTimeout']||0;if(healthyTimeoutMS>0){this.healthyTimeout_=setTimeoutNonBlocking(function(){_this.healthyTimeout_=null;if(!_this.isHealthy_){if(_this.conn_&&_this.conn_.bytesReceived>BYTES_RECEIVED_HEALTHY_OVERRIDE){_this.log_('Connection exceeded healthy timeout but has received '+_this.conn_.bytesReceived+' bytes.  Marking connection healthy.');_this.isHealthy_=true;_this.conn_.markConnectionHealthy();}else if(_this.conn_&&_this.conn_.bytesSent>BYTES_SENT_HEALTHY_OVERRIDE){_this.log_('Connection exceeded healthy timeout but has sent '+_this.conn_.bytesSent+' bytes.  Leaving connection alive.');// NOTE: We don't want to mark it healthy, since we have no guarantee that the bytes have made it to\n// the server.\n}else{_this.log_('Closing unhealthy connection after timeout.');_this.close();}}// eslint-disable-next-line @typescript-eslint/no-explicit-any\n},Math.floor(healthyTimeoutMS));}};Connection.prototype.nextTransportId_=function(){return'c:'+this.id+':'+this.connectionCount++;};Connection.prototype.disconnReceiver_=function(conn){var _this=this;return function(everConnected){if(conn===_this.conn_){_this.onConnectionLost_(everConnected);}else if(conn===_this.secondaryConn_){_this.log_('Secondary connection lost.');_this.onSecondaryConnectionLost_();}else{_this.log_('closing an old connection');}};};Connection.prototype.connReceiver_=function(conn){var _this=this;return function(message){if(_this.state_!==2/* DISCONNECTED */){if(conn===_this.rx_){_this.onPrimaryMessageReceived_(message);}else if(conn===_this.secondaryConn_){_this.onSecondaryMessageReceived_(message);}else{_this.log_('message on old connection');}}};};/**\r\n     * @param dataMsg - An arbitrary data message to be sent to the server\r\n     */Connection.prototype.sendRequest=function(dataMsg){// wrap in a data message envelope and send it on\nvar msg={t:'d',d:dataMsg};this.sendData_(msg);};Connection.prototype.tryCleanupConnection=function(){if(this.tx_===this.secondaryConn_&&this.rx_===this.secondaryConn_){this.log_('cleaning up and promoting a connection: '+this.secondaryConn_.connId);this.conn_=this.secondaryConn_;this.secondaryConn_=null;// the server will shutdown the old connection\n}};Connection.prototype.onSecondaryControl_=function(controlData){if(MESSAGE_TYPE in controlData){var cmd=controlData[MESSAGE_TYPE];if(cmd===SWITCH_ACK){this.upgradeIfSecondaryHealthy_();}else if(cmd===CONTROL_RESET){// Most likely the session wasn't valid. Abandon the switch attempt\nthis.log_('Got a reset on secondary, closing it');this.secondaryConn_.close();// If we were already using this connection for something, than we need to fully close\nif(this.tx_===this.secondaryConn_||this.rx_===this.secondaryConn_){this.close();}}else if(cmd===CONTROL_PONG){this.log_('got pong on secondary.');this.secondaryResponsesRequired_--;this.upgradeIfSecondaryHealthy_();}}};Connection.prototype.onSecondaryMessageReceived_=function(parsedData){var layer=requireKey('t',parsedData);var data=requireKey('d',parsedData);if(layer==='c'){this.onSecondaryControl_(data);}else if(layer==='d'){// got a data message, but we're still second connection. Need to buffer it up\nthis.pendingDataMessages.push(data);}else{throw new Error('Unknown protocol layer: '+layer);}};Connection.prototype.upgradeIfSecondaryHealthy_=function(){if(this.secondaryResponsesRequired_<=0){this.log_('Secondary connection is healthy.');this.isHealthy_=true;this.secondaryConn_.markConnectionHealthy();this.proceedWithUpgrade_();}else{// Send a ping to make sure the connection is healthy.\nthis.log_('sending ping on secondary.');this.secondaryConn_.send({t:'c',d:{t:PING,d:{}}});}};Connection.prototype.proceedWithUpgrade_=function(){// tell this connection to consider itself open\nthis.secondaryConn_.start();// send ack\nthis.log_('sending client ack on secondary');this.secondaryConn_.send({t:'c',d:{t:SWITCH_ACK,d:{}}});// send end packet on primary transport, switch to sending on this one\n// can receive on this one, buffer responses until end received on primary transport\nthis.log_('Ending transmission on primary');this.conn_.send({t:'c',d:{t:END_TRANSMISSION,d:{}}});this.tx_=this.secondaryConn_;this.tryCleanupConnection();};Connection.prototype.onPrimaryMessageReceived_=function(parsedData){// Must refer to parsedData properties in quotes, so closure doesn't touch them.\nvar layer=requireKey('t',parsedData);var data=requireKey('d',parsedData);if(layer==='c'){this.onControl_(data);}else if(layer==='d'){this.onDataMessage_(data);}};Connection.prototype.onDataMessage_=function(message){this.onPrimaryResponse_();// We don't do anything with data messages, just kick them up a level\nthis.onMessage_(message);};Connection.prototype.onPrimaryResponse_=function(){if(!this.isHealthy_){this.primaryResponsesRequired_--;if(this.primaryResponsesRequired_<=0){this.log_('Primary connection is healthy.');this.isHealthy_=true;this.conn_.markConnectionHealthy();}}};Connection.prototype.onControl_=function(controlData){var cmd=requireKey(MESSAGE_TYPE,controlData);if(MESSAGE_DATA in controlData){var payload=controlData[MESSAGE_DATA];if(cmd===SERVER_HELLO){this.onHandshake_(payload);}else if(cmd===END_TRANSMISSION){this.log_('recvd end transmission on primary');this.rx_=this.secondaryConn_;for(var i=0;i<this.pendingDataMessages.length;++i){this.onDataMessage_(this.pendingDataMessages[i]);}this.pendingDataMessages=[];this.tryCleanupConnection();}else if(cmd===CONTROL_SHUTDOWN){// This was previously the 'onKill' callback passed to the lower-level connection\n// payload in this case is the reason for the shutdown. Generally a human-readable error\nthis.onConnectionShutdown_(payload);}else if(cmd===CONTROL_RESET){// payload in this case is the host we should contact\nthis.onReset_(payload);}else if(cmd===CONTROL_ERROR){error('Server Error: '+payload);}else if(cmd===CONTROL_PONG){this.log_('got pong on primary.');this.onPrimaryResponse_();this.sendPingOnPrimaryIfNecessary_();}else{error('Unknown control packet command: '+cmd);}}};/**\r\n     * @param handshake - The handshake data returned from the server\r\n     */Connection.prototype.onHandshake_=function(handshake){var timestamp=handshake.ts;var version=handshake.v;var host=handshake.h;this.sessionId=handshake.s;this.repoInfo_.host=host;// if we've already closed the connection, then don't bother trying to progress further\nif(this.state_===0/* CONNECTING */){this.conn_.start();this.onConnectionEstablished_(this.conn_,timestamp);if(PROTOCOL_VERSION!==version){warn('Protocol version mismatch detected');}// TODO: do we want to upgrade? when? maybe a delay?\nthis.tryStartUpgrade_();}};Connection.prototype.tryStartUpgrade_=function(){var conn=this.transportManager_.upgradeTransport();if(conn){this.startUpgrade_(conn);}};Connection.prototype.startUpgrade_=function(conn){var _this=this;this.secondaryConn_=new conn(this.nextTransportId_(),this.repoInfo_,this.applicationId_,this.appCheckToken_,this.authToken_,this.sessionId);// For certain transports (WebSockets), we need to send and receive several messages back and forth before we\n// can consider the transport healthy.\nthis.secondaryResponsesRequired_=conn['responsesRequiredToBeHealthy']||0;var onMessage=this.connReceiver_(this.secondaryConn_);var onDisconnect=this.disconnReceiver_(this.secondaryConn_);this.secondaryConn_.open(onMessage,onDisconnect);// If we haven't successfully upgraded after UPGRADE_TIMEOUT, give up and kill the secondary.\nsetTimeoutNonBlocking(function(){if(_this.secondaryConn_){_this.log_('Timed out trying to upgrade.');_this.secondaryConn_.close();}},Math.floor(UPGRADE_TIMEOUT));};Connection.prototype.onReset_=function(host){this.log_('Reset packet received.  New host: '+host);this.repoInfo_.host=host;// TODO: if we're already \"connected\", we need to trigger a disconnect at the next layer up.\n// We don't currently support resets after the connection has already been established\nif(this.state_===1/* CONNECTED */){this.close();}else{// Close whatever connections we have open and start again.\nthis.closeConnections_();this.start_();}};Connection.prototype.onConnectionEstablished_=function(conn,timestamp){var _this=this;this.log_('Realtime connection established.');this.conn_=conn;this.state_=1/* CONNECTED */;if(this.onReady_){this.onReady_(timestamp,this.sessionId);this.onReady_=null;}// If after 5 seconds we haven't sent enough requests to the server to get the connection healthy,\n// send some pings.\nif(this.primaryResponsesRequired_===0){this.log_('Primary connection is healthy.');this.isHealthy_=true;}else{setTimeoutNonBlocking(function(){_this.sendPingOnPrimaryIfNecessary_();},Math.floor(DELAY_BEFORE_SENDING_EXTRA_REQUESTS));}};Connection.prototype.sendPingOnPrimaryIfNecessary_=function(){// If the connection isn't considered healthy yet, we'll send a noop ping packet request.\nif(!this.isHealthy_&&this.state_===1/* CONNECTED */){this.log_('sending ping on primary.');this.sendData_({t:'c',d:{t:PING,d:{}}});}};Connection.prototype.onSecondaryConnectionLost_=function(){var conn=this.secondaryConn_;this.secondaryConn_=null;if(this.tx_===conn||this.rx_===conn){// we are relying on this connection already in some capacity. Therefore, a failure is real\nthis.close();}};/**\r\n     * @param everConnected - Whether or not the connection ever reached a server. Used to determine if\r\n     * we should flush the host cache\r\n     */Connection.prototype.onConnectionLost_=function(everConnected){this.conn_=null;// NOTE: IF you're seeing a Firefox error for this line, I think it might be because it's getting\n// called on window close and RealtimeState.CONNECTING is no longer defined.  Just a guess.\nif(!everConnected&&this.state_===0/* CONNECTING */){this.log_('Realtime connection failed.');// Since we failed to connect at all, clear any cached entry for this namespace in case the machine went away\nif(this.repoInfo_.isCacheableHost()){PersistentStorage.remove('host:'+this.repoInfo_.host);// reset the internal host to what we would show the user, i.e. <ns>.firebaseio.com\nthis.repoInfo_.internalHost=this.repoInfo_.host;}}else if(this.state_===1/* CONNECTED */){this.log_('Realtime connection lost.');}this.close();};Connection.prototype.onConnectionShutdown_=function(reason){this.log_('Connection shutdown command received. Shutting down...');if(this.onKill_){this.onKill_(reason);this.onKill_=null;}// We intentionally don't want to fire onDisconnect (kill is a different case),\n// so clear the callback.\nthis.onDisconnect_=null;this.close();};Connection.prototype.sendData_=function(data){if(this.state_!==1/* CONNECTED */){throw'Connection is not connected';}else{this.tx_.send(data);}};/**\r\n     * Cleans up this connection, calling the appropriate callbacks\r\n     */Connection.prototype.close=function(){if(this.state_!==2/* DISCONNECTED */){this.log_('Closing realtime connection.');this.state_=2/* DISCONNECTED */;this.closeConnections_();if(this.onDisconnect_){this.onDisconnect_();this.onDisconnect_=null;}}};Connection.prototype.closeConnections_=function(){this.log_('Shutting down all connections');if(this.conn_){this.conn_.close();this.conn_=null;}if(this.secondaryConn_){this.secondaryConn_.close();this.secondaryConn_=null;}if(this.healthyTimeout_){clearTimeout(this.healthyTimeout_);this.healthyTimeout_=null;}};return Connection;}();/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * Interface defining the set of actions that can be performed against the Firebase server\r\n * (basically corresponds to our wire protocol).\r\n *\r\n * @interface\r\n */var ServerActions=/** @class */function(){function ServerActions(){}ServerActions.prototype.put=function(pathString,data,onComplete,hash){};ServerActions.prototype.merge=function(pathString,data,onComplete,hash){};/**\r\n     * Refreshes the auth token for the current connection.\r\n     * @param token - The authentication token\r\n     */ServerActions.prototype.refreshAuthToken=function(token){};/**\r\n     * Refreshes the app check token for the current connection.\r\n     * @param token The app check token\r\n     */ServerActions.prototype.refreshAppCheckToken=function(token){};ServerActions.prototype.onDisconnectPut=function(pathString,data,onComplete){};ServerActions.prototype.onDisconnectMerge=function(pathString,data,onComplete){};ServerActions.prototype.onDisconnectCancel=function(pathString,onComplete){};ServerActions.prototype.reportStats=function(stats){};return ServerActions;}();/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * Base class to be used if you want to emit events. Call the constructor with\r\n * the set of allowed event names.\r\n */var EventEmitter=/** @class */function(){function EventEmitter(allowedEvents_){this.allowedEvents_=allowedEvents_;this.listeners_={};assert(Array.isArray(allowedEvents_)&&allowedEvents_.length>0,'Requires a non-empty array');}/**\r\n     * To be called by derived classes to trigger events.\r\n     */EventEmitter.prototype.trigger=function(eventType){var varArgs=[];for(var _i=1;_i<arguments.length;_i++){varArgs[_i-1]=arguments[_i];}if(Array.isArray(this.listeners_[eventType])){// Clone the list, since callbacks could add/remove listeners.\nvar listeners=__spreadArray([],__read(this.listeners_[eventType]));for(var i=0;i<listeners.length;i++){listeners[i].callback.apply(listeners[i].context,varArgs);}}};EventEmitter.prototype.on=function(eventType,callback,context){this.validateEventType_(eventType);this.listeners_[eventType]=this.listeners_[eventType]||[];this.listeners_[eventType].push({callback:callback,context:context});var eventData=this.getInitialEvent(eventType);if(eventData){callback.apply(context,eventData);}};EventEmitter.prototype.off=function(eventType,callback,context){this.validateEventType_(eventType);var listeners=this.listeners_[eventType]||[];for(var i=0;i<listeners.length;i++){if(listeners[i].callback===callback&&(!context||context===listeners[i].context)){listeners.splice(i,1);return;}}};EventEmitter.prototype.validateEventType_=function(eventType){assert(this.allowedEvents_.find(function(et){return et===eventType;}),'Unknown event: '+eventType);};return EventEmitter;}();/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * Monitors online state (as reported by window.online/offline events).\r\n *\r\n * The expectation is that this could have many false positives (thinks we are online\r\n * when we're not), but no false negatives.  So we can safely use it to determine when\r\n * we definitely cannot reach the internet.\r\n */var OnlineMonitor=/** @class */function(_super){__extends(OnlineMonitor,_super);function OnlineMonitor(){var _this=_super.call(this,['online'])||this;_this.online_=true;// We've had repeated complaints that Cordova apps can get stuck \"offline\", e.g.\n// https://forum.ionicframework.com/t/firebase-connection-is-lost-and-never-come-back/43810\n// It would seem that the 'online' event does not always fire consistently. So we disable it\n// for Cordova.\nif(typeof window!=='undefined'&&typeof window.addEventListener!=='undefined'&&!isMobileCordova()){window.addEventListener('online',function(){if(!_this.online_){_this.online_=true;_this.trigger('online',true);}},false);window.addEventListener('offline',function(){if(_this.online_){_this.online_=false;_this.trigger('online',false);}},false);}return _this;}OnlineMonitor.getInstance=function(){return new OnlineMonitor();};OnlineMonitor.prototype.getInitialEvent=function(eventType){assert(eventType==='online','Unknown event type: '+eventType);return[this.online_];};OnlineMonitor.prototype.currentlyOnline=function(){return this.online_;};return OnlineMonitor;}(EventEmitter);/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /** Maximum key depth. */var MAX_PATH_DEPTH=32;/** Maximum number of (UTF8) bytes in a Firebase path. */var MAX_PATH_LENGTH_BYTES=768;/**\r\n * An immutable object representing a parsed path.  It's immutable so that you\r\n * can pass them around to other functions without worrying about them changing\r\n * it.\r\n */var Path=/** @class */function(){/**\r\n     * @param pathOrString - Path string to parse, or another path, or the raw\r\n     * tokens array\r\n     */function Path(pathOrString,pieceNum){if(pieceNum===void 0){this.pieces_=pathOrString.split('/');// Remove empty pieces.\nvar copyTo=0;for(var i=0;i<this.pieces_.length;i++){if(this.pieces_[i].length>0){this.pieces_[copyTo]=this.pieces_[i];copyTo++;}}this.pieces_.length=copyTo;this.pieceNum_=0;}else{this.pieces_=pathOrString;this.pieceNum_=pieceNum;}}Path.prototype.toString=function(){var pathString='';for(var i=this.pieceNum_;i<this.pieces_.length;i++){if(this.pieces_[i]!==''){pathString+='/'+this.pieces_[i];}}return pathString||'/';};return Path;}();function newEmptyPath(){return new Path('');}function pathGetFront(path){if(path.pieceNum_>=path.pieces_.length){return null;}return path.pieces_[path.pieceNum_];}/**\r\n * @returns The number of segments in this path\r\n */function pathGetLength(path){return path.pieces_.length-path.pieceNum_;}function pathPopFront(path){var pieceNum=path.pieceNum_;if(pieceNum<path.pieces_.length){pieceNum++;}return new Path(path.pieces_,pieceNum);}function pathGetBack(path){if(path.pieceNum_<path.pieces_.length){return path.pieces_[path.pieces_.length-1];}return null;}function pathToUrlEncodedString(path){var pathString='';for(var i=path.pieceNum_;i<path.pieces_.length;i++){if(path.pieces_[i]!==''){pathString+='/'+encodeURIComponent(String(path.pieces_[i]));}}return pathString||'/';}/**\r\n * Shallow copy of the parts of the path.\r\n *\r\n */function pathSlice(path,begin){if(begin===void 0){begin=0;}return path.pieces_.slice(path.pieceNum_+begin);}function pathParent(path){if(path.pieceNum_>=path.pieces_.length){return null;}var pieces=[];for(var i=path.pieceNum_;i<path.pieces_.length-1;i++){pieces.push(path.pieces_[i]);}return new Path(pieces,0);}function pathChild(path,childPathObj){var pieces=[];for(var i=path.pieceNum_;i<path.pieces_.length;i++){pieces.push(path.pieces_[i]);}if(childPathObj instanceof Path){for(var i=childPathObj.pieceNum_;i<childPathObj.pieces_.length;i++){pieces.push(childPathObj.pieces_[i]);}}else{var childPieces=childPathObj.split('/');for(var i=0;i<childPieces.length;i++){if(childPieces[i].length>0){pieces.push(childPieces[i]);}}}return new Path(pieces,0);}/**\r\n * @returns True if there are no segments in this path\r\n */function pathIsEmpty(path){return path.pieceNum_>=path.pieces_.length;}/**\r\n * @returns The path from outerPath to innerPath\r\n */function newRelativePath(outerPath,innerPath){var outer=pathGetFront(outerPath),inner=pathGetFront(innerPath);if(outer===null){return innerPath;}else if(outer===inner){return newRelativePath(pathPopFront(outerPath),pathPopFront(innerPath));}else{throw new Error('INTERNAL ERROR: innerPath ('+innerPath+') is not within '+'outerPath ('+outerPath+')');}}/**\r\n * @returns -1, 0, 1 if left is less, equal, or greater than the right.\r\n */function pathCompare(left,right){var leftKeys=pathSlice(left,0);var rightKeys=pathSlice(right,0);for(var i=0;i<leftKeys.length&&i<rightKeys.length;i++){var cmp=nameCompare(leftKeys[i],rightKeys[i]);if(cmp!==0){return cmp;}}if(leftKeys.length===rightKeys.length){return 0;}return leftKeys.length<rightKeys.length?-1:1;}/**\r\n * @returns true if paths are the same.\r\n */function pathEquals(path,other){if(pathGetLength(path)!==pathGetLength(other)){return false;}for(var i=path.pieceNum_,j=other.pieceNum_;i<=path.pieces_.length;i++,j++){if(path.pieces_[i]!==other.pieces_[j]){return false;}}return true;}/**\r\n * @returns True if this path is a parent (or the same as) other\r\n */function pathContains(path,other){var i=path.pieceNum_;var j=other.pieceNum_;if(pathGetLength(path)>pathGetLength(other)){return false;}while(i<path.pieces_.length){if(path.pieces_[i]!==other.pieces_[j]){return false;}++i;++j;}return true;}/**\r\n * Dynamic (mutable) path used to count path lengths.\r\n *\r\n * This class is used to efficiently check paths for valid\r\n * length (in UTF8 bytes) and depth (used in path validation).\r\n *\r\n * Throws Error exception if path is ever invalid.\r\n *\r\n * The definition of a path always begins with '/'.\r\n */var ValidationPath=/** @class */function(){/**\r\n     * @param path - Initial Path.\r\n     * @param errorPrefix_ - Prefix for any error messages.\r\n     */function ValidationPath(path,errorPrefix_){this.errorPrefix_=errorPrefix_;this.parts_=pathSlice(path,0);/** Initialize to number of '/' chars needed in path. */this.byteLength_=Math.max(1,this.parts_.length);for(var i=0;i<this.parts_.length;i++){this.byteLength_+=stringLength(this.parts_[i]);}validationPathCheckValid(this);}return ValidationPath;}();function validationPathPush(validationPath,child){// Count the needed '/'\nif(validationPath.parts_.length>0){validationPath.byteLength_+=1;}validationPath.parts_.push(child);validationPath.byteLength_+=stringLength(child);validationPathCheckValid(validationPath);}function validationPathPop(validationPath){var last=validationPath.parts_.pop();validationPath.byteLength_-=stringLength(last);// Un-count the previous '/'\nif(validationPath.parts_.length>0){validationPath.byteLength_-=1;}}function validationPathCheckValid(validationPath){if(validationPath.byteLength_>MAX_PATH_LENGTH_BYTES){throw new Error(validationPath.errorPrefix_+'has a key path longer than '+MAX_PATH_LENGTH_BYTES+' bytes ('+validationPath.byteLength_+').');}if(validationPath.parts_.length>MAX_PATH_DEPTH){throw new Error(validationPath.errorPrefix_+'path specified exceeds the maximum depth that can be written ('+MAX_PATH_DEPTH+') or object contains a cycle '+validationPathToErrorString(validationPath));}}/**\r\n * String for use in error messages - uses '.' notation for path.\r\n */function validationPathToErrorString(validationPath){if(validationPath.parts_.length===0){return'';}return\"in property '\"+validationPath.parts_.join('.')+\"'\";}/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */var VisibilityMonitor=/** @class */function(_super){__extends(VisibilityMonitor,_super);function VisibilityMonitor(){var _this=_super.call(this,['visible'])||this;var hidden;var visibilityChange;if(typeof document!=='undefined'&&typeof document.addEventListener!=='undefined'){if(typeof document['hidden']!=='undefined'){// Opera 12.10 and Firefox 18 and later support\nvisibilityChange='visibilitychange';hidden='hidden';}else if(typeof document['mozHidden']!=='undefined'){visibilityChange='mozvisibilitychange';hidden='mozHidden';}else if(typeof document['msHidden']!=='undefined'){visibilityChange='msvisibilitychange';hidden='msHidden';}else if(typeof document['webkitHidden']!=='undefined'){visibilityChange='webkitvisibilitychange';hidden='webkitHidden';}}// Initially, we always assume we are visible. This ensures that in browsers\n// without page visibility support or in cases where we are never visible\n// (e.g. chrome extension), we act as if we are visible, i.e. don't delay\n// reconnects\n_this.visible_=true;if(visibilityChange){document.addEventListener(visibilityChange,function(){var visible=!document[hidden];if(visible!==_this.visible_){_this.visible_=visible;_this.trigger('visible',visible);}},false);}return _this;}VisibilityMonitor.getInstance=function(){return new VisibilityMonitor();};VisibilityMonitor.prototype.getInitialEvent=function(eventType){assert(eventType==='visible','Unknown event type: '+eventType);return[this.visible_];};return VisibilityMonitor;}(EventEmitter);/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */var RECONNECT_MIN_DELAY=1000;var RECONNECT_MAX_DELAY_DEFAULT=60*5*1000;// 5 minutes in milliseconds (Case: 1858)\nvar GET_CONNECT_TIMEOUT=3*1000;var RECONNECT_MAX_DELAY_FOR_ADMINS=30*1000;// 30 seconds for admin clients (likely to be a backend server)\nvar RECONNECT_DELAY_MULTIPLIER=1.3;var RECONNECT_DELAY_RESET_TIMEOUT=30000;// Reset delay back to MIN_DELAY after being connected for 30sec.\nvar SERVER_KILL_INTERRUPT_REASON='server_kill';// If auth fails repeatedly, we'll assume something is wrong and log a warning / back off.\nvar INVALID_TOKEN_THRESHOLD=3;/**\r\n * Firebase connection.  Abstracts wire protocol and handles reconnecting.\r\n *\r\n * NOTE: All JSON objects sent to the realtime connection must have property names enclosed\r\n * in quotes to make sure the closure compiler does not minify them.\r\n */var PersistentConnection=/** @class */function(_super){__extends(PersistentConnection,_super);/**\r\n     * @param repoInfo_ - Data about the namespace we are connecting to\r\n     * @param applicationId_ - The Firebase App ID for this project\r\n     * @param onDataUpdate_ - A callback for new data from the server\r\n     */function PersistentConnection(repoInfo_,applicationId_,onDataUpdate_,onConnectStatus_,onServerInfoUpdate_,authTokenProvider_,appCheckTokenProvider_,authOverride_){var _this=_super.call(this)||this;_this.repoInfo_=repoInfo_;_this.applicationId_=applicationId_;_this.onDataUpdate_=onDataUpdate_;_this.onConnectStatus_=onConnectStatus_;_this.onServerInfoUpdate_=onServerInfoUpdate_;_this.authTokenProvider_=authTokenProvider_;_this.appCheckTokenProvider_=appCheckTokenProvider_;_this.authOverride_=authOverride_;// Used for diagnostic logging.\n_this.id=PersistentConnection.nextPersistentConnectionId_++;_this.log_=logWrapper('p:'+_this.id+':');_this.interruptReasons_={};_this.listens=new Map();_this.outstandingPuts_=[];_this.outstandingGets_=[];_this.outstandingPutCount_=0;_this.outstandingGetCount_=0;_this.onDisconnectRequestQueue_=[];_this.connected_=false;_this.reconnectDelay_=RECONNECT_MIN_DELAY;_this.maxReconnectDelay_=RECONNECT_MAX_DELAY_DEFAULT;_this.securityDebugCallback_=null;_this.lastSessionId=null;_this.establishConnectionTimer_=null;_this.visible_=false;// Before we get connected, we keep a queue of pending messages to send.\n_this.requestCBHash_={};_this.requestNumber_=0;_this.realtime_=null;_this.authToken_=null;_this.appCheckToken_=null;_this.forceTokenRefresh_=false;_this.invalidAuthTokenCount_=0;_this.invalidAppCheckTokenCount_=0;_this.firstConnection_=true;_this.lastConnectionAttemptTime_=null;_this.lastConnectionEstablishedTime_=null;if(authOverride_&&!isNodeSdk()){throw new Error('Auth override specified in options, but not supported on non Node.js platforms');}VisibilityMonitor.getInstance().on('visible',_this.onVisible_,_this);if(repoInfo_.host.indexOf('fblocal')===-1){OnlineMonitor.getInstance().on('online',_this.onOnline_,_this);}return _this;}PersistentConnection.prototype.sendRequest=function(action,body,onResponse){var curReqNum=++this.requestNumber_;var msg={r:curReqNum,a:action,b:body};this.log_(stringify(msg));assert(this.connected_,\"sendRequest call when we're not connected not allowed.\");this.realtime_.sendRequest(msg);if(onResponse){this.requestCBHash_[curReqNum]=onResponse;}};PersistentConnection.prototype.get=function(query){var _this=this;this.initConnection_();var deferred=new Deferred();var request={p:query._path.toString(),q:query._queryObject};var outstandingGet={action:'g',request:request,onComplete:function(message){var payload=message['d'];if(message['s']==='ok'){_this.onDataUpdate_(request['p'],payload,/*isMerge*/false,/*tag*/null);deferred.resolve(payload);}else{deferred.reject(payload);}}};this.outstandingGets_.push(outstandingGet);this.outstandingGetCount_++;var index=this.outstandingGets_.length-1;if(!this.connected_){setTimeout(function(){var get=_this.outstandingGets_[index];if(get===undefined||outstandingGet!==get){return;}delete _this.outstandingGets_[index];_this.outstandingGetCount_--;if(_this.outstandingGetCount_===0){_this.outstandingGets_=[];}_this.log_('get '+index+' timed out on connection');deferred.reject(new Error('Client is offline.'));},GET_CONNECT_TIMEOUT);}if(this.connected_){this.sendGet_(index);}return deferred.promise;};PersistentConnection.prototype.listen=function(query,currentHashFn,tag,onComplete){this.initConnection_();var queryId=query._queryIdentifier;var pathString=query._path.toString();this.log_('Listen called for '+pathString+' '+queryId);if(!this.listens.has(pathString)){this.listens.set(pathString,new Map());}assert(query._queryParams.isDefault()||!query._queryParams.loadsAllData(),'listen() called for non-default but complete query');assert(!this.listens.get(pathString).has(queryId),'listen() called twice for same path/queryId.');var listenSpec={onComplete:onComplete,hashFn:currentHashFn,query:query,tag:tag};this.listens.get(pathString).set(queryId,listenSpec);if(this.connected_){this.sendListen_(listenSpec);}};PersistentConnection.prototype.sendGet_=function(index){var _this=this;var get=this.outstandingGets_[index];this.sendRequest('g',get.request,function(message){delete _this.outstandingGets_[index];_this.outstandingGetCount_--;if(_this.outstandingGetCount_===0){_this.outstandingGets_=[];}if(get.onComplete){get.onComplete(message);}});};PersistentConnection.prototype.sendListen_=function(listenSpec){var _this=this;var query=listenSpec.query;var pathString=query._path.toString();var queryId=query._queryIdentifier;this.log_('Listen on '+pathString+' for '+queryId);var req={/*path*/p:pathString};var action='q';// Only bother to send query if it's non-default.\nif(listenSpec.tag){req['q']=query._queryObject;req['t']=listenSpec.tag;}req[/*hash*/'h']=listenSpec.hashFn();this.sendRequest(action,req,function(message){var payload=message[/*data*/'d'];var status=message[/*status*/'s'];// print warnings in any case...\nPersistentConnection.warnOnListenWarnings_(payload,query);var currentListenSpec=_this.listens.get(pathString)&&_this.listens.get(pathString).get(queryId);// only trigger actions if the listen hasn't been removed and readded\nif(currentListenSpec===listenSpec){_this.log_('listen response',message);if(status!=='ok'){_this.removeListen_(pathString,queryId);}if(listenSpec.onComplete){listenSpec.onComplete(status,payload);}}});};PersistentConnection.warnOnListenWarnings_=function(payload,query){if(payload&&typeof payload==='object'&&contains(payload,'w')){// eslint-disable-next-line @typescript-eslint/no-explicit-any\nvar warnings=safeGet(payload,'w');if(Array.isArray(warnings)&&~warnings.indexOf('no_index')){var indexSpec='\".indexOn\": \"'+query._queryParams.getIndex().toString()+'\"';var indexPath=query._path.toString();warn(\"Using an unspecified index. Your data will be downloaded and \"+(\"filtered on the client. Consider adding \"+indexSpec+\" at \")+(indexPath+\" to your security rules for better performance.\"));}}};PersistentConnection.prototype.refreshAuthToken=function(token){this.authToken_=token;this.log_('Auth token refreshed');if(this.authToken_){this.tryAuth();}else{//If we're connected we want to let the server know to unauthenticate us. If we're not connected, simply delete\n//the credential so we dont become authenticated next time we connect.\nif(this.connected_){this.sendRequest('unauth',{},function(){});}}this.reduceReconnectDelayIfAdminCredential_(token);};PersistentConnection.prototype.reduceReconnectDelayIfAdminCredential_=function(credential){// NOTE: This isn't intended to be bulletproof (a malicious developer can always just modify the client).\n// Additionally, we don't bother resetting the max delay back to the default if auth fails / expires.\nvar isFirebaseSecret=credential&&credential.length===40;if(isFirebaseSecret||isAdmin(credential)){this.log_('Admin auth credential detected.  Reducing max reconnect time.');this.maxReconnectDelay_=RECONNECT_MAX_DELAY_FOR_ADMINS;}};PersistentConnection.prototype.refreshAppCheckToken=function(token){this.appCheckToken_=token;this.log_('App check token refreshed');if(this.appCheckToken_){this.tryAppCheck();}else{//If we're connected we want to let the server know to unauthenticate us.\n//If we're not connected, simply delete the credential so we dont become\n// authenticated next time we connect.\nif(this.connected_){this.sendRequest('unappeck',{},function(){});}}};/**\r\n     * Attempts to authenticate with the given credentials. If the authentication attempt fails, it's triggered like\r\n     * a auth revoked (the connection is closed).\r\n     */PersistentConnection.prototype.tryAuth=function(){var _this=this;if(this.connected_&&this.authToken_){var token_1=this.authToken_;var authMethod=isValidFormat(token_1)?'auth':'gauth';var requestData={cred:token_1};if(this.authOverride_===null){requestData['noauth']=true;}else if(typeof this.authOverride_==='object'){requestData['authvar']=this.authOverride_;}this.sendRequest(authMethod,requestData,function(res){var status=res[/*status*/'s'];var data=res[/*data*/'d']||'error';if(_this.authToken_===token_1){if(status==='ok'){_this.invalidAuthTokenCount_=0;}else{// Triggers reconnect and force refresh for auth token\n_this.onAuthRevoked_(status,data);}}});}};/**\r\n     * Attempts to authenticate with the given token. If the authentication\r\n     * attempt fails, it's triggered like the token was revoked (the connection is\r\n     * closed).\r\n     */PersistentConnection.prototype.tryAppCheck=function(){var _this=this;if(this.connected_&&this.appCheckToken_){this.sendRequest('appcheck',{'token':this.appCheckToken_},function(res){var status=res[/*status*/'s'];var data=res[/*data*/'d']||'error';if(status==='ok'){_this.invalidAppCheckTokenCount_=0;}else{_this.onAppCheckRevoked_(status,data);}});}};/**\r\n     * @inheritDoc\r\n     */PersistentConnection.prototype.unlisten=function(query,tag){var pathString=query._path.toString();var queryId=query._queryIdentifier;this.log_('Unlisten called for '+pathString+' '+queryId);assert(query._queryParams.isDefault()||!query._queryParams.loadsAllData(),'unlisten() called for non-default but complete query');var listen=this.removeListen_(pathString,queryId);if(listen&&this.connected_){this.sendUnlisten_(pathString,queryId,query._queryObject,tag);}};PersistentConnection.prototype.sendUnlisten_=function(pathString,queryId,queryObj,tag){this.log_('Unlisten on '+pathString+' for '+queryId);var req={/*path*/p:pathString};var action='n';// Only bother sending queryId if it's non-default.\nif(tag){req['q']=queryObj;req['t']=tag;}this.sendRequest(action,req);};PersistentConnection.prototype.onDisconnectPut=function(pathString,data,onComplete){this.initConnection_();if(this.connected_){this.sendOnDisconnect_('o',pathString,data,onComplete);}else{this.onDisconnectRequestQueue_.push({pathString:pathString,action:'o',data:data,onComplete:onComplete});}};PersistentConnection.prototype.onDisconnectMerge=function(pathString,data,onComplete){this.initConnection_();if(this.connected_){this.sendOnDisconnect_('om',pathString,data,onComplete);}else{this.onDisconnectRequestQueue_.push({pathString:pathString,action:'om',data:data,onComplete:onComplete});}};PersistentConnection.prototype.onDisconnectCancel=function(pathString,onComplete){this.initConnection_();if(this.connected_){this.sendOnDisconnect_('oc',pathString,null,onComplete);}else{this.onDisconnectRequestQueue_.push({pathString:pathString,action:'oc',data:null,onComplete:onComplete});}};PersistentConnection.prototype.sendOnDisconnect_=function(action,pathString,data,onComplete){var request={/*path*/p:pathString,/*data*/d:data};this.log_('onDisconnect '+action,request);this.sendRequest(action,request,function(response){if(onComplete){setTimeout(function(){onComplete(response[/*status*/'s'],response[/* data */'d']);},Math.floor(0));}});};PersistentConnection.prototype.put=function(pathString,data,onComplete,hash){this.putInternal('p',pathString,data,onComplete,hash);};PersistentConnection.prototype.merge=function(pathString,data,onComplete,hash){this.putInternal('m',pathString,data,onComplete,hash);};PersistentConnection.prototype.putInternal=function(action,pathString,data,onComplete,hash){this.initConnection_();var request={/*path*/p:pathString,/*data*/d:data};if(hash!==undefined){request[/*hash*/'h']=hash;}// TODO: Only keep track of the most recent put for a given path?\nthis.outstandingPuts_.push({action:action,request:request,onComplete:onComplete});this.outstandingPutCount_++;var index=this.outstandingPuts_.length-1;if(this.connected_){this.sendPut_(index);}else{this.log_('Buffering put: '+pathString);}};PersistentConnection.prototype.sendPut_=function(index){var _this=this;var action=this.outstandingPuts_[index].action;var request=this.outstandingPuts_[index].request;var onComplete=this.outstandingPuts_[index].onComplete;this.outstandingPuts_[index].queued=this.connected_;this.sendRequest(action,request,function(message){_this.log_(action+' response',message);delete _this.outstandingPuts_[index];_this.outstandingPutCount_--;// Clean up array occasionally.\nif(_this.outstandingPutCount_===0){_this.outstandingPuts_=[];}if(onComplete){onComplete(message[/*status*/'s'],message[/* data */'d']);}});};PersistentConnection.prototype.reportStats=function(stats){var _this=this;// If we're not connected, we just drop the stats.\nif(this.connected_){var request={/*counters*/c:stats};this.log_('reportStats',request);this.sendRequest(/*stats*/'s',request,function(result){var status=result[/*status*/'s'];if(status!=='ok'){var errorReason=result[/* data */'d'];_this.log_('reportStats','Error sending stats: '+errorReason);}});}};PersistentConnection.prototype.onDataMessage_=function(message){if('r'in message){// this is a response\nthis.log_('from server: '+stringify(message));var reqNum=message['r'];var onResponse=this.requestCBHash_[reqNum];if(onResponse){delete this.requestCBHash_[reqNum];onResponse(message[/*body*/'b']);}}else if('error'in message){throw'A server-side error has occurred: '+message['error'];}else if('a'in message){// a and b are action and body, respectively\nthis.onDataPush_(message['a'],message['b']);}};PersistentConnection.prototype.onDataPush_=function(action,body){this.log_('handleServerMessage',action,body);if(action==='d'){this.onDataUpdate_(body[/*path*/'p'],body[/*data*/'d'],/*isMerge*/false,body['t']);}else if(action==='m'){this.onDataUpdate_(body[/*path*/'p'],body[/*data*/'d'],/*isMerge=*/true,body['t']);}else if(action==='c'){this.onListenRevoked_(body[/*path*/'p'],body[/*query*/'q']);}else if(action==='ac'){this.onAuthRevoked_(body[/*status code*/'s'],body[/* explanation */'d']);}else if(action==='apc'){this.onAppCheckRevoked_(body[/*status code*/'s'],body[/* explanation */'d']);}else if(action==='sd'){this.onSecurityDebugPacket_(body);}else{error('Unrecognized action received from server: '+stringify(action)+'\\nAre you using the latest client?');}};PersistentConnection.prototype.onReady_=function(timestamp,sessionId){this.log_('connection ready');this.connected_=true;this.lastConnectionEstablishedTime_=new Date().getTime();this.handleTimestamp_(timestamp);this.lastSessionId=sessionId;if(this.firstConnection_){this.sendConnectStats_();}this.restoreState_();this.firstConnection_=false;this.onConnectStatus_(true);};PersistentConnection.prototype.scheduleConnect_=function(timeout){var _this=this;assert(!this.realtime_,\"Scheduling a connect when we're already connected/ing?\");if(this.establishConnectionTimer_){clearTimeout(this.establishConnectionTimer_);}// NOTE: Even when timeout is 0, it's important to do a setTimeout to work around an infuriating \"Security Error\" in\n// Firefox when trying to write to our long-polling iframe in some scenarios (e.g. Forge or our unit tests).\nthis.establishConnectionTimer_=setTimeout(function(){_this.establishConnectionTimer_=null;_this.establishConnection_();// eslint-disable-next-line @typescript-eslint/no-explicit-any\n},Math.floor(timeout));};PersistentConnection.prototype.initConnection_=function(){if(!this.realtime_&&this.firstConnection_){this.scheduleConnect_(0);}};PersistentConnection.prototype.onVisible_=function(visible){// NOTE: Tabbing away and back to a window will defeat our reconnect backoff, but I think that's fine.\nif(visible&&!this.visible_&&this.reconnectDelay_===this.maxReconnectDelay_){this.log_('Window became visible.  Reducing delay.');this.reconnectDelay_=RECONNECT_MIN_DELAY;if(!this.realtime_){this.scheduleConnect_(0);}}this.visible_=visible;};PersistentConnection.prototype.onOnline_=function(online){if(online){this.log_('Browser went online.');this.reconnectDelay_=RECONNECT_MIN_DELAY;if(!this.realtime_){this.scheduleConnect_(0);}}else{this.log_('Browser went offline.  Killing connection.');if(this.realtime_){this.realtime_.close();}}};PersistentConnection.prototype.onRealtimeDisconnect_=function(){this.log_('data client disconnected');this.connected_=false;this.realtime_=null;// Since we don't know if our sent transactions succeeded or not, we need to cancel them.\nthis.cancelSentTransactions_();// Clear out the pending requests.\nthis.requestCBHash_={};if(this.shouldReconnect_()){if(!this.visible_){this.log_(\"Window isn't visible.  Delaying reconnect.\");this.reconnectDelay_=this.maxReconnectDelay_;this.lastConnectionAttemptTime_=new Date().getTime();}else if(this.lastConnectionEstablishedTime_){// If we've been connected long enough, reset reconnect delay to minimum.\nvar timeSinceLastConnectSucceeded=new Date().getTime()-this.lastConnectionEstablishedTime_;if(timeSinceLastConnectSucceeded>RECONNECT_DELAY_RESET_TIMEOUT){this.reconnectDelay_=RECONNECT_MIN_DELAY;}this.lastConnectionEstablishedTime_=null;}var timeSinceLastConnectAttempt=new Date().getTime()-this.lastConnectionAttemptTime_;var reconnectDelay=Math.max(0,this.reconnectDelay_-timeSinceLastConnectAttempt);reconnectDelay=Math.random()*reconnectDelay;this.log_('Trying to reconnect in '+reconnectDelay+'ms');this.scheduleConnect_(reconnectDelay);// Adjust reconnect delay for next time.\nthis.reconnectDelay_=Math.min(this.maxReconnectDelay_,this.reconnectDelay_*RECONNECT_DELAY_MULTIPLIER);}this.onConnectStatus_(false);};PersistentConnection.prototype.establishConnection_=function(){return __awaiter(this,void 0,void 0,function(){var onDataMessage,onReady,onDisconnect_1,connId,lastSessionId,canceled_1,connection_1,closeFn,sendRequestFn,forceRefresh,_a,authToken,appCheckToken,error_1;var _this=this;return __generator(this,function(_b){switch(_b.label){case 0:if(!this.shouldReconnect_())return[3/*break*/,4];this.log_('Making a connection attempt');this.lastConnectionAttemptTime_=new Date().getTime();this.lastConnectionEstablishedTime_=null;onDataMessage=this.onDataMessage_.bind(this);onReady=this.onReady_.bind(this);onDisconnect_1=this.onRealtimeDisconnect_.bind(this);connId=this.id+':'+PersistentConnection.nextConnectionId_++;lastSessionId=this.lastSessionId;canceled_1=false;connection_1=null;closeFn=function(){if(connection_1){connection_1.close();}else{canceled_1=true;onDisconnect_1();}};sendRequestFn=function(msg){assert(connection_1,\"sendRequest call when we're not connected not allowed.\");connection_1.sendRequest(msg);};this.realtime_={close:closeFn,sendRequest:sendRequestFn};forceRefresh=this.forceTokenRefresh_;this.forceTokenRefresh_=false;_b.label=1;case 1:_b.trys.push([1,3,,4]);return[4/*yield*/,Promise.all([this.authTokenProvider_.getToken(forceRefresh),this.appCheckTokenProvider_.getToken(forceRefresh)])];case 2:_a=__read.apply(void 0,[_b.sent(),2]),authToken=_a[0],appCheckToken=_a[1];if(!canceled_1){log('getToken() completed. Creating connection.');this.authToken_=authToken&&authToken.accessToken;this.appCheckToken_=appCheckToken&&appCheckToken.token;connection_1=new Connection(connId,this.repoInfo_,this.applicationId_,this.appCheckToken_,this.authToken_,onDataMessage,onReady,onDisconnect_1,/* onKill= */function(reason){warn(reason+' ('+_this.repoInfo_.toString()+')');_this.interrupt(SERVER_KILL_INTERRUPT_REASON);},lastSessionId);}else{log('getToken() completed but was canceled');}return[3/*break*/,4];case 3:error_1=_b.sent();this.log_('Failed to get token: '+error_1);if(!canceled_1){if(this.repoInfo_.nodeAdmin){// This may be a critical error for the Admin Node.js SDK, so log a warning.\n// But getToken() may also just have temporarily failed, so we still want to\n// continue retrying.\nwarn(error_1);}closeFn();}return[3/*break*/,4];case 4:return[2/*return*/];}});});};PersistentConnection.prototype.interrupt=function(reason){log('Interrupting connection for reason: '+reason);this.interruptReasons_[reason]=true;if(this.realtime_){this.realtime_.close();}else{if(this.establishConnectionTimer_){clearTimeout(this.establishConnectionTimer_);this.establishConnectionTimer_=null;}if(this.connected_){this.onRealtimeDisconnect_();}}};PersistentConnection.prototype.resume=function(reason){log('Resuming connection for reason: '+reason);delete this.interruptReasons_[reason];if(isEmpty(this.interruptReasons_)){this.reconnectDelay_=RECONNECT_MIN_DELAY;if(!this.realtime_){this.scheduleConnect_(0);}}};PersistentConnection.prototype.handleTimestamp_=function(timestamp){var delta=timestamp-new Date().getTime();this.onServerInfoUpdate_({serverTimeOffset:delta});};PersistentConnection.prototype.cancelSentTransactions_=function(){for(var i=0;i<this.outstandingPuts_.length;i++){var put=this.outstandingPuts_[i];if(put&&/*hash*/'h'in put.request&&put.queued){if(put.onComplete){put.onComplete('disconnect');}delete this.outstandingPuts_[i];this.outstandingPutCount_--;}}// Clean up array occasionally.\nif(this.outstandingPutCount_===0){this.outstandingPuts_=[];}};PersistentConnection.prototype.onListenRevoked_=function(pathString,query){// Remove the listen and manufacture a \"permission_denied\" error for the failed listen.\nvar queryId;if(!query){queryId='default';}else{queryId=query.map(function(q){return ObjectToUniqueKey(q);}).join('$');}var listen=this.removeListen_(pathString,queryId);if(listen&&listen.onComplete){listen.onComplete('permission_denied');}};PersistentConnection.prototype.removeListen_=function(pathString,queryId){var normalizedPathString=new Path(pathString).toString();// normalize path.\nvar listen;if(this.listens.has(normalizedPathString)){var map=this.listens.get(normalizedPathString);listen=map.get(queryId);map.delete(queryId);if(map.size===0){this.listens.delete(normalizedPathString);}}else{// all listens for this path has already been removed\nlisten=undefined;}return listen;};PersistentConnection.prototype.onAuthRevoked_=function(statusCode,explanation){log('Auth token revoked: '+statusCode+'/'+explanation);this.authToken_=null;this.forceTokenRefresh_=true;this.realtime_.close();if(statusCode==='invalid_token'||statusCode==='permission_denied'){// We'll wait a couple times before logging the warning / increasing the\n// retry period since oauth tokens will report as \"invalid\" if they're\n// just expired. Plus there may be transient issues that resolve themselves.\nthis.invalidAuthTokenCount_++;if(this.invalidAuthTokenCount_>=INVALID_TOKEN_THRESHOLD){// Set a long reconnect delay because recovery is unlikely\nthis.reconnectDelay_=RECONNECT_MAX_DELAY_FOR_ADMINS;// Notify the auth token provider that the token is invalid, which will log\n// a warning\nthis.authTokenProvider_.notifyForInvalidToken();}}};PersistentConnection.prototype.onAppCheckRevoked_=function(statusCode,explanation){log('App check token revoked: '+statusCode+'/'+explanation);this.appCheckToken_=null;this.forceTokenRefresh_=true;// Note: We don't close the connection as the developer may not have\n// enforcement enabled. The backend closes connections with enforcements.\nif(statusCode==='invalid_token'||statusCode==='permission_denied'){// We'll wait a couple times before logging the warning / increasing the\n// retry period since oauth tokens will report as \"invalid\" if they're\n// just expired. Plus there may be transient issues that resolve themselves.\nthis.invalidAppCheckTokenCount_++;if(this.invalidAppCheckTokenCount_>=INVALID_TOKEN_THRESHOLD){this.appCheckTokenProvider_.notifyForInvalidToken();}}};PersistentConnection.prototype.onSecurityDebugPacket_=function(body){if(this.securityDebugCallback_){this.securityDebugCallback_(body);}else{if('msg'in body){console.log('FIREBASE: '+body['msg'].replace('\\n','\\nFIREBASE: '));}}};PersistentConnection.prototype.restoreState_=function(){var e_1,_a,e_2,_b;//Re-authenticate ourselves if we have a credential stored.\nthis.tryAuth();this.tryAppCheck();try{// Puts depend on having received the corresponding data update from the server before they complete, so we must\n// make sure to send listens before puts.\nfor(var _c=__values(this.listens.values()),_d=_c.next();!_d.done;_d=_c.next()){var queries=_d.value;try{for(var _e=(e_2=void 0,__values(queries.values())),_f=_e.next();!_f.done;_f=_e.next()){var listenSpec=_f.value;this.sendListen_(listenSpec);}}catch(e_2_1){e_2={error:e_2_1};}finally{try{if(_f&&!_f.done&&(_b=_e.return))_b.call(_e);}finally{if(e_2)throw e_2.error;}}}}catch(e_1_1){e_1={error:e_1_1};}finally{try{if(_d&&!_d.done&&(_a=_c.return))_a.call(_c);}finally{if(e_1)throw e_1.error;}}for(var i=0;i<this.outstandingPuts_.length;i++){if(this.outstandingPuts_[i]){this.sendPut_(i);}}while(this.onDisconnectRequestQueue_.length){var request=this.onDisconnectRequestQueue_.shift();this.sendOnDisconnect_(request.action,request.pathString,request.data,request.onComplete);}for(var i=0;i<this.outstandingGets_.length;i++){if(this.outstandingGets_[i]){this.sendGet_(i);}}};/**\r\n     * Sends client stats for first connection\r\n     */PersistentConnection.prototype.sendConnectStats_=function(){var stats={};var clientName='js';if(isNodeSdk()){if(this.repoInfo_.nodeAdmin){clientName='admin_node';}else{clientName='node';}}stats['sdk.'+clientName+'.'+SDK_VERSION.replace(/\\./g,'-')]=1;if(isMobileCordova()){stats['framework.cordova']=1;}else if(isReactNative()){stats['framework.reactnative']=1;}this.reportStats(stats);};PersistentConnection.prototype.shouldReconnect_=function(){var online=OnlineMonitor.getInstance().currentlyOnline();return isEmpty(this.interruptReasons_)&&online;};PersistentConnection.nextPersistentConnectionId_=0;/**\r\n     * Counter for number of connections created. Mainly used for tagging in the logs\r\n     */PersistentConnection.nextConnectionId_=0;return PersistentConnection;}(ServerActions);/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */var NamedNode=/** @class */function(){function NamedNode(name,node){this.name=name;this.node=node;}NamedNode.Wrap=function(name,node){return new NamedNode(name,node);};return NamedNode;}();/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */var Index=/** @class */function(){function Index(){}/**\r\n     * @returns A standalone comparison function for\r\n     * this index\r\n     */Index.prototype.getCompare=function(){return this.compare.bind(this);};/**\r\n     * Given a before and after value for a node, determine if the indexed value has changed. Even if they are different,\r\n     * it's possible that the changes are isolated to parts of the snapshot that are not indexed.\r\n     *\r\n     *\r\n     * @returns True if the portion of the snapshot being indexed changed between oldNode and newNode\r\n     */Index.prototype.indexedValueChanged=function(oldNode,newNode){var oldWrapped=new NamedNode(MIN_NAME,oldNode);var newWrapped=new NamedNode(MIN_NAME,newNode);return this.compare(oldWrapped,newWrapped)!==0;};/**\r\n     * @returns a node wrapper that will sort equal to or less than\r\n     * any other node wrapper, using this index\r\n     */Index.prototype.minPost=function(){// eslint-disable-next-line @typescript-eslint/no-explicit-any\nreturn NamedNode.MIN;};return Index;}();/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */var __EMPTY_NODE;var KeyIndex=/** @class */function(_super){__extends(KeyIndex,_super);function KeyIndex(){return _super!==null&&_super.apply(this,arguments)||this;}Object.defineProperty(KeyIndex,\"__EMPTY_NODE\",{get:function(){return __EMPTY_NODE;},set:function(val){__EMPTY_NODE=val;},enumerable:false,configurable:true});KeyIndex.prototype.compare=function(a,b){return nameCompare(a.name,b.name);};KeyIndex.prototype.isDefinedOn=function(node){// We could probably return true here (since every node has a key), but it's never called\n// so just leaving unimplemented for now.\nthrow assertionError('KeyIndex.isDefinedOn not expected to be called.');};KeyIndex.prototype.indexedValueChanged=function(oldNode,newNode){return false;// The key for a node never changes.\n};KeyIndex.prototype.minPost=function(){// eslint-disable-next-line @typescript-eslint/no-explicit-any\nreturn NamedNode.MIN;};KeyIndex.prototype.maxPost=function(){// TODO: This should really be created once and cached in a static property, but\n// NamedNode isn't defined yet, so I can't use it in a static.  Bleh.\nreturn new NamedNode(MAX_NAME,__EMPTY_NODE);};KeyIndex.prototype.makePost=function(indexValue,name){assert(typeof indexValue==='string','KeyIndex indexValue must always be a string.');// We just use empty node, but it'll never be compared, since our comparator only looks at name.\nreturn new NamedNode(indexValue,__EMPTY_NODE);};/**\r\n     * @returns String representation for inclusion in a query spec\r\n     */KeyIndex.prototype.toString=function(){return'.key';};return KeyIndex;}(Index);var KEY_INDEX=new KeyIndex();/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * An iterator over an LLRBNode.\r\n */var SortedMapIterator=/** @class */function(){/**\r\n     * @param node - Node to iterate.\r\n     * @param isReverse_ - Whether or not to iterate in reverse\r\n     */function SortedMapIterator(node,startKey,comparator,isReverse_,resultGenerator_){if(resultGenerator_===void 0){resultGenerator_=null;}this.isReverse_=isReverse_;this.resultGenerator_=resultGenerator_;this.nodeStack_=[];var cmp=1;while(!node.isEmpty()){node=node;cmp=startKey?comparator(node.key,startKey):1;// flip the comparison if we're going in reverse\nif(isReverse_){cmp*=-1;}if(cmp<0){// This node is less than our start key. ignore it\nif(this.isReverse_){node=node.left;}else{node=node.right;}}else if(cmp===0){// This node is exactly equal to our start key. Push it on the stack, but stop iterating;\nthis.nodeStack_.push(node);break;}else{// This node is greater than our start key, add it to the stack and move to the next one\nthis.nodeStack_.push(node);if(this.isReverse_){node=node.right;}else{node=node.left;}}}}SortedMapIterator.prototype.getNext=function(){if(this.nodeStack_.length===0){return null;}var node=this.nodeStack_.pop();var result;if(this.resultGenerator_){result=this.resultGenerator_(node.key,node.value);}else{result={key:node.key,value:node.value};}if(this.isReverse_){node=node.left;while(!node.isEmpty()){this.nodeStack_.push(node);node=node.right;}}else{node=node.right;while(!node.isEmpty()){this.nodeStack_.push(node);node=node.left;}}return result;};SortedMapIterator.prototype.hasNext=function(){return this.nodeStack_.length>0;};SortedMapIterator.prototype.peek=function(){if(this.nodeStack_.length===0){return null;}var node=this.nodeStack_[this.nodeStack_.length-1];if(this.resultGenerator_){return this.resultGenerator_(node.key,node.value);}else{return{key:node.key,value:node.value};}};return SortedMapIterator;}();/**\r\n * Represents a node in a Left-leaning Red-Black tree.\r\n */var LLRBNode=/** @class */function(){/**\r\n     * @param key - Key associated with this node.\r\n     * @param value - Value associated with this node.\r\n     * @param color - Whether this node is red.\r\n     * @param left - Left child.\r\n     * @param right - Right child.\r\n     */function LLRBNode(key,value,color,left,right){this.key=key;this.value=value;this.color=color!=null?color:LLRBNode.RED;this.left=left!=null?left:SortedMap.EMPTY_NODE;this.right=right!=null?right:SortedMap.EMPTY_NODE;}/**\r\n     * Returns a copy of the current node, optionally replacing pieces of it.\r\n     *\r\n     * @param key - New key for the node, or null.\r\n     * @param value - New value for the node, or null.\r\n     * @param color - New color for the node, or null.\r\n     * @param left - New left child for the node, or null.\r\n     * @param right - New right child for the node, or null.\r\n     * @returns The node copy.\r\n     */LLRBNode.prototype.copy=function(key,value,color,left,right){return new LLRBNode(key!=null?key:this.key,value!=null?value:this.value,color!=null?color:this.color,left!=null?left:this.left,right!=null?right:this.right);};/**\r\n     * @returns The total number of nodes in the tree.\r\n     */LLRBNode.prototype.count=function(){return this.left.count()+1+this.right.count();};/**\r\n     * @returns True if the tree is empty.\r\n     */LLRBNode.prototype.isEmpty=function(){return false;};/**\r\n     * Traverses the tree in key order and calls the specified action function\r\n     * for each node.\r\n     *\r\n     * @param action - Callback function to be called for each\r\n     *   node.  If it returns true, traversal is aborted.\r\n     * @returns The first truthy value returned by action, or the last falsey\r\n     *   value returned by action\r\n     */LLRBNode.prototype.inorderTraversal=function(action){return this.left.inorderTraversal(action)||!!action(this.key,this.value)||this.right.inorderTraversal(action);};/**\r\n     * Traverses the tree in reverse key order and calls the specified action function\r\n     * for each node.\r\n     *\r\n     * @param action - Callback function to be called for each\r\n     * node.  If it returns true, traversal is aborted.\r\n     * @returns True if traversal was aborted.\r\n     */LLRBNode.prototype.reverseTraversal=function(action){return this.right.reverseTraversal(action)||action(this.key,this.value)||this.left.reverseTraversal(action);};/**\r\n     * @returns The minimum node in the tree.\r\n     */LLRBNode.prototype.min_=function(){if(this.left.isEmpty()){return this;}else{return this.left.min_();}};/**\r\n     * @returns The maximum key in the tree.\r\n     */LLRBNode.prototype.minKey=function(){return this.min_().key;};/**\r\n     * @returns The maximum key in the tree.\r\n     */LLRBNode.prototype.maxKey=function(){if(this.right.isEmpty()){return this.key;}else{return this.right.maxKey();}};/**\r\n     * @param key - Key to insert.\r\n     * @param value - Value to insert.\r\n     * @param comparator - Comparator.\r\n     * @returns New tree, with the key/value added.\r\n     */LLRBNode.prototype.insert=function(key,value,comparator){var n=this;var cmp=comparator(key,n.key);if(cmp<0){n=n.copy(null,null,null,n.left.insert(key,value,comparator),null);}else if(cmp===0){n=n.copy(null,value,null,null,null);}else{n=n.copy(null,null,null,null,n.right.insert(key,value,comparator));}return n.fixUp_();};/**\r\n     * @returns New tree, with the minimum key removed.\r\n     */LLRBNode.prototype.removeMin_=function(){if(this.left.isEmpty()){return SortedMap.EMPTY_NODE;}var n=this;if(!n.left.isRed_()&&!n.left.left.isRed_()){n=n.moveRedLeft_();}n=n.copy(null,null,null,n.left.removeMin_(),null);return n.fixUp_();};/**\r\n     * @param key - The key of the item to remove.\r\n     * @param comparator - Comparator.\r\n     * @returns New tree, with the specified item removed.\r\n     */LLRBNode.prototype.remove=function(key,comparator){var n,smallest;n=this;if(comparator(key,n.key)<0){if(!n.left.isEmpty()&&!n.left.isRed_()&&!n.left.left.isRed_()){n=n.moveRedLeft_();}n=n.copy(null,null,null,n.left.remove(key,comparator),null);}else{if(n.left.isRed_()){n=n.rotateRight_();}if(!n.right.isEmpty()&&!n.right.isRed_()&&!n.right.left.isRed_()){n=n.moveRedRight_();}if(comparator(key,n.key)===0){if(n.right.isEmpty()){return SortedMap.EMPTY_NODE;}else{smallest=n.right.min_();n=n.copy(smallest.key,smallest.value,null,null,n.right.removeMin_());}}n=n.copy(null,null,null,null,n.right.remove(key,comparator));}return n.fixUp_();};/**\r\n     * @returns Whether this is a RED node.\r\n     */LLRBNode.prototype.isRed_=function(){return this.color;};/**\r\n     * @returns New tree after performing any needed rotations.\r\n     */LLRBNode.prototype.fixUp_=function(){var n=this;if(n.right.isRed_()&&!n.left.isRed_()){n=n.rotateLeft_();}if(n.left.isRed_()&&n.left.left.isRed_()){n=n.rotateRight_();}if(n.left.isRed_()&&n.right.isRed_()){n=n.colorFlip_();}return n;};/**\r\n     * @returns New tree, after moveRedLeft.\r\n     */LLRBNode.prototype.moveRedLeft_=function(){var n=this.colorFlip_();if(n.right.left.isRed_()){n=n.copy(null,null,null,null,n.right.rotateRight_());n=n.rotateLeft_();n=n.colorFlip_();}return n;};/**\r\n     * @returns New tree, after moveRedRight.\r\n     */LLRBNode.prototype.moveRedRight_=function(){var n=this.colorFlip_();if(n.left.left.isRed_()){n=n.rotateRight_();n=n.colorFlip_();}return n;};/**\r\n     * @returns New tree, after rotateLeft.\r\n     */LLRBNode.prototype.rotateLeft_=function(){var nl=this.copy(null,null,LLRBNode.RED,null,this.right.left);return this.right.copy(null,null,this.color,nl,null);};/**\r\n     * @returns New tree, after rotateRight.\r\n     */LLRBNode.prototype.rotateRight_=function(){var nr=this.copy(null,null,LLRBNode.RED,this.left.right,null);return this.left.copy(null,null,this.color,null,nr);};/**\r\n     * @returns Newt ree, after colorFlip.\r\n     */LLRBNode.prototype.colorFlip_=function(){var left=this.left.copy(null,null,!this.left.color,null,null);var right=this.right.copy(null,null,!this.right.color,null,null);return this.copy(null,null,!this.color,left,right);};/**\r\n     * For testing.\r\n     *\r\n     * @returns True if all is well.\r\n     */LLRBNode.prototype.checkMaxDepth_=function(){var blackDepth=this.check_();return Math.pow(2.0,blackDepth)<=this.count()+1;};LLRBNode.prototype.check_=function(){if(this.isRed_()&&this.left.isRed_()){throw new Error('Red node has red child('+this.key+','+this.value+')');}if(this.right.isRed_()){throw new Error('Right child of ('+this.key+','+this.value+') is red');}var blackDepth=this.left.check_();if(blackDepth!==this.right.check_()){throw new Error('Black depths differ');}else{return blackDepth+(this.isRed_()?0:1);}};LLRBNode.RED=true;LLRBNode.BLACK=false;return LLRBNode;}();/**\r\n * Represents an empty node (a leaf node in the Red-Black Tree).\r\n */var LLRBEmptyNode=/** @class */function(){function LLRBEmptyNode(){}/**\r\n     * Returns a copy of the current node.\r\n     *\r\n     * @returns The node copy.\r\n     */LLRBEmptyNode.prototype.copy=function(key,value,color,left,right){return this;};/**\r\n     * Returns a copy of the tree, with the specified key/value added.\r\n     *\r\n     * @param key - Key to be added.\r\n     * @param value - Value to be added.\r\n     * @param comparator - Comparator.\r\n     * @returns New tree, with item added.\r\n     */LLRBEmptyNode.prototype.insert=function(key,value,comparator){return new LLRBNode(key,value,null);};/**\r\n     * Returns a copy of the tree, with the specified key removed.\r\n     *\r\n     * @param key - The key to remove.\r\n     * @param comparator - Comparator.\r\n     * @returns New tree, with item removed.\r\n     */LLRBEmptyNode.prototype.remove=function(key,comparator){return this;};/**\r\n     * @returns The total number of nodes in the tree.\r\n     */LLRBEmptyNode.prototype.count=function(){return 0;};/**\r\n     * @returns True if the tree is empty.\r\n     */LLRBEmptyNode.prototype.isEmpty=function(){return true;};/**\r\n     * Traverses the tree in key order and calls the specified action function\r\n     * for each node.\r\n     *\r\n     * @param action - Callback function to be called for each\r\n     * node.  If it returns true, traversal is aborted.\r\n     * @returns True if traversal was aborted.\r\n     */LLRBEmptyNode.prototype.inorderTraversal=function(action){return false;};/**\r\n     * Traverses the tree in reverse key order and calls the specified action function\r\n     * for each node.\r\n     *\r\n     * @param action - Callback function to be called for each\r\n     * node.  If it returns true, traversal is aborted.\r\n     * @returns True if traversal was aborted.\r\n     */LLRBEmptyNode.prototype.reverseTraversal=function(action){return false;};LLRBEmptyNode.prototype.minKey=function(){return null;};LLRBEmptyNode.prototype.maxKey=function(){return null;};LLRBEmptyNode.prototype.check_=function(){return 0;};/**\r\n     * @returns Whether this node is red.\r\n     */LLRBEmptyNode.prototype.isRed_=function(){return false;};return LLRBEmptyNode;}();/**\r\n * An immutable sorted map implementation, based on a Left-leaning Red-Black\r\n * tree.\r\n */var SortedMap=/** @class */function(){/**\r\n     * @param comparator_ - Key comparator.\r\n     * @param root_ - Optional root node for the map.\r\n     */function SortedMap(comparator_,root_){if(root_===void 0){root_=SortedMap.EMPTY_NODE;}this.comparator_=comparator_;this.root_=root_;}/**\r\n     * Returns a copy of the map, with the specified key/value added or replaced.\r\n     * (TODO: We should perhaps rename this method to 'put')\r\n     *\r\n     * @param key - Key to be added.\r\n     * @param value - Value to be added.\r\n     * @returns New map, with item added.\r\n     */SortedMap.prototype.insert=function(key,value){return new SortedMap(this.comparator_,this.root_.insert(key,value,this.comparator_).copy(null,null,LLRBNode.BLACK,null,null));};/**\r\n     * Returns a copy of the map, with the specified key removed.\r\n     *\r\n     * @param key - The key to remove.\r\n     * @returns New map, with item removed.\r\n     */SortedMap.prototype.remove=function(key){return new SortedMap(this.comparator_,this.root_.remove(key,this.comparator_).copy(null,null,LLRBNode.BLACK,null,null));};/**\r\n     * Returns the value of the node with the given key, or null.\r\n     *\r\n     * @param key - The key to look up.\r\n     * @returns The value of the node with the given key, or null if the\r\n     * key doesn't exist.\r\n     */SortedMap.prototype.get=function(key){var cmp;var node=this.root_;while(!node.isEmpty()){cmp=this.comparator_(key,node.key);if(cmp===0){return node.value;}else if(cmp<0){node=node.left;}else if(cmp>0){node=node.right;}}return null;};/**\r\n     * Returns the key of the item *before* the specified key, or null if key is the first item.\r\n     * @param key - The key to find the predecessor of\r\n     * @returns The predecessor key.\r\n     */SortedMap.prototype.getPredecessorKey=function(key){var cmp,node=this.root_,rightParent=null;while(!node.isEmpty()){cmp=this.comparator_(key,node.key);if(cmp===0){if(!node.left.isEmpty()){node=node.left;while(!node.right.isEmpty()){node=node.right;}return node.key;}else if(rightParent){return rightParent.key;}else{return null;// first item.\n}}else if(cmp<0){node=node.left;}else if(cmp>0){rightParent=node;node=node.right;}}throw new Error('Attempted to find predecessor key for a nonexistent key.  What gives?');};/**\r\n     * @returns True if the map is empty.\r\n     */SortedMap.prototype.isEmpty=function(){return this.root_.isEmpty();};/**\r\n     * @returns The total number of nodes in the map.\r\n     */SortedMap.prototype.count=function(){return this.root_.count();};/**\r\n     * @returns The minimum key in the map.\r\n     */SortedMap.prototype.minKey=function(){return this.root_.minKey();};/**\r\n     * @returns The maximum key in the map.\r\n     */SortedMap.prototype.maxKey=function(){return this.root_.maxKey();};/**\r\n     * Traverses the map in key order and calls the specified action function\r\n     * for each key/value pair.\r\n     *\r\n     * @param action - Callback function to be called\r\n     * for each key/value pair.  If action returns true, traversal is aborted.\r\n     * @returns The first truthy value returned by action, or the last falsey\r\n     *   value returned by action\r\n     */SortedMap.prototype.inorderTraversal=function(action){return this.root_.inorderTraversal(action);};/**\r\n     * Traverses the map in reverse key order and calls the specified action function\r\n     * for each key/value pair.\r\n     *\r\n     * @param action - Callback function to be called\r\n     * for each key/value pair.  If action returns true, traversal is aborted.\r\n     * @returns True if the traversal was aborted.\r\n     */SortedMap.prototype.reverseTraversal=function(action){return this.root_.reverseTraversal(action);};/**\r\n     * Returns an iterator over the SortedMap.\r\n     * @returns The iterator.\r\n     */SortedMap.prototype.getIterator=function(resultGenerator){return new SortedMapIterator(this.root_,null,this.comparator_,false,resultGenerator);};SortedMap.prototype.getIteratorFrom=function(key,resultGenerator){return new SortedMapIterator(this.root_,key,this.comparator_,false,resultGenerator);};SortedMap.prototype.getReverseIteratorFrom=function(key,resultGenerator){return new SortedMapIterator(this.root_,key,this.comparator_,true,resultGenerator);};SortedMap.prototype.getReverseIterator=function(resultGenerator){return new SortedMapIterator(this.root_,null,this.comparator_,true,resultGenerator);};/**\r\n     * Always use the same empty node, to reduce memory.\r\n     */SortedMap.EMPTY_NODE=new LLRBEmptyNode();return SortedMap;}();/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */function NAME_ONLY_COMPARATOR(left,right){return nameCompare(left.name,right.name);}function NAME_COMPARATOR(left,right){return nameCompare(left,right);}/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */var MAX_NODE$2;function setMaxNode$1(val){MAX_NODE$2=val;}var priorityHashText=function(priority){if(typeof priority==='number'){return'number:'+doubleToIEEE754String(priority);}else{return'string:'+priority;}};/**\r\n * Validates that a priority snapshot Node is valid.\r\n */var validatePriorityNode=function(priorityNode){if(priorityNode.isLeafNode()){var val=priorityNode.val();assert(typeof val==='string'||typeof val==='number'||typeof val==='object'&&contains(val,'.sv'),'Priority must be a string or number.');}else{assert(priorityNode===MAX_NODE$2||priorityNode.isEmpty(),'priority of unexpected type.');}// Don't call getPriority() on MAX_NODE to avoid hitting assertion.\nassert(priorityNode===MAX_NODE$2||priorityNode.getPriority().isEmpty(),\"Priority nodes can't have a priority of their own.\");};/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */var __childrenNodeConstructor;/**\r\n * LeafNode is a class for storing leaf nodes in a DataSnapshot.  It\r\n * implements Node and stores the value of the node (a string,\r\n * number, or boolean) accessible via getValue().\r\n */var LeafNode=/** @class */function(){/**\r\n     * @param value_ - The value to store in this leaf node. The object type is\r\n     * possible in the event of a deferred value\r\n     * @param priorityNode_ - The priority of this node.\r\n     */function LeafNode(value_,priorityNode_){if(priorityNode_===void 0){priorityNode_=LeafNode.__childrenNodeConstructor.EMPTY_NODE;}this.value_=value_;this.priorityNode_=priorityNode_;this.lazyHash_=null;assert(this.value_!==undefined&&this.value_!==null,\"LeafNode shouldn't be created with null/undefined value.\");validatePriorityNode(this.priorityNode_);}Object.defineProperty(LeafNode,\"__childrenNodeConstructor\",{get:function(){return __childrenNodeConstructor;},set:function(val){__childrenNodeConstructor=val;},enumerable:false,configurable:true});/** @inheritDoc */LeafNode.prototype.isLeafNode=function(){return true;};/** @inheritDoc */LeafNode.prototype.getPriority=function(){return this.priorityNode_;};/** @inheritDoc */LeafNode.prototype.updatePriority=function(newPriorityNode){return new LeafNode(this.value_,newPriorityNode);};/** @inheritDoc */LeafNode.prototype.getImmediateChild=function(childName){// Hack to treat priority as a regular child\nif(childName==='.priority'){return this.priorityNode_;}else{return LeafNode.__childrenNodeConstructor.EMPTY_NODE;}};/** @inheritDoc */LeafNode.prototype.getChild=function(path){if(pathIsEmpty(path)){return this;}else if(pathGetFront(path)==='.priority'){return this.priorityNode_;}else{return LeafNode.__childrenNodeConstructor.EMPTY_NODE;}};LeafNode.prototype.hasChild=function(){return false;};/** @inheritDoc */LeafNode.prototype.getPredecessorChildName=function(childName,childNode){return null;};/** @inheritDoc */LeafNode.prototype.updateImmediateChild=function(childName,newChildNode){if(childName==='.priority'){return this.updatePriority(newChildNode);}else if(newChildNode.isEmpty()&&childName!=='.priority'){return this;}else{return LeafNode.__childrenNodeConstructor.EMPTY_NODE.updateImmediateChild(childName,newChildNode).updatePriority(this.priorityNode_);}};/** @inheritDoc */LeafNode.prototype.updateChild=function(path,newChildNode){var front=pathGetFront(path);if(front===null){return newChildNode;}else if(newChildNode.isEmpty()&&front!=='.priority'){return this;}else{assert(front!=='.priority'||pathGetLength(path)===1,'.priority must be the last token in a path');return this.updateImmediateChild(front,LeafNode.__childrenNodeConstructor.EMPTY_NODE.updateChild(pathPopFront(path),newChildNode));}};/** @inheritDoc */LeafNode.prototype.isEmpty=function(){return false;};/** @inheritDoc */LeafNode.prototype.numChildren=function(){return 0;};/** @inheritDoc */LeafNode.prototype.forEachChild=function(index,action){return false;};LeafNode.prototype.val=function(exportFormat){if(exportFormat&&!this.getPriority().isEmpty()){return{'.value':this.getValue(),'.priority':this.getPriority().val()};}else{return this.getValue();}};/** @inheritDoc */LeafNode.prototype.hash=function(){if(this.lazyHash_===null){var toHash='';if(!this.priorityNode_.isEmpty()){toHash+='priority:'+priorityHashText(this.priorityNode_.val())+':';}var type=typeof this.value_;toHash+=type+':';if(type==='number'){toHash+=doubleToIEEE754String(this.value_);}else{toHash+=this.value_;}this.lazyHash_=sha1(toHash);}return this.lazyHash_;};/**\r\n     * Returns the value of the leaf node.\r\n     * @returns The value of the node.\r\n     */LeafNode.prototype.getValue=function(){return this.value_;};LeafNode.prototype.compareTo=function(other){if(other===LeafNode.__childrenNodeConstructor.EMPTY_NODE){return 1;}else if(other instanceof LeafNode.__childrenNodeConstructor){return-1;}else{assert(other.isLeafNode(),'Unknown node type');return this.compareToLeafNode_(other);}};/**\r\n     * Comparison specifically for two leaf nodes\r\n     */LeafNode.prototype.compareToLeafNode_=function(otherLeaf){var otherLeafType=typeof otherLeaf.value_;var thisLeafType=typeof this.value_;var otherIndex=LeafNode.VALUE_TYPE_ORDER.indexOf(otherLeafType);var thisIndex=LeafNode.VALUE_TYPE_ORDER.indexOf(thisLeafType);assert(otherIndex>=0,'Unknown leaf type: '+otherLeafType);assert(thisIndex>=0,'Unknown leaf type: '+thisLeafType);if(otherIndex===thisIndex){// Same type, compare values\nif(thisLeafType==='object'){// Deferred value nodes are all equal, but we should also never get to this point...\nreturn 0;}else{// Note that this works because true > false, all others are number or string comparisons\nif(this.value_<otherLeaf.value_){return-1;}else if(this.value_===otherLeaf.value_){return 0;}else{return 1;}}}else{return thisIndex-otherIndex;}};LeafNode.prototype.withIndex=function(){return this;};LeafNode.prototype.isIndexed=function(){return true;};LeafNode.prototype.equals=function(other){if(other===this){return true;}else if(other.isLeafNode()){var otherLeaf=other;return this.value_===otherLeaf.value_&&this.priorityNode_.equals(otherLeaf.priorityNode_);}else{return false;}};/**\r\n     * The sort order for comparing leaf nodes of different types. If two leaf nodes have\r\n     * the same type, the comparison falls back to their value\r\n     */LeafNode.VALUE_TYPE_ORDER=['object','boolean','number','string'];return LeafNode;}();/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */var nodeFromJSON$1;var MAX_NODE$1;function setNodeFromJSON(val){nodeFromJSON$1=val;}function setMaxNode(val){MAX_NODE$1=val;}var PriorityIndex=/** @class */function(_super){__extends(PriorityIndex,_super);function PriorityIndex(){return _super!==null&&_super.apply(this,arguments)||this;}PriorityIndex.prototype.compare=function(a,b){var aPriority=a.node.getPriority();var bPriority=b.node.getPriority();var indexCmp=aPriority.compareTo(bPriority);if(indexCmp===0){return nameCompare(a.name,b.name);}else{return indexCmp;}};PriorityIndex.prototype.isDefinedOn=function(node){return!node.getPriority().isEmpty();};PriorityIndex.prototype.indexedValueChanged=function(oldNode,newNode){return!oldNode.getPriority().equals(newNode.getPriority());};PriorityIndex.prototype.minPost=function(){// eslint-disable-next-line @typescript-eslint/no-explicit-any\nreturn NamedNode.MIN;};PriorityIndex.prototype.maxPost=function(){return new NamedNode(MAX_NAME,new LeafNode('[PRIORITY-POST]',MAX_NODE$1));};PriorityIndex.prototype.makePost=function(indexValue,name){var priorityNode=nodeFromJSON$1(indexValue);return new NamedNode(name,new LeafNode('[PRIORITY-POST]',priorityNode));};/**\r\n     * @returns String representation for inclusion in a query spec\r\n     */PriorityIndex.prototype.toString=function(){return'.priority';};return PriorityIndex;}(Index);var PRIORITY_INDEX=new PriorityIndex();/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */var LOG_2=Math.log(2);var Base12Num=/** @class */function(){function Base12Num(length){var logBase2=function(num){// eslint-disable-next-line @typescript-eslint/no-explicit-any\nreturn parseInt(Math.log(num)/LOG_2,10);};var bitMask=function(bits){return parseInt(Array(bits+1).join('1'),2);};this.count=logBase2(length+1);this.current_=this.count-1;var mask=bitMask(this.count);this.bits_=length+1&mask;}Base12Num.prototype.nextBitIsOne=function(){//noinspection JSBitwiseOperatorUsage\nvar result=!(this.bits_&0x1<<this.current_);this.current_--;return result;};return Base12Num;}();/**\r\n * Takes a list of child nodes and constructs a SortedSet using the given comparison\r\n * function\r\n *\r\n * Uses the algorithm described in the paper linked here:\r\n * http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.46.1458\r\n *\r\n * @param childList - Unsorted list of children\r\n * @param cmp - The comparison method to be used\r\n * @param keyFn - An optional function to extract K from a node wrapper, if K's\r\n * type is not NamedNode\r\n * @param mapSortFn - An optional override for comparator used by the generated sorted map\r\n */var buildChildSet=function(childList,cmp,keyFn,mapSortFn){childList.sort(cmp);var buildBalancedTree=function(low,high){var length=high-low;var namedNode;var key;if(length===0){return null;}else if(length===1){namedNode=childList[low];key=keyFn?keyFn(namedNode):namedNode;return new LLRBNode(key,namedNode.node,LLRBNode.BLACK,null,null);}else{// eslint-disable-next-line @typescript-eslint/no-explicit-any\nvar middle=parseInt(length/2,10)+low;var left=buildBalancedTree(low,middle);var right=buildBalancedTree(middle+1,high);namedNode=childList[middle];key=keyFn?keyFn(namedNode):namedNode;return new LLRBNode(key,namedNode.node,LLRBNode.BLACK,left,right);}};var buildFrom12Array=function(base12){var node=null;var root=null;var index=childList.length;var buildPennant=function(chunkSize,color){var low=index-chunkSize;var high=index;index-=chunkSize;var childTree=buildBalancedTree(low+1,high);var namedNode=childList[low];var key=keyFn?keyFn(namedNode):namedNode;attachPennant(new LLRBNode(key,namedNode.node,color,null,childTree));};var attachPennant=function(pennant){if(node){node.left=pennant;node=pennant;}else{root=pennant;node=pennant;}};for(var i=0;i<base12.count;++i){var isOne=base12.nextBitIsOne();// The number of nodes taken in each slice is 2^(arr.length - (i + 1))\nvar chunkSize=Math.pow(2,base12.count-(i+1));if(isOne){buildPennant(chunkSize,LLRBNode.BLACK);}else{// current == 2\nbuildPennant(chunkSize,LLRBNode.BLACK);buildPennant(chunkSize,LLRBNode.RED);}}return root;};var base12=new Base12Num(childList.length);var root=buildFrom12Array(base12);// eslint-disable-next-line @typescript-eslint/no-explicit-any\nreturn new SortedMap(mapSortFn||cmp,root);};/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */var _defaultIndexMap;var fallbackObject={};var IndexMap=/** @class */function(){function IndexMap(indexes_,indexSet_){this.indexes_=indexes_;this.indexSet_=indexSet_;}Object.defineProperty(IndexMap,\"Default\",{/**\r\n         * The default IndexMap for nodes without a priority\r\n         */get:function(){assert(fallbackObject&&PRIORITY_INDEX,'ChildrenNode.ts has not been loaded');_defaultIndexMap=_defaultIndexMap||new IndexMap({'.priority':fallbackObject},{'.priority':PRIORITY_INDEX});return _defaultIndexMap;},enumerable:false,configurable:true});IndexMap.prototype.get=function(indexKey){var sortedMap=safeGet(this.indexes_,indexKey);if(!sortedMap){throw new Error('No index defined for '+indexKey);}if(sortedMap instanceof SortedMap){return sortedMap;}else{// The index exists, but it falls back to just name comparison. Return null so that the calling code uses the\n// regular child map\nreturn null;}};IndexMap.prototype.hasIndex=function(indexDefinition){return contains(this.indexSet_,indexDefinition.toString());};IndexMap.prototype.addIndex=function(indexDefinition,existingChildren){assert(indexDefinition!==KEY_INDEX,\"KeyIndex always exists and isn't meant to be added to the IndexMap.\");var childList=[];var sawIndexedValue=false;var iter=existingChildren.getIterator(NamedNode.Wrap);var next=iter.getNext();while(next){sawIndexedValue=sawIndexedValue||indexDefinition.isDefinedOn(next.node);childList.push(next);next=iter.getNext();}var newIndex;if(sawIndexedValue){newIndex=buildChildSet(childList,indexDefinition.getCompare());}else{newIndex=fallbackObject;}var indexName=indexDefinition.toString();var newIndexSet=__assign({},this.indexSet_);newIndexSet[indexName]=indexDefinition;var newIndexes=__assign({},this.indexes_);newIndexes[indexName]=newIndex;return new IndexMap(newIndexes,newIndexSet);};/**\r\n     * Ensure that this node is properly tracked in any indexes that we're maintaining\r\n     */IndexMap.prototype.addToIndexes=function(namedNode,existingChildren){var _this=this;var newIndexes=map(this.indexes_,function(indexedChildren,indexName){var index=safeGet(_this.indexSet_,indexName);assert(index,'Missing index implementation for '+indexName);if(indexedChildren===fallbackObject){// Check to see if we need to index everything\nif(index.isDefinedOn(namedNode.node)){// We need to build this index\nvar childList=[];var iter=existingChildren.getIterator(NamedNode.Wrap);var next=iter.getNext();while(next){if(next.name!==namedNode.name){childList.push(next);}next=iter.getNext();}childList.push(namedNode);return buildChildSet(childList,index.getCompare());}else{// No change, this remains a fallback\nreturn fallbackObject;}}else{var existingSnap=existingChildren.get(namedNode.name);var newChildren=indexedChildren;if(existingSnap){newChildren=newChildren.remove(new NamedNode(namedNode.name,existingSnap));}return newChildren.insert(namedNode,namedNode.node);}});return new IndexMap(newIndexes,this.indexSet_);};/**\r\n     * Create a new IndexMap instance with the given value removed\r\n     */IndexMap.prototype.removeFromIndexes=function(namedNode,existingChildren){var newIndexes=map(this.indexes_,function(indexedChildren){if(indexedChildren===fallbackObject){// This is the fallback. Just return it, nothing to do in this case\nreturn indexedChildren;}else{var existingSnap=existingChildren.get(namedNode.name);if(existingSnap){return indexedChildren.remove(new NamedNode(namedNode.name,existingSnap));}else{// No record of this child\nreturn indexedChildren;}}});return new IndexMap(newIndexes,this.indexSet_);};return IndexMap;}();/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ // TODO: For memory savings, don't store priorityNode_ if it's empty.\nvar EMPTY_NODE;/**\r\n * ChildrenNode is a class for storing internal nodes in a DataSnapshot\r\n * (i.e. nodes with children).  It implements Node and stores the\r\n * list of children in the children property, sorted by child name.\r\n */var ChildrenNode=/** @class */function(){/**\r\n     * @param children_ - List of children of this node..\r\n     * @param priorityNode_ - The priority of this node (as a snapshot node).\r\n     */function ChildrenNode(children_,priorityNode_,indexMap_){this.children_=children_;this.priorityNode_=priorityNode_;this.indexMap_=indexMap_;this.lazyHash_=null;/**\r\n         * Note: The only reason we allow null priority is for EMPTY_NODE, since we can't use\r\n         * EMPTY_NODE as the priority of EMPTY_NODE.  We might want to consider making EMPTY_NODE its own\r\n         * class instead of an empty ChildrenNode.\r\n         */if(this.priorityNode_){validatePriorityNode(this.priorityNode_);}if(this.children_.isEmpty()){assert(!this.priorityNode_||this.priorityNode_.isEmpty(),'An empty node cannot have a priority');}}Object.defineProperty(ChildrenNode,\"EMPTY_NODE\",{get:function(){return EMPTY_NODE||(EMPTY_NODE=new ChildrenNode(new SortedMap(NAME_COMPARATOR),null,IndexMap.Default));},enumerable:false,configurable:true});/** @inheritDoc */ChildrenNode.prototype.isLeafNode=function(){return false;};/** @inheritDoc */ChildrenNode.prototype.getPriority=function(){return this.priorityNode_||EMPTY_NODE;};/** @inheritDoc */ChildrenNode.prototype.updatePriority=function(newPriorityNode){if(this.children_.isEmpty()){// Don't allow priorities on empty nodes\nreturn this;}else{return new ChildrenNode(this.children_,newPriorityNode,this.indexMap_);}};/** @inheritDoc */ChildrenNode.prototype.getImmediateChild=function(childName){// Hack to treat priority as a regular child\nif(childName==='.priority'){return this.getPriority();}else{var child=this.children_.get(childName);return child===null?EMPTY_NODE:child;}};/** @inheritDoc */ChildrenNode.prototype.getChild=function(path){var front=pathGetFront(path);if(front===null){return this;}return this.getImmediateChild(front).getChild(pathPopFront(path));};/** @inheritDoc */ChildrenNode.prototype.hasChild=function(childName){return this.children_.get(childName)!==null;};/** @inheritDoc */ChildrenNode.prototype.updateImmediateChild=function(childName,newChildNode){assert(newChildNode,'We should always be passing snapshot nodes');if(childName==='.priority'){return this.updatePriority(newChildNode);}else{var namedNode=new NamedNode(childName,newChildNode);var newChildren=void 0,newIndexMap=void 0;if(newChildNode.isEmpty()){newChildren=this.children_.remove(childName);newIndexMap=this.indexMap_.removeFromIndexes(namedNode,this.children_);}else{newChildren=this.children_.insert(childName,newChildNode);newIndexMap=this.indexMap_.addToIndexes(namedNode,this.children_);}var newPriority=newChildren.isEmpty()?EMPTY_NODE:this.priorityNode_;return new ChildrenNode(newChildren,newPriority,newIndexMap);}};/** @inheritDoc */ChildrenNode.prototype.updateChild=function(path,newChildNode){var front=pathGetFront(path);if(front===null){return newChildNode;}else{assert(pathGetFront(path)!=='.priority'||pathGetLength(path)===1,'.priority must be the last token in a path');var newImmediateChild=this.getImmediateChild(front).updateChild(pathPopFront(path),newChildNode);return this.updateImmediateChild(front,newImmediateChild);}};/** @inheritDoc */ChildrenNode.prototype.isEmpty=function(){return this.children_.isEmpty();};/** @inheritDoc */ChildrenNode.prototype.numChildren=function(){return this.children_.count();};/** @inheritDoc */ChildrenNode.prototype.val=function(exportFormat){if(this.isEmpty()){return null;}var obj={};var numKeys=0,maxKey=0,allIntegerKeys=true;this.forEachChild(PRIORITY_INDEX,function(key,childNode){obj[key]=childNode.val(exportFormat);numKeys++;if(allIntegerKeys&&ChildrenNode.INTEGER_REGEXP_.test(key)){maxKey=Math.max(maxKey,Number(key));}else{allIntegerKeys=false;}});if(!exportFormat&&allIntegerKeys&&maxKey<2*numKeys){// convert to array.\nvar array=[];// eslint-disable-next-line guard-for-in\nfor(var key in obj){array[key]=obj[key];}return array;}else{if(exportFormat&&!this.getPriority().isEmpty()){obj['.priority']=this.getPriority().val();}return obj;}};/** @inheritDoc */ChildrenNode.prototype.hash=function(){if(this.lazyHash_===null){var toHash_1='';if(!this.getPriority().isEmpty()){toHash_1+='priority:'+priorityHashText(this.getPriority().val())+':';}this.forEachChild(PRIORITY_INDEX,function(key,childNode){var childHash=childNode.hash();if(childHash!==''){toHash_1+=':'+key+':'+childHash;}});this.lazyHash_=toHash_1===''?'':sha1(toHash_1);}return this.lazyHash_;};/** @inheritDoc */ChildrenNode.prototype.getPredecessorChildName=function(childName,childNode,index){var idx=this.resolveIndex_(index);if(idx){var predecessor=idx.getPredecessorKey(new NamedNode(childName,childNode));return predecessor?predecessor.name:null;}else{return this.children_.getPredecessorKey(childName);}};ChildrenNode.prototype.getFirstChildName=function(indexDefinition){var idx=this.resolveIndex_(indexDefinition);if(idx){var minKey=idx.minKey();return minKey&&minKey.name;}else{return this.children_.minKey();}};ChildrenNode.prototype.getFirstChild=function(indexDefinition){var minKey=this.getFirstChildName(indexDefinition);if(minKey){return new NamedNode(minKey,this.children_.get(minKey));}else{return null;}};/**\r\n     * Given an index, return the key name of the largest value we have, according to that index\r\n     */ChildrenNode.prototype.getLastChildName=function(indexDefinition){var idx=this.resolveIndex_(indexDefinition);if(idx){var maxKey=idx.maxKey();return maxKey&&maxKey.name;}else{return this.children_.maxKey();}};ChildrenNode.prototype.getLastChild=function(indexDefinition){var maxKey=this.getLastChildName(indexDefinition);if(maxKey){return new NamedNode(maxKey,this.children_.get(maxKey));}else{return null;}};ChildrenNode.prototype.forEachChild=function(index,action){var idx=this.resolveIndex_(index);if(idx){return idx.inorderTraversal(function(wrappedNode){return action(wrappedNode.name,wrappedNode.node);});}else{return this.children_.inorderTraversal(action);}};ChildrenNode.prototype.getIterator=function(indexDefinition){return this.getIteratorFrom(indexDefinition.minPost(),indexDefinition);};ChildrenNode.prototype.getIteratorFrom=function(startPost,indexDefinition){var idx=this.resolveIndex_(indexDefinition);if(idx){return idx.getIteratorFrom(startPost,function(key){return key;});}else{var iterator=this.children_.getIteratorFrom(startPost.name,NamedNode.Wrap);var next=iterator.peek();while(next!=null&&indexDefinition.compare(next,startPost)<0){iterator.getNext();next=iterator.peek();}return iterator;}};ChildrenNode.prototype.getReverseIterator=function(indexDefinition){return this.getReverseIteratorFrom(indexDefinition.maxPost(),indexDefinition);};ChildrenNode.prototype.getReverseIteratorFrom=function(endPost,indexDefinition){var idx=this.resolveIndex_(indexDefinition);if(idx){return idx.getReverseIteratorFrom(endPost,function(key){return key;});}else{var iterator=this.children_.getReverseIteratorFrom(endPost.name,NamedNode.Wrap);var next=iterator.peek();while(next!=null&&indexDefinition.compare(next,endPost)>0){iterator.getNext();next=iterator.peek();}return iterator;}};ChildrenNode.prototype.compareTo=function(other){if(this.isEmpty()){if(other.isEmpty()){return 0;}else{return-1;}}else if(other.isLeafNode()||other.isEmpty()){return 1;}else if(other===MAX_NODE){return-1;}else{// Must be another node with children.\nreturn 0;}};ChildrenNode.prototype.withIndex=function(indexDefinition){if(indexDefinition===KEY_INDEX||this.indexMap_.hasIndex(indexDefinition)){return this;}else{var newIndexMap=this.indexMap_.addIndex(indexDefinition,this.children_);return new ChildrenNode(this.children_,this.priorityNode_,newIndexMap);}};ChildrenNode.prototype.isIndexed=function(index){return index===KEY_INDEX||this.indexMap_.hasIndex(index);};ChildrenNode.prototype.equals=function(other){if(other===this){return true;}else if(other.isLeafNode()){return false;}else{var otherChildrenNode=other;if(!this.getPriority().equals(otherChildrenNode.getPriority())){return false;}else if(this.children_.count()===otherChildrenNode.children_.count()){var thisIter=this.getIterator(PRIORITY_INDEX);var otherIter=otherChildrenNode.getIterator(PRIORITY_INDEX);var thisCurrent=thisIter.getNext();var otherCurrent=otherIter.getNext();while(thisCurrent&&otherCurrent){if(thisCurrent.name!==otherCurrent.name||!thisCurrent.node.equals(otherCurrent.node)){return false;}thisCurrent=thisIter.getNext();otherCurrent=otherIter.getNext();}return thisCurrent===null&&otherCurrent===null;}else{return false;}}};/**\r\n     * Returns a SortedMap ordered by index, or null if the default (by-key) ordering can be used\r\n     * instead.\r\n     *\r\n     */ChildrenNode.prototype.resolveIndex_=function(indexDefinition){if(indexDefinition===KEY_INDEX){return null;}else{return this.indexMap_.get(indexDefinition.toString());}};ChildrenNode.INTEGER_REGEXP_=/^(0|[1-9]\\d*)$/;return ChildrenNode;}();var MaxNode=/** @class */function(_super){__extends(MaxNode,_super);function MaxNode(){return _super.call(this,new SortedMap(NAME_COMPARATOR),ChildrenNode.EMPTY_NODE,IndexMap.Default)||this;}MaxNode.prototype.compareTo=function(other){if(other===this){return 0;}else{return 1;}};MaxNode.prototype.equals=function(other){// Not that we every compare it, but MAX_NODE is only ever equal to itself\nreturn other===this;};MaxNode.prototype.getPriority=function(){return this;};MaxNode.prototype.getImmediateChild=function(childName){return ChildrenNode.EMPTY_NODE;};MaxNode.prototype.isEmpty=function(){return false;};return MaxNode;}(ChildrenNode);/**\r\n * Marker that will sort higher than any other snapshot.\r\n */var MAX_NODE=new MaxNode();Object.defineProperties(NamedNode,{MIN:{value:new NamedNode(MIN_NAME,ChildrenNode.EMPTY_NODE)},MAX:{value:new NamedNode(MAX_NAME,MAX_NODE)}});/**\r\n * Reference Extensions\r\n */KeyIndex.__EMPTY_NODE=ChildrenNode.EMPTY_NODE;LeafNode.__childrenNodeConstructor=ChildrenNode;setMaxNode$1(MAX_NODE);setMaxNode(MAX_NODE);/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */var USE_HINZE=true;/**\r\n * Constructs a snapshot node representing the passed JSON and returns it.\r\n * @param json - JSON to create a node for.\r\n * @param priority - Optional priority to use.  This will be ignored if the\r\n * passed JSON contains a .priority property.\r\n */function nodeFromJSON(json,priority){if(priority===void 0){priority=null;}if(json===null){return ChildrenNode.EMPTY_NODE;}if(typeof json==='object'&&'.priority'in json){priority=json['.priority'];}assert(priority===null||typeof priority==='string'||typeof priority==='number'||typeof priority==='object'&&'.sv'in priority,'Invalid priority type found: '+typeof priority);if(typeof json==='object'&&'.value'in json&&json['.value']!==null){json=json['.value'];}// Valid leaf nodes include non-objects or server-value wrapper objects\nif(typeof json!=='object'||'.sv'in json){var jsonLeaf=json;return new LeafNode(jsonLeaf,nodeFromJSON(priority));}if(!(json instanceof Array)&&USE_HINZE){var children_1=[];var childrenHavePriority_1=false;var hinzeJsonObj=json;each(hinzeJsonObj,function(key,child){if(key.substring(0,1)!=='.'){// Ignore metadata nodes\nvar childNode=nodeFromJSON(child);if(!childNode.isEmpty()){childrenHavePriority_1=childrenHavePriority_1||!childNode.getPriority().isEmpty();children_1.push(new NamedNode(key,childNode));}}});if(children_1.length===0){return ChildrenNode.EMPTY_NODE;}var childSet=buildChildSet(children_1,NAME_ONLY_COMPARATOR,function(namedNode){return namedNode.name;},NAME_COMPARATOR);if(childrenHavePriority_1){var sortedChildSet=buildChildSet(children_1,PRIORITY_INDEX.getCompare());return new ChildrenNode(childSet,nodeFromJSON(priority),new IndexMap({'.priority':sortedChildSet},{'.priority':PRIORITY_INDEX}));}else{return new ChildrenNode(childSet,nodeFromJSON(priority),IndexMap.Default);}}else{var node_1=ChildrenNode.EMPTY_NODE;each(json,function(key,childData){if(contains(json,key)){if(key.substring(0,1)!=='.'){// ignore metadata nodes.\nvar childNode=nodeFromJSON(childData);if(childNode.isLeafNode()||!childNode.isEmpty()){node_1=node_1.updateImmediateChild(key,childNode);}}}});return node_1.updatePriority(nodeFromJSON(priority));}}setNodeFromJSON(nodeFromJSON);/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */var PathIndex=/** @class */function(_super){__extends(PathIndex,_super);function PathIndex(indexPath_){var _this=_super.call(this)||this;_this.indexPath_=indexPath_;assert(!pathIsEmpty(indexPath_)&&pathGetFront(indexPath_)!=='.priority',\"Can't create PathIndex with empty path or .priority key\");return _this;}PathIndex.prototype.extractChild=function(snap){return snap.getChild(this.indexPath_);};PathIndex.prototype.isDefinedOn=function(node){return!node.getChild(this.indexPath_).isEmpty();};PathIndex.prototype.compare=function(a,b){var aChild=this.extractChild(a.node);var bChild=this.extractChild(b.node);var indexCmp=aChild.compareTo(bChild);if(indexCmp===0){return nameCompare(a.name,b.name);}else{return indexCmp;}};PathIndex.prototype.makePost=function(indexValue,name){var valueNode=nodeFromJSON(indexValue);var node=ChildrenNode.EMPTY_NODE.updateChild(this.indexPath_,valueNode);return new NamedNode(name,node);};PathIndex.prototype.maxPost=function(){var node=ChildrenNode.EMPTY_NODE.updateChild(this.indexPath_,MAX_NODE);return new NamedNode(MAX_NAME,node);};PathIndex.prototype.toString=function(){return pathSlice(this.indexPath_,0).join('/');};return PathIndex;}(Index);/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */var ValueIndex=/** @class */function(_super){__extends(ValueIndex,_super);function ValueIndex(){return _super!==null&&_super.apply(this,arguments)||this;}ValueIndex.prototype.compare=function(a,b){var indexCmp=a.node.compareTo(b.node);if(indexCmp===0){return nameCompare(a.name,b.name);}else{return indexCmp;}};ValueIndex.prototype.isDefinedOn=function(node){return true;};ValueIndex.prototype.indexedValueChanged=function(oldNode,newNode){return!oldNode.equals(newNode);};ValueIndex.prototype.minPost=function(){// eslint-disable-next-line @typescript-eslint/no-explicit-any\nreturn NamedNode.MIN;};ValueIndex.prototype.maxPost=function(){// eslint-disable-next-line @typescript-eslint/no-explicit-any\nreturn NamedNode.MAX;};ValueIndex.prototype.makePost=function(indexValue,name){var valueNode=nodeFromJSON(indexValue);return new NamedNode(name,valueNode);};/**\r\n     * @returns String representation for inclusion in a query spec\r\n     */ValueIndex.prototype.toString=function(){return'.value';};return ValueIndex;}(Index);var VALUE_INDEX=new ValueIndex();/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ // Modeled after base64 web-safe chars, but ordered by ASCII.\nvar PUSH_CHARS='-0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ_abcdefghijklmnopqrstuvwxyz';var MIN_PUSH_CHAR='-';var MAX_PUSH_CHAR='z';var MAX_KEY_LEN=786;/**\r\n * Fancy ID generator that creates 20-character string identifiers with the\r\n * following properties:\r\n *\r\n * 1. They're based on timestamp so that they sort *after* any existing ids.\r\n * 2. They contain 72-bits of random data after the timestamp so that IDs won't\r\n *    collide with other clients' IDs.\r\n * 3. They sort *lexicographically* (so the timestamp is converted to characters\r\n *    that will sort properly).\r\n * 4. They're monotonically increasing. Even if you generate more than one in\r\n *    the same timestamp, the latter ones will sort after the former ones. We do\r\n *    this by using the previous random bits but \"incrementing\" them by 1 (only\r\n *    in the case of a timestamp collision).\r\n */var nextPushId=function(){// Timestamp of last push, used to prevent local collisions if you push twice\n// in one ms.\nvar lastPushTime=0;// We generate 72-bits of randomness which get turned into 12 characters and\n// appended to the timestamp to prevent collisions with other clients. We\n// store the last characters we generated because in the event of a collision,\n// we'll use those same characters except \"incremented\" by one.\nvar lastRandChars=[];return function(now){var duplicateTime=now===lastPushTime;lastPushTime=now;var i;var timeStampChars=new Array(8);for(i=7;i>=0;i--){timeStampChars[i]=PUSH_CHARS.charAt(now%64);// NOTE: Can't use << here because javascript will convert to int and lose\n// the upper bits.\nnow=Math.floor(now/64);}assert(now===0,'Cannot push at time == 0');var id=timeStampChars.join('');if(!duplicateTime){for(i=0;i<12;i++){lastRandChars[i]=Math.floor(Math.random()*64);}}else{// If the timestamp hasn't changed since last push, use the same random\n// number, except incremented by 1.\nfor(i=11;i>=0&&lastRandChars[i]===63;i--){lastRandChars[i]=0;}lastRandChars[i]++;}for(i=0;i<12;i++){id+=PUSH_CHARS.charAt(lastRandChars[i]);}assert(id.length===20,'nextPushId: Length should be 20.');return id;};}();var successor=function(key){if(key===''+INTEGER_32_MAX){// See https://firebase.google.com/docs/database/web/lists-of-data#data-order\nreturn MIN_PUSH_CHAR;}var keyAsInt=tryParseInt(key);if(keyAsInt!=null){return''+(keyAsInt+1);}var next=new Array(key.length);for(var i_1=0;i_1<next.length;i_1++){next[i_1]=key.charAt(i_1);}if(next.length<MAX_KEY_LEN){next.push(MIN_PUSH_CHAR);return next.join('');}var i=next.length-1;while(i>=0&&next[i]===MAX_PUSH_CHAR){i--;}// `successor` was called on the largest possible key, so return the\n// MAX_NAME, which sorts larger than all keys.\nif(i===-1){return MAX_NAME;}var source=next[i];var sourcePlusOne=PUSH_CHARS.charAt(PUSH_CHARS.indexOf(source)+1);next[i]=sourcePlusOne;return next.slice(0,i+1).join('');};// `key` is assumed to be non-empty.\nvar predecessor=function(key){if(key===''+INTEGER_32_MIN){return MIN_NAME;}var keyAsInt=tryParseInt(key);if(keyAsInt!=null){return''+(keyAsInt-1);}var next=new Array(key.length);for(var i=0;i<next.length;i++){next[i]=key.charAt(i);}// If `key` ends in `MIN_PUSH_CHAR`, the largest key lexicographically\n// smaller than `key`, is `key[0:key.length - 1]`. The next key smaller\n// than that, `predecessor(predecessor(key))`, is\n//\n// `key[0:key.length - 2] + (key[key.length - 1] - 1) + \\\n//   { MAX_PUSH_CHAR repeated MAX_KEY_LEN - (key.length - 1) times }\n//\n// analogous to increment/decrement for base-10 integers.\n//\n// This works because lexigographic comparison works character-by-character,\n// using length as a tie-breaker if one key is a prefix of the other.\nif(next[next.length-1]===MIN_PUSH_CHAR){if(next.length===1){// See https://firebase.google.com/docs/database/web/lists-of-data#orderbykey\nreturn''+INTEGER_32_MAX;}delete next[next.length-1];return next.join('');}// Replace the last character with it's immediate predecessor, and\n// fill the suffix of the key with MAX_PUSH_CHAR. This is the\n// lexicographically largest possible key smaller than `key`.\nnext[next.length-1]=PUSH_CHARS.charAt(PUSH_CHARS.indexOf(next[next.length-1])-1);return next.join('')+MAX_PUSH_CHAR.repeat(MAX_KEY_LEN-next.length);};/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */function changeValue(snapshotNode){return{type:\"value\"/* VALUE */,snapshotNode:snapshotNode};}function changeChildAdded(childName,snapshotNode){return{type:\"child_added\"/* CHILD_ADDED */,snapshotNode:snapshotNode,childName:childName};}function changeChildRemoved(childName,snapshotNode){return{type:\"child_removed\"/* CHILD_REMOVED */,snapshotNode:snapshotNode,childName:childName};}function changeChildChanged(childName,snapshotNode,oldSnap){return{type:\"child_changed\"/* CHILD_CHANGED */,snapshotNode:snapshotNode,childName:childName,oldSnap:oldSnap};}function changeChildMoved(childName,snapshotNode){return{type:\"child_moved\"/* CHILD_MOVED */,snapshotNode:snapshotNode,childName:childName};}/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * Doesn't really filter nodes but applies an index to the node and keeps track of any changes\r\n */var IndexedFilter=/** @class */function(){function IndexedFilter(index_){this.index_=index_;}IndexedFilter.prototype.updateChild=function(snap,key,newChild,affectedPath,source,optChangeAccumulator){assert(snap.isIndexed(this.index_),'A node must be indexed if only a child is updated');var oldChild=snap.getImmediateChild(key);// Check if anything actually changed.\nif(oldChild.getChild(affectedPath).equals(newChild.getChild(affectedPath))){// There's an edge case where a child can enter or leave the view because affectedPath was set to null.\n// In this case, affectedPath will appear null in both the old and new snapshots.  So we need\n// to avoid treating these cases as \"nothing changed.\"\nif(oldChild.isEmpty()===newChild.isEmpty()){// Nothing changed.\n// This assert should be valid, but it's expensive (can dominate perf testing) so don't actually do it.\n//assert(oldChild.equals(newChild), 'Old and new snapshots should be equal.');\nreturn snap;}}if(optChangeAccumulator!=null){if(newChild.isEmpty()){if(snap.hasChild(key)){optChangeAccumulator.trackChildChange(changeChildRemoved(key,oldChild));}else{assert(snap.isLeafNode(),'A child remove without an old child only makes sense on a leaf node');}}else if(oldChild.isEmpty()){optChangeAccumulator.trackChildChange(changeChildAdded(key,newChild));}else{optChangeAccumulator.trackChildChange(changeChildChanged(key,newChild,oldChild));}}if(snap.isLeafNode()&&newChild.isEmpty()){return snap;}else{// Make sure the node is indexed\nreturn snap.updateImmediateChild(key,newChild).withIndex(this.index_);}};IndexedFilter.prototype.updateFullNode=function(oldSnap,newSnap,optChangeAccumulator){if(optChangeAccumulator!=null){if(!oldSnap.isLeafNode()){oldSnap.forEachChild(PRIORITY_INDEX,function(key,childNode){if(!newSnap.hasChild(key)){optChangeAccumulator.trackChildChange(changeChildRemoved(key,childNode));}});}if(!newSnap.isLeafNode()){newSnap.forEachChild(PRIORITY_INDEX,function(key,childNode){if(oldSnap.hasChild(key)){var oldChild=oldSnap.getImmediateChild(key);if(!oldChild.equals(childNode)){optChangeAccumulator.trackChildChange(changeChildChanged(key,childNode,oldChild));}}else{optChangeAccumulator.trackChildChange(changeChildAdded(key,childNode));}});}}return newSnap.withIndex(this.index_);};IndexedFilter.prototype.updatePriority=function(oldSnap,newPriority){if(oldSnap.isEmpty()){return ChildrenNode.EMPTY_NODE;}else{return oldSnap.updatePriority(newPriority);}};IndexedFilter.prototype.filtersNodes=function(){return false;};IndexedFilter.prototype.getIndexedFilter=function(){return this;};IndexedFilter.prototype.getIndex=function(){return this.index_;};return IndexedFilter;}();/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * Filters nodes by range and uses an IndexFilter to track any changes after filtering the node\r\n */var RangedFilter=/** @class */function(){function RangedFilter(params){this.indexedFilter_=new IndexedFilter(params.getIndex());this.index_=params.getIndex();this.startPost_=RangedFilter.getStartPost_(params);this.endPost_=RangedFilter.getEndPost_(params);}RangedFilter.prototype.getStartPost=function(){return this.startPost_;};RangedFilter.prototype.getEndPost=function(){return this.endPost_;};RangedFilter.prototype.matches=function(node){return this.index_.compare(this.getStartPost(),node)<=0&&this.index_.compare(node,this.getEndPost())<=0;};RangedFilter.prototype.updateChild=function(snap,key,newChild,affectedPath,source,optChangeAccumulator){if(!this.matches(new NamedNode(key,newChild))){newChild=ChildrenNode.EMPTY_NODE;}return this.indexedFilter_.updateChild(snap,key,newChild,affectedPath,source,optChangeAccumulator);};RangedFilter.prototype.updateFullNode=function(oldSnap,newSnap,optChangeAccumulator){if(newSnap.isLeafNode()){// Make sure we have a children node with the correct index, not a leaf node;\nnewSnap=ChildrenNode.EMPTY_NODE;}var filtered=newSnap.withIndex(this.index_);// Don't support priorities on queries\nfiltered=filtered.updatePriority(ChildrenNode.EMPTY_NODE);var self=this;newSnap.forEachChild(PRIORITY_INDEX,function(key,childNode){if(!self.matches(new NamedNode(key,childNode))){filtered=filtered.updateImmediateChild(key,ChildrenNode.EMPTY_NODE);}});return this.indexedFilter_.updateFullNode(oldSnap,filtered,optChangeAccumulator);};RangedFilter.prototype.updatePriority=function(oldSnap,newPriority){// Don't support priorities on queries\nreturn oldSnap;};RangedFilter.prototype.filtersNodes=function(){return true;};RangedFilter.prototype.getIndexedFilter=function(){return this.indexedFilter_;};RangedFilter.prototype.getIndex=function(){return this.index_;};RangedFilter.getStartPost_=function(params){if(params.hasStart()){var startName=params.getIndexStartName();return params.getIndex().makePost(params.getIndexStartValue(),startName);}else{return params.getIndex().minPost();}};RangedFilter.getEndPost_=function(params){if(params.hasEnd()){var endName=params.getIndexEndName();return params.getIndex().makePost(params.getIndexEndValue(),endName);}else{return params.getIndex().maxPost();}};return RangedFilter;}();/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * Applies a limit and a range to a node and uses RangedFilter to do the heavy lifting where possible\r\n */var LimitedFilter=/** @class */function(){function LimitedFilter(params){this.rangedFilter_=new RangedFilter(params);this.index_=params.getIndex();this.limit_=params.getLimit();this.reverse_=!params.isViewFromLeft();}LimitedFilter.prototype.updateChild=function(snap,key,newChild,affectedPath,source,optChangeAccumulator){if(!this.rangedFilter_.matches(new NamedNode(key,newChild))){newChild=ChildrenNode.EMPTY_NODE;}if(snap.getImmediateChild(key).equals(newChild)){// No change\nreturn snap;}else if(snap.numChildren()<this.limit_){return this.rangedFilter_.getIndexedFilter().updateChild(snap,key,newChild,affectedPath,source,optChangeAccumulator);}else{return this.fullLimitUpdateChild_(snap,key,newChild,source,optChangeAccumulator);}};LimitedFilter.prototype.updateFullNode=function(oldSnap,newSnap,optChangeAccumulator){var filtered;if(newSnap.isLeafNode()||newSnap.isEmpty()){// Make sure we have a children node with the correct index, not a leaf node;\nfiltered=ChildrenNode.EMPTY_NODE.withIndex(this.index_);}else{if(this.limit_*2<newSnap.numChildren()&&newSnap.isIndexed(this.index_)){// Easier to build up a snapshot, since what we're given has more than twice the elements we want\nfiltered=ChildrenNode.EMPTY_NODE.withIndex(this.index_);// anchor to the startPost, endPost, or last element as appropriate\nvar iterator=void 0;if(this.reverse_){iterator=newSnap.getReverseIteratorFrom(this.rangedFilter_.getEndPost(),this.index_);}else{iterator=newSnap.getIteratorFrom(this.rangedFilter_.getStartPost(),this.index_);}var count=0;while(iterator.hasNext()&&count<this.limit_){var next=iterator.getNext();var inRange=void 0;if(this.reverse_){inRange=this.index_.compare(this.rangedFilter_.getStartPost(),next)<=0;}else{inRange=this.index_.compare(next,this.rangedFilter_.getEndPost())<=0;}if(inRange){filtered=filtered.updateImmediateChild(next.name,next.node);count++;}else{// if we have reached the end post, we cannot keep adding elemments\nbreak;}}}else{// The snap contains less than twice the limit. Faster to delete from the snap than build up a new one\nfiltered=newSnap.withIndex(this.index_);// Don't support priorities on queries\nfiltered=filtered.updatePriority(ChildrenNode.EMPTY_NODE);var startPost=void 0;var endPost=void 0;var cmp=void 0;var iterator=void 0;if(this.reverse_){iterator=filtered.getReverseIterator(this.index_);startPost=this.rangedFilter_.getEndPost();endPost=this.rangedFilter_.getStartPost();var indexCompare_1=this.index_.getCompare();cmp=function(a,b){return indexCompare_1(b,a);};}else{iterator=filtered.getIterator(this.index_);startPost=this.rangedFilter_.getStartPost();endPost=this.rangedFilter_.getEndPost();cmp=this.index_.getCompare();}var count=0;var foundStartPost=false;while(iterator.hasNext()){var next=iterator.getNext();if(!foundStartPost&&cmp(startPost,next)<=0){// start adding\nfoundStartPost=true;}var inRange=foundStartPost&&count<this.limit_&&cmp(next,endPost)<=0;if(inRange){count++;}else{filtered=filtered.updateImmediateChild(next.name,ChildrenNode.EMPTY_NODE);}}}}return this.rangedFilter_.getIndexedFilter().updateFullNode(oldSnap,filtered,optChangeAccumulator);};LimitedFilter.prototype.updatePriority=function(oldSnap,newPriority){// Don't support priorities on queries\nreturn oldSnap;};LimitedFilter.prototype.filtersNodes=function(){return true;};LimitedFilter.prototype.getIndexedFilter=function(){return this.rangedFilter_.getIndexedFilter();};LimitedFilter.prototype.getIndex=function(){return this.index_;};LimitedFilter.prototype.fullLimitUpdateChild_=function(snap,childKey,childSnap,source,changeAccumulator){// TODO: rename all cache stuff etc to general snap terminology\nvar cmp;if(this.reverse_){var indexCmp_1=this.index_.getCompare();cmp=function(a,b){return indexCmp_1(b,a);};}else{cmp=this.index_.getCompare();}var oldEventCache=snap;assert(oldEventCache.numChildren()===this.limit_,'');var newChildNamedNode=new NamedNode(childKey,childSnap);var windowBoundary=this.reverse_?oldEventCache.getFirstChild(this.index_):oldEventCache.getLastChild(this.index_);var inRange=this.rangedFilter_.matches(newChildNamedNode);if(oldEventCache.hasChild(childKey)){var oldChildSnap=oldEventCache.getImmediateChild(childKey);var nextChild=source.getChildAfterChild(this.index_,windowBoundary,this.reverse_);while(nextChild!=null&&(nextChild.name===childKey||oldEventCache.hasChild(nextChild.name))){// There is a weird edge case where a node is updated as part of a merge in the write tree, but hasn't\n// been applied to the limited filter yet. Ignore this next child which will be updated later in\n// the limited filter...\nnextChild=source.getChildAfterChild(this.index_,nextChild,this.reverse_);}var compareNext=nextChild==null?1:cmp(nextChild,newChildNamedNode);var remainsInWindow=inRange&&!childSnap.isEmpty()&&compareNext>=0;if(remainsInWindow){if(changeAccumulator!=null){changeAccumulator.trackChildChange(changeChildChanged(childKey,childSnap,oldChildSnap));}return oldEventCache.updateImmediateChild(childKey,childSnap);}else{if(changeAccumulator!=null){changeAccumulator.trackChildChange(changeChildRemoved(childKey,oldChildSnap));}var newEventCache=oldEventCache.updateImmediateChild(childKey,ChildrenNode.EMPTY_NODE);var nextChildInRange=nextChild!=null&&this.rangedFilter_.matches(nextChild);if(nextChildInRange){if(changeAccumulator!=null){changeAccumulator.trackChildChange(changeChildAdded(nextChild.name,nextChild.node));}return newEventCache.updateImmediateChild(nextChild.name,nextChild.node);}else{return newEventCache;}}}else if(childSnap.isEmpty()){// we're deleting a node, but it was not in the window, so ignore it\nreturn snap;}else if(inRange){if(cmp(windowBoundary,newChildNamedNode)>=0){if(changeAccumulator!=null){changeAccumulator.trackChildChange(changeChildRemoved(windowBoundary.name,windowBoundary.node));changeAccumulator.trackChildChange(changeChildAdded(childKey,childSnap));}return oldEventCache.updateImmediateChild(childKey,childSnap).updateImmediateChild(windowBoundary.name,ChildrenNode.EMPTY_NODE);}else{return snap;}}else{return snap;}};return LimitedFilter;}();/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * This class is an immutable-from-the-public-api struct containing a set of query parameters defining a\r\n * range to be returned for a particular location. It is assumed that validation of parameters is done at the\r\n * user-facing API level, so it is not done here.\r\n */var QueryParams=/** @class */function(){function QueryParams(){this.limitSet_=false;this.startSet_=false;this.startNameSet_=false;this.startAfterSet_=false;this.endSet_=false;this.endNameSet_=false;this.endBeforeSet_=false;this.limit_=0;this.viewFrom_='';this.indexStartValue_=null;this.indexStartName_='';this.indexEndValue_=null;this.indexEndName_='';this.index_=PRIORITY_INDEX;}QueryParams.prototype.hasStart=function(){return this.startSet_;};QueryParams.prototype.hasStartAfter=function(){return this.startAfterSet_;};QueryParams.prototype.hasEndBefore=function(){return this.endBeforeSet_;};/**\r\n     * @returns True if it would return from left.\r\n     */QueryParams.prototype.isViewFromLeft=function(){if(this.viewFrom_===''){// limit(), rather than limitToFirst or limitToLast was called.\n// This means that only one of startSet_ and endSet_ is true. Use them\n// to calculate which side of the view to anchor to. If neither is set,\n// anchor to the end.\nreturn this.startSet_;}else{return this.viewFrom_===\"l\"/* VIEW_FROM_LEFT */;}};/**\r\n     * Only valid to call if hasStart() returns true\r\n     */QueryParams.prototype.getIndexStartValue=function(){assert(this.startSet_,'Only valid if start has been set');return this.indexStartValue_;};/**\r\n     * Only valid to call if hasStart() returns true.\r\n     * Returns the starting key name for the range defined by these query parameters\r\n     */QueryParams.prototype.getIndexStartName=function(){assert(this.startSet_,'Only valid if start has been set');if(this.startNameSet_){return this.indexStartName_;}else{return MIN_NAME;}};QueryParams.prototype.hasEnd=function(){return this.endSet_;};/**\r\n     * Only valid to call if hasEnd() returns true.\r\n     */QueryParams.prototype.getIndexEndValue=function(){assert(this.endSet_,'Only valid if end has been set');return this.indexEndValue_;};/**\r\n     * Only valid to call if hasEnd() returns true.\r\n     * Returns the end key name for the range defined by these query parameters\r\n     */QueryParams.prototype.getIndexEndName=function(){assert(this.endSet_,'Only valid if end has been set');if(this.endNameSet_){return this.indexEndName_;}else{return MAX_NAME;}};QueryParams.prototype.hasLimit=function(){return this.limitSet_;};/**\r\n     * @returns True if a limit has been set and it has been explicitly anchored\r\n     */QueryParams.prototype.hasAnchoredLimit=function(){return this.limitSet_&&this.viewFrom_!=='';};/**\r\n     * Only valid to call if hasLimit() returns true\r\n     */QueryParams.prototype.getLimit=function(){assert(this.limitSet_,'Only valid if limit has been set');return this.limit_;};QueryParams.prototype.getIndex=function(){return this.index_;};QueryParams.prototype.loadsAllData=function(){return!(this.startSet_||this.endSet_||this.limitSet_);};QueryParams.prototype.isDefault=function(){return this.loadsAllData()&&this.index_===PRIORITY_INDEX;};QueryParams.prototype.copy=function(){var copy=new QueryParams();copy.limitSet_=this.limitSet_;copy.limit_=this.limit_;copy.startSet_=this.startSet_;copy.indexStartValue_=this.indexStartValue_;copy.startNameSet_=this.startNameSet_;copy.indexStartName_=this.indexStartName_;copy.endSet_=this.endSet_;copy.indexEndValue_=this.indexEndValue_;copy.endNameSet_=this.endNameSet_;copy.indexEndName_=this.indexEndName_;copy.index_=this.index_;copy.viewFrom_=this.viewFrom_;return copy;};return QueryParams;}();function queryParamsGetNodeFilter(queryParams){if(queryParams.loadsAllData()){return new IndexedFilter(queryParams.getIndex());}else if(queryParams.hasLimit()){return new LimitedFilter(queryParams);}else{return new RangedFilter(queryParams);}}function queryParamsLimitToFirst(queryParams,newLimit){var newParams=queryParams.copy();newParams.limitSet_=true;newParams.limit_=newLimit;newParams.viewFrom_=\"l\"/* VIEW_FROM_LEFT */;return newParams;}function queryParamsLimitToLast(queryParams,newLimit){var newParams=queryParams.copy();newParams.limitSet_=true;newParams.limit_=newLimit;newParams.viewFrom_=\"r\"/* VIEW_FROM_RIGHT */;return newParams;}function queryParamsStartAt(queryParams,indexValue,key){var newParams=queryParams.copy();newParams.startSet_=true;if(indexValue===undefined){indexValue=null;}newParams.indexStartValue_=indexValue;if(key!=null){newParams.startNameSet_=true;newParams.indexStartName_=key;}else{newParams.startNameSet_=false;newParams.indexStartName_='';}return newParams;}function queryParamsStartAfter(queryParams,indexValue,key){var params;if(queryParams.index_===KEY_INDEX){if(typeof indexValue==='string'){indexValue=successor(indexValue);}params=queryParamsStartAt(queryParams,indexValue,key);}else{var childKey=void 0;if(key==null){childKey=MAX_NAME;}else{childKey=successor(key);}params=queryParamsStartAt(queryParams,indexValue,childKey);}params.startAfterSet_=true;return params;}function queryParamsEndAt(queryParams,indexValue,key){var newParams=queryParams.copy();newParams.endSet_=true;if(indexValue===undefined){indexValue=null;}newParams.indexEndValue_=indexValue;if(key!==undefined){newParams.endNameSet_=true;newParams.indexEndName_=key;}else{newParams.endNameSet_=false;newParams.indexEndName_='';}return newParams;}function queryParamsEndBefore(queryParams,indexValue,key){var childKey;var params;if(queryParams.index_===KEY_INDEX){if(typeof indexValue==='string'){indexValue=predecessor(indexValue);}params=queryParamsEndAt(queryParams,indexValue,key);}else{if(key==null){childKey=MIN_NAME;}else{childKey=predecessor(key);}params=queryParamsEndAt(queryParams,indexValue,childKey);}params.endBeforeSet_=true;return params;}function queryParamsOrderBy(queryParams,index){var newParams=queryParams.copy();newParams.index_=index;return newParams;}/**\r\n * Returns a set of REST query string parameters representing this query.\r\n *\r\n * @returns query string parameters\r\n */function queryParamsToRestQueryStringParameters(queryParams){var qs={};if(queryParams.isDefault()){return qs;}var orderBy;if(queryParams.index_===PRIORITY_INDEX){orderBy=\"$priority\"/* PRIORITY_INDEX */;}else if(queryParams.index_===VALUE_INDEX){orderBy=\"$value\"/* VALUE_INDEX */;}else if(queryParams.index_===KEY_INDEX){orderBy=\"$key\"/* KEY_INDEX */;}else{assert(queryParams.index_ instanceof PathIndex,'Unrecognized index type!');orderBy=queryParams.index_.toString();}qs[\"orderBy\"/* ORDER_BY */]=stringify(orderBy);if(queryParams.startSet_){qs[\"startAt\"/* START_AT */]=stringify(queryParams.indexStartValue_);if(queryParams.startNameSet_){qs[\"startAt\"/* START_AT */]+=','+stringify(queryParams.indexStartName_);}}if(queryParams.endSet_){qs[\"endAt\"/* END_AT */]=stringify(queryParams.indexEndValue_);if(queryParams.endNameSet_){qs[\"endAt\"/* END_AT */]+=','+stringify(queryParams.indexEndName_);}}if(queryParams.limitSet_){if(queryParams.isViewFromLeft()){qs[\"limitToFirst\"/* LIMIT_TO_FIRST */]=queryParams.limit_;}else{qs[\"limitToLast\"/* LIMIT_TO_LAST */]=queryParams.limit_;}}return qs;}function queryParamsGetQueryObject(queryParams){var obj={};if(queryParams.startSet_){obj[\"sp\"/* INDEX_START_VALUE */]=queryParams.indexStartValue_;if(queryParams.startNameSet_){obj[\"sn\"/* INDEX_START_NAME */]=queryParams.indexStartName_;}}if(queryParams.endSet_){obj[\"ep\"/* INDEX_END_VALUE */]=queryParams.indexEndValue_;if(queryParams.endNameSet_){obj[\"en\"/* INDEX_END_NAME */]=queryParams.indexEndName_;}}if(queryParams.limitSet_){obj[\"l\"/* LIMIT */]=queryParams.limit_;var viewFrom=queryParams.viewFrom_;if(viewFrom===''){if(queryParams.isViewFromLeft()){viewFrom=\"l\"/* VIEW_FROM_LEFT */;}else{viewFrom=\"r\"/* VIEW_FROM_RIGHT */;}}obj[\"vf\"/* VIEW_FROM */]=viewFrom;}// For now, priority index is the default, so we only specify if it's some other index\nif(queryParams.index_!==PRIORITY_INDEX){obj[\"i\"/* INDEX */]=queryParams.index_.toString();}return obj;}/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * An implementation of ServerActions that communicates with the server via REST requests.\r\n * This is mostly useful for compatibility with crawlers, where we don't want to spin up a full\r\n * persistent connection (using WebSockets or long-polling)\r\n */var ReadonlyRestClient=/** @class */function(_super){__extends(ReadonlyRestClient,_super);/**\r\n     * @param repoInfo_ - Data about the namespace we are connecting to\r\n     * @param onDataUpdate_ - A callback for new data from the server\r\n     */function ReadonlyRestClient(repoInfo_,onDataUpdate_,authTokenProvider_,appCheckTokenProvider_){var _this=_super.call(this)||this;_this.repoInfo_=repoInfo_;_this.onDataUpdate_=onDataUpdate_;_this.authTokenProvider_=authTokenProvider_;_this.appCheckTokenProvider_=appCheckTokenProvider_;/** @private {function(...[*])} */_this.log_=logWrapper('p:rest:');/**\r\n         * We don't actually need to track listens, except to prevent us calling an onComplete for a listen\r\n         * that's been removed. :-/\r\n         */_this.listens_={};return _this;}ReadonlyRestClient.prototype.reportStats=function(stats){throw new Error('Method not implemented.');};ReadonlyRestClient.getListenId_=function(query,tag){if(tag!==undefined){return'tag$'+tag;}else{assert(query._queryParams.isDefault(),\"should have a tag if it's not a default query.\");return query._path.toString();}};/** @inheritDoc */ReadonlyRestClient.prototype.listen=function(query,currentHashFn,tag,onComplete){var _this=this;var pathString=query._path.toString();this.log_('Listen called for '+pathString+' '+query._queryIdentifier);// Mark this listener so we can tell if it's removed.\nvar listenId=ReadonlyRestClient.getListenId_(query,tag);var thisListen={};this.listens_[listenId]=thisListen;var queryStringParameters=queryParamsToRestQueryStringParameters(query._queryParams);this.restRequest_(pathString+'.json',queryStringParameters,function(error,result){var data=result;if(error===404){data=null;error=null;}if(error===null){_this.onDataUpdate_(pathString,data,/*isMerge=*/false,tag);}if(safeGet(_this.listens_,listenId)===thisListen){var status_1;if(!error){status_1='ok';}else if(error===401){status_1='permission_denied';}else{status_1='rest_error:'+error;}onComplete(status_1,null);}});};/** @inheritDoc */ReadonlyRestClient.prototype.unlisten=function(query,tag){var listenId=ReadonlyRestClient.getListenId_(query,tag);delete this.listens_[listenId];};ReadonlyRestClient.prototype.get=function(query){var _this=this;var queryStringParameters=queryParamsToRestQueryStringParameters(query._queryParams);var pathString=query._path.toString();var deferred=new Deferred();this.restRequest_(pathString+'.json',queryStringParameters,function(error,result){var data=result;if(error===404){data=null;error=null;}if(error===null){_this.onDataUpdate_(pathString,data,/*isMerge=*/false,/*tag=*/null);deferred.resolve(data);}else{deferred.reject(new Error(data));}});return deferred.promise;};/** @inheritDoc */ReadonlyRestClient.prototype.refreshAuthToken=function(token){// no-op since we just always call getToken.\n};/**\r\n     * Performs a REST request to the given path, with the provided query string parameters,\r\n     * and any auth credentials we have.\r\n     */ReadonlyRestClient.prototype.restRequest_=function(pathString,queryStringParameters,callback){var _this=this;if(queryStringParameters===void 0){queryStringParameters={};}queryStringParameters['format']='export';return Promise.all([this.authTokenProvider_.getToken(/*forceRefresh=*/false),this.appCheckTokenProvider_.getToken(/*forceRefresh=*/false)]).then(function(_a){var _b=__read(_a,2),authToken=_b[0],appCheckToken=_b[1];if(authToken&&authToken.accessToken){queryStringParameters['auth']=authToken.accessToken;}if(appCheckToken&&appCheckToken.token){queryStringParameters['ac']=appCheckToken.token;}var url=(_this.repoInfo_.secure?'https://':'http://')+_this.repoInfo_.host+pathString+'?'+'ns='+_this.repoInfo_.namespace+querystring(queryStringParameters);_this.log_('Sending REST request for '+url);var xhr=new XMLHttpRequest();xhr.onreadystatechange=function(){if(callback&&xhr.readyState===4){_this.log_('REST Response for '+url+' received. status:',xhr.status,'response:',xhr.responseText);var res=null;if(xhr.status>=200&&xhr.status<300){try{res=jsonEval(xhr.responseText);}catch(e){warn('Failed to parse JSON response for '+url+': '+xhr.responseText);}callback(null,res);}else{// 401 and 404 are expected.\nif(xhr.status!==401&&xhr.status!==404){warn('Got unsuccessful REST response for '+url+' Status: '+xhr.status);}callback(xhr.status);}callback=null;}};xhr.open('GET',url,/*asynchronous=*/true);xhr.send();});};return ReadonlyRestClient;}(ServerActions);/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * Mutable object which basically just stores a reference to the \"latest\" immutable snapshot.\r\n */var SnapshotHolder=/** @class */function(){function SnapshotHolder(){this.rootNode_=ChildrenNode.EMPTY_NODE;}SnapshotHolder.prototype.getNode=function(path){return this.rootNode_.getChild(path);};SnapshotHolder.prototype.updateSnapshot=function(path,newSnapshotNode){this.rootNode_=this.rootNode_.updateChild(path,newSnapshotNode);};return SnapshotHolder;}();/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */function newSparseSnapshotTree(){return{value:null,children:new Map()};}/**\r\n * Stores the given node at the specified path. If there is already a node\r\n * at a shallower path, it merges the new data into that snapshot node.\r\n *\r\n * @param path - Path to look up snapshot for.\r\n * @param data - The new data, or null.\r\n */function sparseSnapshotTreeRemember(sparseSnapshotTree,path,data){if(pathIsEmpty(path)){sparseSnapshotTree.value=data;sparseSnapshotTree.children.clear();}else if(sparseSnapshotTree.value!==null){sparseSnapshotTree.value=sparseSnapshotTree.value.updateChild(path,data);}else{var childKey=pathGetFront(path);if(!sparseSnapshotTree.children.has(childKey)){sparseSnapshotTree.children.set(childKey,newSparseSnapshotTree());}var child=sparseSnapshotTree.children.get(childKey);path=pathPopFront(path);sparseSnapshotTreeRemember(child,path,data);}}/**\r\n * Purge the data at path from the cache.\r\n *\r\n * @param path - Path to look up snapshot for.\r\n * @returns True if this node should now be removed.\r\n */function sparseSnapshotTreeForget(sparseSnapshotTree,path){if(pathIsEmpty(path)){sparseSnapshotTree.value=null;sparseSnapshotTree.children.clear();return true;}else{if(sparseSnapshotTree.value!==null){if(sparseSnapshotTree.value.isLeafNode()){// We're trying to forget a node that doesn't exist\nreturn false;}else{var value=sparseSnapshotTree.value;sparseSnapshotTree.value=null;value.forEachChild(PRIORITY_INDEX,function(key,tree){sparseSnapshotTreeRemember(sparseSnapshotTree,new Path(key),tree);});return sparseSnapshotTreeForget(sparseSnapshotTree,path);}}else if(sparseSnapshotTree.children.size>0){var childKey=pathGetFront(path);path=pathPopFront(path);if(sparseSnapshotTree.children.has(childKey)){var safeToRemove=sparseSnapshotTreeForget(sparseSnapshotTree.children.get(childKey),path);if(safeToRemove){sparseSnapshotTree.children.delete(childKey);}}return sparseSnapshotTree.children.size===0;}else{return true;}}}/**\r\n * Recursively iterates through all of the stored tree and calls the\r\n * callback on each one.\r\n *\r\n * @param prefixPath - Path to look up node for.\r\n * @param func - The function to invoke for each tree.\r\n */function sparseSnapshotTreeForEachTree(sparseSnapshotTree,prefixPath,func){if(sparseSnapshotTree.value!==null){func(prefixPath,sparseSnapshotTree.value);}else{sparseSnapshotTreeForEachChild(sparseSnapshotTree,function(key,tree){var path=new Path(prefixPath.toString()+'/'+key);sparseSnapshotTreeForEachTree(tree,path,func);});}}/**\r\n * Iterates through each immediate child and triggers the callback.\r\n * Only seems to be used in tests.\r\n *\r\n * @param func - The function to invoke for each child.\r\n */function sparseSnapshotTreeForEachChild(sparseSnapshotTree,func){sparseSnapshotTree.children.forEach(function(tree,key){func(key,tree);});}/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * Returns the delta from the previous call to get stats.\r\n *\r\n * @param collection_ - The collection to \"listen\" to.\r\n */var StatsListener=/** @class */function(){function StatsListener(collection_){this.collection_=collection_;this.last_=null;}StatsListener.prototype.get=function(){var newStats=this.collection_.get();var delta=__assign({},newStats);if(this.last_){each(this.last_,function(stat,value){delta[stat]=delta[stat]-value;});}this.last_=newStats;return delta;};return StatsListener;}();/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ // Assuming some apps may have a short amount of time on page, and a bulk of firebase operations probably\n// happen on page load, we try to report our first set of stats pretty quickly, but we wait at least 10\n// seconds to try to ensure the Firebase connection is established / settled.\nvar FIRST_STATS_MIN_TIME=10*1000;var FIRST_STATS_MAX_TIME=30*1000;// We'll continue to report stats on average every 5 minutes.\nvar REPORT_STATS_INTERVAL=5*60*1000;var StatsReporter=/** @class */function(){function StatsReporter(collection,server_){this.server_=server_;this.statsToReport_={};this.statsListener_=new StatsListener(collection);var timeout=FIRST_STATS_MIN_TIME+(FIRST_STATS_MAX_TIME-FIRST_STATS_MIN_TIME)*Math.random();setTimeoutNonBlocking(this.reportStats_.bind(this),Math.floor(timeout));}StatsReporter.prototype.reportStats_=function(){var _this=this;var stats=this.statsListener_.get();var reportedStats={};var haveStatsToReport=false;each(stats,function(stat,value){if(value>0&&contains(_this.statsToReport_,stat)){reportedStats[stat]=value;haveStatsToReport=true;}});if(haveStatsToReport){this.server_.reportStats(reportedStats);}// queue our next run.\nsetTimeoutNonBlocking(this.reportStats_.bind(this),Math.floor(Math.random()*2*REPORT_STATS_INTERVAL));};return StatsReporter;}();function statsReporterIncludeStat(reporter,stat){reporter.statsToReport_[stat]=true;}/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n *\r\n * @enum\r\n */var OperationType;(function(OperationType){OperationType[OperationType[\"OVERWRITE\"]=0]=\"OVERWRITE\";OperationType[OperationType[\"MERGE\"]=1]=\"MERGE\";OperationType[OperationType[\"ACK_USER_WRITE\"]=2]=\"ACK_USER_WRITE\";OperationType[OperationType[\"LISTEN_COMPLETE\"]=3]=\"LISTEN_COMPLETE\";})(OperationType||(OperationType={}));function newOperationSourceUser(){return{fromUser:true,fromServer:false,queryId:null,tagged:false};}function newOperationSourceServer(){return{fromUser:false,fromServer:true,queryId:null,tagged:false};}function newOperationSourceServerTaggedQuery(queryId){return{fromUser:false,fromServer:true,queryId:queryId,tagged:true};}/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */var AckUserWrite=/** @class */function(){/**\r\n     * @param affectedTree - A tree containing true for each affected path. Affected paths can't overlap.\r\n     */function AckUserWrite(/** @inheritDoc */path,/** @inheritDoc */affectedTree,/** @inheritDoc */revert){this.path=path;this.affectedTree=affectedTree;this.revert=revert;/** @inheritDoc */this.type=OperationType.ACK_USER_WRITE;/** @inheritDoc */this.source=newOperationSourceUser();}AckUserWrite.prototype.operationForChild=function(childName){if(!pathIsEmpty(this.path)){assert(pathGetFront(this.path)===childName,'operationForChild called for unrelated child.');return new AckUserWrite(pathPopFront(this.path),this.affectedTree,this.revert);}else if(this.affectedTree.value!=null){assert(this.affectedTree.children.isEmpty(),'affectedTree should not have overlapping affected paths.');// All child locations are affected as well; just return same operation.\nreturn this;}else{var childTree=this.affectedTree.subtree(new Path(childName));return new AckUserWrite(newEmptyPath(),childTree,this.revert);}};return AckUserWrite;}();/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */var ListenComplete=/** @class */function(){function ListenComplete(source,path){this.source=source;this.path=path;/** @inheritDoc */this.type=OperationType.LISTEN_COMPLETE;}ListenComplete.prototype.operationForChild=function(childName){if(pathIsEmpty(this.path)){return new ListenComplete(this.source,newEmptyPath());}else{return new ListenComplete(this.source,pathPopFront(this.path));}};return ListenComplete;}();/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */var Overwrite=/** @class */function(){function Overwrite(source,path,snap){this.source=source;this.path=path;this.snap=snap;/** @inheritDoc */this.type=OperationType.OVERWRITE;}Overwrite.prototype.operationForChild=function(childName){if(pathIsEmpty(this.path)){return new Overwrite(this.source,newEmptyPath(),this.snap.getImmediateChild(childName));}else{return new Overwrite(this.source,pathPopFront(this.path),this.snap);}};return Overwrite;}();/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */var Merge=/** @class */function(){function Merge(/** @inheritDoc */source,/** @inheritDoc */path,/** @inheritDoc */children){this.source=source;this.path=path;this.children=children;/** @inheritDoc */this.type=OperationType.MERGE;}Merge.prototype.operationForChild=function(childName){if(pathIsEmpty(this.path)){var childTree=this.children.subtree(new Path(childName));if(childTree.isEmpty()){// This child is unaffected\nreturn null;}else if(childTree.value){// We have a snapshot for the child in question.  This becomes an overwrite of the child.\nreturn new Overwrite(this.source,newEmptyPath(),childTree.value);}else{// This is a merge at a deeper level\nreturn new Merge(this.source,newEmptyPath(),childTree);}}else{assert(pathGetFront(this.path)===childName,\"Can't get a merge for a child not on the path of the operation\");return new Merge(this.source,pathPopFront(this.path),this.children);}};Merge.prototype.toString=function(){return'Operation('+this.path+': '+this.source.toString()+' merge: '+this.children.toString()+')';};return Merge;}();/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * A cache node only stores complete children. Additionally it holds a flag whether the node can be considered fully\r\n * initialized in the sense that we know at one point in time this represented a valid state of the world, e.g.\r\n * initialized with data from the server, or a complete overwrite by the client. The filtered flag also tracks\r\n * whether a node potentially had children removed due to a filter.\r\n */var CacheNode=/** @class */function(){function CacheNode(node_,fullyInitialized_,filtered_){this.node_=node_;this.fullyInitialized_=fullyInitialized_;this.filtered_=filtered_;}/**\r\n     * Returns whether this node was fully initialized with either server data or a complete overwrite by the client\r\n     */CacheNode.prototype.isFullyInitialized=function(){return this.fullyInitialized_;};/**\r\n     * Returns whether this node is potentially missing children due to a filter applied to the node\r\n     */CacheNode.prototype.isFiltered=function(){return this.filtered_;};CacheNode.prototype.isCompleteForPath=function(path){if(pathIsEmpty(path)){return this.isFullyInitialized()&&!this.filtered_;}var childKey=pathGetFront(path);return this.isCompleteForChild(childKey);};CacheNode.prototype.isCompleteForChild=function(key){return this.isFullyInitialized()&&!this.filtered_||this.node_.hasChild(key);};CacheNode.prototype.getNode=function(){return this.node_;};return CacheNode;}();/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * An EventGenerator is used to convert \"raw\" changes (Change) as computed by the\r\n * CacheDiffer into actual events (Event) that can be raised.  See generateEventsForChanges()\r\n * for details.\r\n *\r\n */var EventGenerator=/** @class */function(){function EventGenerator(query_){this.query_=query_;this.index_=this.query_._queryParams.getIndex();}return EventGenerator;}();/**\r\n * Given a set of raw changes (no moved events and prevName not specified yet), and a set of\r\n * EventRegistrations that should be notified of these changes, generate the actual events to be raised.\r\n *\r\n * Notes:\r\n *  - child_moved events will be synthesized at this time for any child_changed events that affect\r\n *    our index.\r\n *  - prevName will be calculated based on the index ordering.\r\n */function eventGeneratorGenerateEventsForChanges(eventGenerator,changes,eventCache,eventRegistrations){var events=[];var moves=[];changes.forEach(function(change){if(change.type===\"child_changed\"/* CHILD_CHANGED */&&eventGenerator.index_.indexedValueChanged(change.oldSnap,change.snapshotNode)){moves.push(changeChildMoved(change.childName,change.snapshotNode));}});eventGeneratorGenerateEventsForType(eventGenerator,events,\"child_removed\"/* CHILD_REMOVED */,changes,eventRegistrations,eventCache);eventGeneratorGenerateEventsForType(eventGenerator,events,\"child_added\"/* CHILD_ADDED */,changes,eventRegistrations,eventCache);eventGeneratorGenerateEventsForType(eventGenerator,events,\"child_moved\"/* CHILD_MOVED */,moves,eventRegistrations,eventCache);eventGeneratorGenerateEventsForType(eventGenerator,events,\"child_changed\"/* CHILD_CHANGED */,changes,eventRegistrations,eventCache);eventGeneratorGenerateEventsForType(eventGenerator,events,\"value\"/* VALUE */,changes,eventRegistrations,eventCache);return events;}/**\r\n * Given changes of a single change type, generate the corresponding events.\r\n */function eventGeneratorGenerateEventsForType(eventGenerator,events,eventType,changes,registrations,eventCache){var filteredChanges=changes.filter(function(change){return change.type===eventType;});filteredChanges.sort(function(a,b){return eventGeneratorCompareChanges(eventGenerator,a,b);});filteredChanges.forEach(function(change){var materializedChange=eventGeneratorMaterializeSingleChange(eventGenerator,change,eventCache);registrations.forEach(function(registration){if(registration.respondsTo(change.type)){events.push(registration.createEvent(materializedChange,eventGenerator.query_));}});});}function eventGeneratorMaterializeSingleChange(eventGenerator,change,eventCache){if(change.type==='value'||change.type==='child_removed'){return change;}else{change.prevName=eventCache.getPredecessorChildName(change.childName,change.snapshotNode,eventGenerator.index_);return change;}}function eventGeneratorCompareChanges(eventGenerator,a,b){if(a.childName==null||b.childName==null){throw assertionError('Should only compare child_ events.');}var aWrapped=new NamedNode(a.childName,a.snapshotNode);var bWrapped=new NamedNode(b.childName,b.snapshotNode);return eventGenerator.index_.compare(aWrapped,bWrapped);}/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */function newViewCache(eventCache,serverCache){return{eventCache:eventCache,serverCache:serverCache};}function viewCacheUpdateEventSnap(viewCache,eventSnap,complete,filtered){return newViewCache(new CacheNode(eventSnap,complete,filtered),viewCache.serverCache);}function viewCacheUpdateServerSnap(viewCache,serverSnap,complete,filtered){return newViewCache(viewCache.eventCache,new CacheNode(serverSnap,complete,filtered));}function viewCacheGetCompleteEventSnap(viewCache){return viewCache.eventCache.isFullyInitialized()?viewCache.eventCache.getNode():null;}function viewCacheGetCompleteServerSnap(viewCache){return viewCache.serverCache.isFullyInitialized()?viewCache.serverCache.getNode():null;}/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */var emptyChildrenSingleton;/**\r\n * Singleton empty children collection.\r\n *\r\n */var EmptyChildren=function(){if(!emptyChildrenSingleton){emptyChildrenSingleton=new SortedMap(stringCompare);}return emptyChildrenSingleton;};/**\r\n * A tree with immutable elements.\r\n */var ImmutableTree=/** @class */function(){function ImmutableTree(value,children){if(children===void 0){children=EmptyChildren();}this.value=value;this.children=children;}ImmutableTree.fromObject=function(obj){var tree=new ImmutableTree(null);each(obj,function(childPath,childSnap){tree=tree.set(new Path(childPath),childSnap);});return tree;};/**\r\n     * True if the value is empty and there are no children\r\n     */ImmutableTree.prototype.isEmpty=function(){return this.value===null&&this.children.isEmpty();};/**\r\n     * Given a path and predicate, return the first node and the path to that node\r\n     * where the predicate returns true.\r\n     *\r\n     * TODO Do a perf test -- If we're creating a bunch of `{path: value:}`\r\n     * objects on the way back out, it may be better to pass down a pathSoFar obj.\r\n     *\r\n     * @param relativePath - The remainder of the path\r\n     * @param predicate - The predicate to satisfy to return a node\r\n     */ImmutableTree.prototype.findRootMostMatchingPathAndValue=function(relativePath,predicate){if(this.value!=null&&predicate(this.value)){return{path:newEmptyPath(),value:this.value};}else{if(pathIsEmpty(relativePath)){return null;}else{var front=pathGetFront(relativePath);var child=this.children.get(front);if(child!==null){var childExistingPathAndValue=child.findRootMostMatchingPathAndValue(pathPopFront(relativePath),predicate);if(childExistingPathAndValue!=null){var fullPath=pathChild(new Path(front),childExistingPathAndValue.path);return{path:fullPath,value:childExistingPathAndValue.value};}else{return null;}}else{return null;}}}};/**\r\n     * Find, if it exists, the shortest subpath of the given path that points a defined\r\n     * value in the tree\r\n     */ImmutableTree.prototype.findRootMostValueAndPath=function(relativePath){return this.findRootMostMatchingPathAndValue(relativePath,function(){return true;});};/**\r\n     * @returns The subtree at the given path\r\n     */ImmutableTree.prototype.subtree=function(relativePath){if(pathIsEmpty(relativePath)){return this;}else{var front=pathGetFront(relativePath);var childTree=this.children.get(front);if(childTree!==null){return childTree.subtree(pathPopFront(relativePath));}else{return new ImmutableTree(null);}}};/**\r\n     * Sets a value at the specified path.\r\n     *\r\n     * @param relativePath - Path to set value at.\r\n     * @param toSet - Value to set.\r\n     * @returns Resulting tree.\r\n     */ImmutableTree.prototype.set=function(relativePath,toSet){if(pathIsEmpty(relativePath)){return new ImmutableTree(toSet,this.children);}else{var front=pathGetFront(relativePath);var child=this.children.get(front)||new ImmutableTree(null);var newChild=child.set(pathPopFront(relativePath),toSet);var newChildren=this.children.insert(front,newChild);return new ImmutableTree(this.value,newChildren);}};/**\r\n     * Removes the value at the specified path.\r\n     *\r\n     * @param relativePath - Path to value to remove.\r\n     * @returns Resulting tree.\r\n     */ImmutableTree.prototype.remove=function(relativePath){if(pathIsEmpty(relativePath)){if(this.children.isEmpty()){return new ImmutableTree(null);}else{return new ImmutableTree(null,this.children);}}else{var front=pathGetFront(relativePath);var child=this.children.get(front);if(child){var newChild=child.remove(pathPopFront(relativePath));var newChildren=void 0;if(newChild.isEmpty()){newChildren=this.children.remove(front);}else{newChildren=this.children.insert(front,newChild);}if(this.value===null&&newChildren.isEmpty()){return new ImmutableTree(null);}else{return new ImmutableTree(this.value,newChildren);}}else{return this;}}};/**\r\n     * Gets a value from the tree.\r\n     *\r\n     * @param relativePath - Path to get value for.\r\n     * @returns Value at path, or null.\r\n     */ImmutableTree.prototype.get=function(relativePath){if(pathIsEmpty(relativePath)){return this.value;}else{var front=pathGetFront(relativePath);var child=this.children.get(front);if(child){return child.get(pathPopFront(relativePath));}else{return null;}}};/**\r\n     * Replace the subtree at the specified path with the given new tree.\r\n     *\r\n     * @param relativePath - Path to replace subtree for.\r\n     * @param newTree - New tree.\r\n     * @returns Resulting tree.\r\n     */ImmutableTree.prototype.setTree=function(relativePath,newTree){if(pathIsEmpty(relativePath)){return newTree;}else{var front=pathGetFront(relativePath);var child=this.children.get(front)||new ImmutableTree(null);var newChild=child.setTree(pathPopFront(relativePath),newTree);var newChildren=void 0;if(newChild.isEmpty()){newChildren=this.children.remove(front);}else{newChildren=this.children.insert(front,newChild);}return new ImmutableTree(this.value,newChildren);}};/**\r\n     * Performs a depth first fold on this tree. Transforms a tree into a single\r\n     * value, given a function that operates on the path to a node, an optional\r\n     * current value, and a map of child names to folded subtrees\r\n     */ImmutableTree.prototype.fold=function(fn){return this.fold_(newEmptyPath(),fn);};/**\r\n     * Recursive helper for public-facing fold() method\r\n     */ImmutableTree.prototype.fold_=function(pathSoFar,fn){var accum={};this.children.inorderTraversal(function(childKey,childTree){accum[childKey]=childTree.fold_(pathChild(pathSoFar,childKey),fn);});return fn(pathSoFar,this.value,accum);};/**\r\n     * Find the first matching value on the given path. Return the result of applying f to it.\r\n     */ImmutableTree.prototype.findOnPath=function(path,f){return this.findOnPath_(path,newEmptyPath(),f);};ImmutableTree.prototype.findOnPath_=function(pathToFollow,pathSoFar,f){var result=this.value?f(pathSoFar,this.value):false;if(result){return result;}else{if(pathIsEmpty(pathToFollow)){return null;}else{var front=pathGetFront(pathToFollow);var nextChild=this.children.get(front);if(nextChild){return nextChild.findOnPath_(pathPopFront(pathToFollow),pathChild(pathSoFar,front),f);}else{return null;}}}};ImmutableTree.prototype.foreachOnPath=function(path,f){return this.foreachOnPath_(path,newEmptyPath(),f);};ImmutableTree.prototype.foreachOnPath_=function(pathToFollow,currentRelativePath,f){if(pathIsEmpty(pathToFollow)){return this;}else{if(this.value){f(currentRelativePath,this.value);}var front=pathGetFront(pathToFollow);var nextChild=this.children.get(front);if(nextChild){return nextChild.foreachOnPath_(pathPopFront(pathToFollow),pathChild(currentRelativePath,front),f);}else{return new ImmutableTree(null);}}};/**\r\n     * Calls the given function for each node in the tree that has a value.\r\n     *\r\n     * @param f - A function to be called with the path from the root of the tree to\r\n     * a node, and the value at that node. Called in depth-first order.\r\n     */ImmutableTree.prototype.foreach=function(f){this.foreach_(newEmptyPath(),f);};ImmutableTree.prototype.foreach_=function(currentRelativePath,f){this.children.inorderTraversal(function(childName,childTree){childTree.foreach_(pathChild(currentRelativePath,childName),f);});if(this.value){f(currentRelativePath,this.value);}};ImmutableTree.prototype.foreachChild=function(f){this.children.inorderTraversal(function(childName,childTree){if(childTree.value){f(childName,childTree.value);}});};return ImmutableTree;}();/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * This class holds a collection of writes that can be applied to nodes in unison. It abstracts away the logic with\r\n * dealing with priority writes and multiple nested writes. At any given path there is only allowed to be one write\r\n * modifying that path. Any write to an existing path or shadowing an existing path will modify that existing write\r\n * to reflect the write added.\r\n */var CompoundWrite=/** @class */function(){function CompoundWrite(writeTree_){this.writeTree_=writeTree_;}CompoundWrite.empty=function(){return new CompoundWrite(new ImmutableTree(null));};return CompoundWrite;}();function compoundWriteAddWrite(compoundWrite,path,node){if(pathIsEmpty(path)){return new CompoundWrite(new ImmutableTree(node));}else{var rootmost=compoundWrite.writeTree_.findRootMostValueAndPath(path);if(rootmost!=null){var rootMostPath=rootmost.path;var value=rootmost.value;var relativePath=newRelativePath(rootMostPath,path);value=value.updateChild(relativePath,node);return new CompoundWrite(compoundWrite.writeTree_.set(rootMostPath,value));}else{var subtree=new ImmutableTree(node);var newWriteTree=compoundWrite.writeTree_.setTree(path,subtree);return new CompoundWrite(newWriteTree);}}}function compoundWriteAddWrites(compoundWrite,path,updates){var newWrite=compoundWrite;each(updates,function(childKey,node){newWrite=compoundWriteAddWrite(newWrite,pathChild(path,childKey),node);});return newWrite;}/**\r\n * Will remove a write at the given path and deeper paths. This will <em>not</em> modify a write at a higher\r\n * location, which must be removed by calling this method with that path.\r\n *\r\n * @param compoundWrite - The CompoundWrite to remove.\r\n * @param path - The path at which a write and all deeper writes should be removed\r\n * @returns The new CompoundWrite with the removed path\r\n */function compoundWriteRemoveWrite(compoundWrite,path){if(pathIsEmpty(path)){return CompoundWrite.empty();}else{var newWriteTree=compoundWrite.writeTree_.setTree(path,new ImmutableTree(null));return new CompoundWrite(newWriteTree);}}/**\r\n * Returns whether this CompoundWrite will fully overwrite a node at a given location and can therefore be\r\n * considered \"complete\".\r\n *\r\n * @param compoundWrite - The CompoundWrite to check.\r\n * @param path - The path to check for\r\n * @returns Whether there is a complete write at that path\r\n */function compoundWriteHasCompleteWrite(compoundWrite,path){return compoundWriteGetCompleteNode(compoundWrite,path)!=null;}/**\r\n * Returns a node for a path if and only if the node is a \"complete\" overwrite at that path. This will not aggregate\r\n * writes from deeper paths, but will return child nodes from a more shallow path.\r\n *\r\n * @param compoundWrite - The CompoundWrite to get the node from.\r\n * @param path - The path to get a complete write\r\n * @returns The node if complete at that path, or null otherwise.\r\n */function compoundWriteGetCompleteNode(compoundWrite,path){var rootmost=compoundWrite.writeTree_.findRootMostValueAndPath(path);if(rootmost!=null){return compoundWrite.writeTree_.get(rootmost.path).getChild(newRelativePath(rootmost.path,path));}else{return null;}}/**\r\n * Returns all children that are guaranteed to be a complete overwrite.\r\n *\r\n * @param compoundWrite - The CompoundWrite to get children from.\r\n * @returns A list of all complete children.\r\n */function compoundWriteGetCompleteChildren(compoundWrite){var children=[];var node=compoundWrite.writeTree_.value;if(node!=null){// If it's a leaf node, it has no children; so nothing to do.\nif(!node.isLeafNode()){node.forEachChild(PRIORITY_INDEX,function(childName,childNode){children.push(new NamedNode(childName,childNode));});}}else{compoundWrite.writeTree_.children.inorderTraversal(function(childName,childTree){if(childTree.value!=null){children.push(new NamedNode(childName,childTree.value));}});}return children;}function compoundWriteChildCompoundWrite(compoundWrite,path){if(pathIsEmpty(path)){return compoundWrite;}else{var shadowingNode=compoundWriteGetCompleteNode(compoundWrite,path);if(shadowingNode!=null){return new CompoundWrite(new ImmutableTree(shadowingNode));}else{return new CompoundWrite(compoundWrite.writeTree_.subtree(path));}}}/**\r\n * Returns true if this CompoundWrite is empty and therefore does not modify any nodes.\r\n * @returns Whether this CompoundWrite is empty\r\n */function compoundWriteIsEmpty(compoundWrite){return compoundWrite.writeTree_.isEmpty();}/**\r\n * Applies this CompoundWrite to a node. The node is returned with all writes from this CompoundWrite applied to the\r\n * node\r\n * @param node - The node to apply this CompoundWrite to\r\n * @returns The node with all writes applied\r\n */function compoundWriteApply(compoundWrite,node){return applySubtreeWrite(newEmptyPath(),compoundWrite.writeTree_,node);}function applySubtreeWrite(relativePath,writeTree,node){if(writeTree.value!=null){// Since there a write is always a leaf, we're done here\nreturn node.updateChild(relativePath,writeTree.value);}else{var priorityWrite_1=null;writeTree.children.inorderTraversal(function(childKey,childTree){if(childKey==='.priority'){// Apply priorities at the end so we don't update priorities for either empty nodes or forget\n// to apply priorities to empty nodes that are later filled\nassert(childTree.value!==null,'Priority writes must always be leaf nodes');priorityWrite_1=childTree.value;}else{node=applySubtreeWrite(pathChild(relativePath,childKey),childTree,node);}});// If there was a priority write, we only apply it if the node is not empty\nif(!node.getChild(relativePath).isEmpty()&&priorityWrite_1!==null){node=node.updateChild(pathChild(relativePath,'.priority'),priorityWrite_1);}return node;}}/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * Create a new WriteTreeRef for the given path. For use with a new sync point at the given path.\r\n *\r\n */function writeTreeChildWrites(writeTree,path){return newWriteTreeRef(path,writeTree);}/**\r\n * Record a new overwrite from user code.\r\n *\r\n * @param visible - This is set to false by some transactions. It should be excluded from event caches\r\n */function writeTreeAddOverwrite(writeTree,path,snap,writeId,visible){assert(writeId>writeTree.lastWriteId,'Stacking an older write on top of newer ones');if(visible===undefined){visible=true;}writeTree.allWrites.push({path:path,snap:snap,writeId:writeId,visible:visible});if(visible){writeTree.visibleWrites=compoundWriteAddWrite(writeTree.visibleWrites,path,snap);}writeTree.lastWriteId=writeId;}/**\r\n * Record a new merge from user code.\r\n */function writeTreeAddMerge(writeTree,path,changedChildren,writeId){assert(writeId>writeTree.lastWriteId,'Stacking an older merge on top of newer ones');writeTree.allWrites.push({path:path,children:changedChildren,writeId:writeId,visible:true});writeTree.visibleWrites=compoundWriteAddWrites(writeTree.visibleWrites,path,changedChildren);writeTree.lastWriteId=writeId;}function writeTreeGetWrite(writeTree,writeId){for(var i=0;i<writeTree.allWrites.length;i++){var record=writeTree.allWrites[i];if(record.writeId===writeId){return record;}}return null;}/**\r\n * Remove a write (either an overwrite or merge) that has been successfully acknowledge by the server. Recalculates\r\n * the tree if necessary.  We return true if it may have been visible, meaning views need to reevaluate.\r\n *\r\n * @returns true if the write may have been visible (meaning we'll need to reevaluate / raise\r\n * events as a result).\r\n */function writeTreeRemoveWrite(writeTree,writeId){// Note: disabling this check. It could be a transaction that preempted another transaction, and thus was applied\n// out of order.\n//const validClear = revert || this.allWrites_.length === 0 || writeId <= this.allWrites_[0].writeId;\n//assert(validClear, \"Either we don't have this write, or it's the first one in the queue\");\nvar idx=writeTree.allWrites.findIndex(function(s){return s.writeId===writeId;});assert(idx>=0,'removeWrite called with nonexistent writeId.');var writeToRemove=writeTree.allWrites[idx];writeTree.allWrites.splice(idx,1);var removedWriteWasVisible=writeToRemove.visible;var removedWriteOverlapsWithOtherWrites=false;var i=writeTree.allWrites.length-1;while(removedWriteWasVisible&&i>=0){var currentWrite=writeTree.allWrites[i];if(currentWrite.visible){if(i>=idx&&writeTreeRecordContainsPath_(currentWrite,writeToRemove.path)){// The removed write was completely shadowed by a subsequent write.\nremovedWriteWasVisible=false;}else if(pathContains(writeToRemove.path,currentWrite.path)){// Either we're covering some writes or they're covering part of us (depending on which came first).\nremovedWriteOverlapsWithOtherWrites=true;}}i--;}if(!removedWriteWasVisible){return false;}else if(removedWriteOverlapsWithOtherWrites){// There's some shadowing going on. Just rebuild the visible writes from scratch.\nwriteTreeResetTree_(writeTree);return true;}else{// There's no shadowing.  We can safely just remove the write(s) from visibleWrites.\nif(writeToRemove.snap){writeTree.visibleWrites=compoundWriteRemoveWrite(writeTree.visibleWrites,writeToRemove.path);}else{var children=writeToRemove.children;each(children,function(childName){writeTree.visibleWrites=compoundWriteRemoveWrite(writeTree.visibleWrites,pathChild(writeToRemove.path,childName));});}return true;}}function writeTreeRecordContainsPath_(writeRecord,path){if(writeRecord.snap){return pathContains(writeRecord.path,path);}else{for(var childName in writeRecord.children){if(writeRecord.children.hasOwnProperty(childName)&&pathContains(pathChild(writeRecord.path,childName),path)){return true;}}return false;}}/**\r\n * Re-layer the writes and merges into a tree so we can efficiently calculate event snapshots\r\n */function writeTreeResetTree_(writeTree){writeTree.visibleWrites=writeTreeLayerTree_(writeTree.allWrites,writeTreeDefaultFilter_,newEmptyPath());if(writeTree.allWrites.length>0){writeTree.lastWriteId=writeTree.allWrites[writeTree.allWrites.length-1].writeId;}else{writeTree.lastWriteId=-1;}}/**\r\n * The default filter used when constructing the tree. Keep everything that's visible.\r\n */function writeTreeDefaultFilter_(write){return write.visible;}/**\r\n * Static method. Given an array of WriteRecords, a filter for which ones to include, and a path, construct the tree of\r\n * event data at that path.\r\n */function writeTreeLayerTree_(writes,filter,treeRoot){var compoundWrite=CompoundWrite.empty();for(var i=0;i<writes.length;++i){var write=writes[i];// Theory, a later set will either:\n// a) abort a relevant transaction, so no need to worry about excluding it from calculating that transaction\n// b) not be relevant to a transaction (separate branch), so again will not affect the data for that transaction\nif(filter(write)){var writePath=write.path;var relativePath=void 0;if(write.snap){if(pathContains(treeRoot,writePath)){relativePath=newRelativePath(treeRoot,writePath);compoundWrite=compoundWriteAddWrite(compoundWrite,relativePath,write.snap);}else if(pathContains(writePath,treeRoot)){relativePath=newRelativePath(writePath,treeRoot);compoundWrite=compoundWriteAddWrite(compoundWrite,newEmptyPath(),write.snap.getChild(relativePath));}else;}else if(write.children){if(pathContains(treeRoot,writePath)){relativePath=newRelativePath(treeRoot,writePath);compoundWrite=compoundWriteAddWrites(compoundWrite,relativePath,write.children);}else if(pathContains(writePath,treeRoot)){relativePath=newRelativePath(writePath,treeRoot);if(pathIsEmpty(relativePath)){compoundWrite=compoundWriteAddWrites(compoundWrite,newEmptyPath(),write.children);}else{var child=safeGet(write.children,pathGetFront(relativePath));if(child){// There exists a child in this node that matches the root path\nvar deepNode=child.getChild(pathPopFront(relativePath));compoundWrite=compoundWriteAddWrite(compoundWrite,newEmptyPath(),deepNode);}}}else;}else{throw assertionError('WriteRecord should have .snap or .children');}}}return compoundWrite;}/**\r\n * Given optional, underlying server data, and an optional set of constraints (exclude some sets, include hidden\r\n * writes), attempt to calculate a complete snapshot for the given path\r\n *\r\n * @param writeIdsToExclude - An optional set to be excluded\r\n * @param includeHiddenWrites - Defaults to false, whether or not to layer on writes with visible set to false\r\n */function writeTreeCalcCompleteEventCache(writeTree,treePath,completeServerCache,writeIdsToExclude,includeHiddenWrites){if(!writeIdsToExclude&&!includeHiddenWrites){var shadowingNode=compoundWriteGetCompleteNode(writeTree.visibleWrites,treePath);if(shadowingNode!=null){return shadowingNode;}else{var subMerge=compoundWriteChildCompoundWrite(writeTree.visibleWrites,treePath);if(compoundWriteIsEmpty(subMerge)){return completeServerCache;}else if(completeServerCache==null&&!compoundWriteHasCompleteWrite(subMerge,newEmptyPath())){// We wouldn't have a complete snapshot, since there's no underlying data and no complete shadow\nreturn null;}else{var layeredCache=completeServerCache||ChildrenNode.EMPTY_NODE;return compoundWriteApply(subMerge,layeredCache);}}}else{var merge=compoundWriteChildCompoundWrite(writeTree.visibleWrites,treePath);if(!includeHiddenWrites&&compoundWriteIsEmpty(merge)){return completeServerCache;}else{// If the server cache is null, and we don't have a complete cache, we need to return null\nif(!includeHiddenWrites&&completeServerCache==null&&!compoundWriteHasCompleteWrite(merge,newEmptyPath())){return null;}else{var filter=function(write){return(write.visible||includeHiddenWrites)&&(!writeIdsToExclude||!~writeIdsToExclude.indexOf(write.writeId))&&(pathContains(write.path,treePath)||pathContains(treePath,write.path));};var mergeAtPath=writeTreeLayerTree_(writeTree.allWrites,filter,treePath);var layeredCache=completeServerCache||ChildrenNode.EMPTY_NODE;return compoundWriteApply(mergeAtPath,layeredCache);}}}}/**\r\n * With optional, underlying server data, attempt to return a children node of children that we have complete data for.\r\n * Used when creating new views, to pre-fill their complete event children snapshot.\r\n */function writeTreeCalcCompleteEventChildren(writeTree,treePath,completeServerChildren){var completeChildren=ChildrenNode.EMPTY_NODE;var topLevelSet=compoundWriteGetCompleteNode(writeTree.visibleWrites,treePath);if(topLevelSet){if(!topLevelSet.isLeafNode()){// we're shadowing everything. Return the children.\ntopLevelSet.forEachChild(PRIORITY_INDEX,function(childName,childSnap){completeChildren=completeChildren.updateImmediateChild(childName,childSnap);});}return completeChildren;}else if(completeServerChildren){// Layer any children we have on top of this\n// We know we don't have a top-level set, so just enumerate existing children\nvar merge_1=compoundWriteChildCompoundWrite(writeTree.visibleWrites,treePath);completeServerChildren.forEachChild(PRIORITY_INDEX,function(childName,childNode){var node=compoundWriteApply(compoundWriteChildCompoundWrite(merge_1,new Path(childName)),childNode);completeChildren=completeChildren.updateImmediateChild(childName,node);});// Add any complete children we have from the set\ncompoundWriteGetCompleteChildren(merge_1).forEach(function(namedNode){completeChildren=completeChildren.updateImmediateChild(namedNode.name,namedNode.node);});return completeChildren;}else{// We don't have anything to layer on top of. Layer on any children we have\n// Note that we can return an empty snap if we have a defined delete\nvar merge=compoundWriteChildCompoundWrite(writeTree.visibleWrites,treePath);compoundWriteGetCompleteChildren(merge).forEach(function(namedNode){completeChildren=completeChildren.updateImmediateChild(namedNode.name,namedNode.node);});return completeChildren;}}/**\r\n * Given that the underlying server data has updated, determine what, if anything, needs to be\r\n * applied to the event cache.\r\n *\r\n * Possibilities:\r\n *\r\n * 1. No writes are shadowing. Events should be raised, the snap to be applied comes from the server data\r\n *\r\n * 2. Some write is completely shadowing. No events to be raised\r\n *\r\n * 3. Is partially shadowed. Events\r\n *\r\n * Either existingEventSnap or existingServerSnap must exist\r\n */function writeTreeCalcEventCacheAfterServerOverwrite(writeTree,treePath,childPath,existingEventSnap,existingServerSnap){assert(existingEventSnap||existingServerSnap,'Either existingEventSnap or existingServerSnap must exist');var path=pathChild(treePath,childPath);if(compoundWriteHasCompleteWrite(writeTree.visibleWrites,path)){// At this point we can probably guarantee that we're in case 2, meaning no events\n// May need to check visibility while doing the findRootMostValueAndPath call\nreturn null;}else{// No complete shadowing. We're either partially shadowing or not shadowing at all.\nvar childMerge=compoundWriteChildCompoundWrite(writeTree.visibleWrites,path);if(compoundWriteIsEmpty(childMerge)){// We're not shadowing at all. Case 1\nreturn existingServerSnap.getChild(childPath);}else{// This could be more efficient if the serverNode + updates doesn't change the eventSnap\n// However this is tricky to find out, since user updates don't necessary change the server\n// snap, e.g. priority updates on empty nodes, or deep deletes. Another special case is if the server\n// adds nodes, but doesn't change any existing writes. It is therefore not enough to\n// only check if the updates change the serverNode.\n// Maybe check if the merge tree contains these special cases and only do a full overwrite in that case?\nreturn compoundWriteApply(childMerge,existingServerSnap.getChild(childPath));}}}/**\r\n * Returns a complete child for a given server snap after applying all user writes or null if there is no\r\n * complete child for this ChildKey.\r\n */function writeTreeCalcCompleteChild(writeTree,treePath,childKey,existingServerSnap){var path=pathChild(treePath,childKey);var shadowingNode=compoundWriteGetCompleteNode(writeTree.visibleWrites,path);if(shadowingNode!=null){return shadowingNode;}else{if(existingServerSnap.isCompleteForChild(childKey)){var childMerge=compoundWriteChildCompoundWrite(writeTree.visibleWrites,path);return compoundWriteApply(childMerge,existingServerSnap.getNode().getImmediateChild(childKey));}else{return null;}}}/**\r\n * Returns a node if there is a complete overwrite for this path. More specifically, if there is a write at\r\n * a higher path, this will return the child of that write relative to the write and this path.\r\n * Returns null if there is no write at this path.\r\n */function writeTreeShadowingWrite(writeTree,path){return compoundWriteGetCompleteNode(writeTree.visibleWrites,path);}/**\r\n * This method is used when processing child remove events on a query. If we can, we pull in children that were outside\r\n * the window, but may now be in the window.\r\n */function writeTreeCalcIndexedSlice(writeTree,treePath,completeServerData,startPost,count,reverse,index){var toIterate;var merge=compoundWriteChildCompoundWrite(writeTree.visibleWrites,treePath);var shadowingNode=compoundWriteGetCompleteNode(merge,newEmptyPath());if(shadowingNode!=null){toIterate=shadowingNode;}else if(completeServerData!=null){toIterate=compoundWriteApply(merge,completeServerData);}else{// no children to iterate on\nreturn[];}toIterate=toIterate.withIndex(index);if(!toIterate.isEmpty()&&!toIterate.isLeafNode()){var nodes=[];var cmp=index.getCompare();var iter=reverse?toIterate.getReverseIteratorFrom(startPost,index):toIterate.getIteratorFrom(startPost,index);var next=iter.getNext();while(next&&nodes.length<count){if(cmp(next,startPost)!==0){nodes.push(next);}next=iter.getNext();}return nodes;}else{return[];}}function newWriteTree(){return{visibleWrites:CompoundWrite.empty(),allWrites:[],lastWriteId:-1};}/**\r\n * If possible, returns a complete event cache, using the underlying server data if possible. In addition, can be used\r\n * to get a cache that includes hidden writes, and excludes arbitrary writes. Note that customizing the returned node\r\n * can lead to a more expensive calculation.\r\n *\r\n * @param writeIdsToExclude - Optional writes to exclude.\r\n * @param includeHiddenWrites - Defaults to false, whether or not to layer on writes with visible set to false\r\n */function writeTreeRefCalcCompleteEventCache(writeTreeRef,completeServerCache,writeIdsToExclude,includeHiddenWrites){return writeTreeCalcCompleteEventCache(writeTreeRef.writeTree,writeTreeRef.treePath,completeServerCache,writeIdsToExclude,includeHiddenWrites);}/**\r\n * If possible, returns a children node containing all of the complete children we have data for. The returned data is a\r\n * mix of the given server data and write data.\r\n *\r\n */function writeTreeRefCalcCompleteEventChildren(writeTreeRef,completeServerChildren){return writeTreeCalcCompleteEventChildren(writeTreeRef.writeTree,writeTreeRef.treePath,completeServerChildren);}/**\r\n * Given that either the underlying server data has updated or the outstanding writes have updated, determine what,\r\n * if anything, needs to be applied to the event cache.\r\n *\r\n * Possibilities:\r\n *\r\n * 1. No writes are shadowing. Events should be raised, the snap to be applied comes from the server data\r\n *\r\n * 2. Some write is completely shadowing. No events to be raised\r\n *\r\n * 3. Is partially shadowed. Events should be raised\r\n *\r\n * Either existingEventSnap or existingServerSnap must exist, this is validated via an assert\r\n *\r\n *\r\n */function writeTreeRefCalcEventCacheAfterServerOverwrite(writeTreeRef,path,existingEventSnap,existingServerSnap){return writeTreeCalcEventCacheAfterServerOverwrite(writeTreeRef.writeTree,writeTreeRef.treePath,path,existingEventSnap,existingServerSnap);}/**\r\n * Returns a node if there is a complete overwrite for this path. More specifically, if there is a write at\r\n * a higher path, this will return the child of that write relative to the write and this path.\r\n * Returns null if there is no write at this path.\r\n *\r\n */function writeTreeRefShadowingWrite(writeTreeRef,path){return writeTreeShadowingWrite(writeTreeRef.writeTree,pathChild(writeTreeRef.treePath,path));}/**\r\n * This method is used when processing child remove events on a query. If we can, we pull in children that were outside\r\n * the window, but may now be in the window\r\n */function writeTreeRefCalcIndexedSlice(writeTreeRef,completeServerData,startPost,count,reverse,index){return writeTreeCalcIndexedSlice(writeTreeRef.writeTree,writeTreeRef.treePath,completeServerData,startPost,count,reverse,index);}/**\r\n * Returns a complete child for a given server snap after applying all user writes or null if there is no\r\n * complete child for this ChildKey.\r\n */function writeTreeRefCalcCompleteChild(writeTreeRef,childKey,existingServerCache){return writeTreeCalcCompleteChild(writeTreeRef.writeTree,writeTreeRef.treePath,childKey,existingServerCache);}/**\r\n * Return a WriteTreeRef for a child.\r\n */function writeTreeRefChild(writeTreeRef,childName){return newWriteTreeRef(pathChild(writeTreeRef.treePath,childName),writeTreeRef.writeTree);}function newWriteTreeRef(path,writeTree){return{treePath:path,writeTree:writeTree};}/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */var ChildChangeAccumulator=/** @class */function(){function ChildChangeAccumulator(){this.changeMap=new Map();}ChildChangeAccumulator.prototype.trackChildChange=function(change){var type=change.type;var childKey=change.childName;assert(type===\"child_added\"/* CHILD_ADDED */||type===\"child_changed\"/* CHILD_CHANGED */||type===\"child_removed\"/* CHILD_REMOVED */,'Only child changes supported for tracking');assert(childKey!=='.priority','Only non-priority child changes can be tracked.');var oldChange=this.changeMap.get(childKey);if(oldChange){var oldType=oldChange.type;if(type===\"child_added\"/* CHILD_ADDED */&&oldType===\"child_removed\"/* CHILD_REMOVED */){this.changeMap.set(childKey,changeChildChanged(childKey,change.snapshotNode,oldChange.snapshotNode));}else if(type===\"child_removed\"/* CHILD_REMOVED */&&oldType===\"child_added\"/* CHILD_ADDED */){this.changeMap.delete(childKey);}else if(type===\"child_removed\"/* CHILD_REMOVED */&&oldType===\"child_changed\"/* CHILD_CHANGED */){this.changeMap.set(childKey,changeChildRemoved(childKey,oldChange.oldSnap));}else if(type===\"child_changed\"/* CHILD_CHANGED */&&oldType===\"child_added\"/* CHILD_ADDED */){this.changeMap.set(childKey,changeChildAdded(childKey,change.snapshotNode));}else if(type===\"child_changed\"/* CHILD_CHANGED */&&oldType===\"child_changed\"/* CHILD_CHANGED */){this.changeMap.set(childKey,changeChildChanged(childKey,change.snapshotNode,oldChange.oldSnap));}else{throw assertionError('Illegal combination of changes: '+change+' occurred after '+oldChange);}}else{this.changeMap.set(childKey,change);}};ChildChangeAccumulator.prototype.getChanges=function(){return Array.from(this.changeMap.values());};return ChildChangeAccumulator;}();/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * An implementation of CompleteChildSource that never returns any additional children\r\n */ // eslint-disable-next-line @typescript-eslint/naming-convention\nvar NoCompleteChildSource_=/** @class */function(){function NoCompleteChildSource_(){}NoCompleteChildSource_.prototype.getCompleteChild=function(childKey){return null;};NoCompleteChildSource_.prototype.getChildAfterChild=function(index,child,reverse){return null;};return NoCompleteChildSource_;}();/**\r\n * Singleton instance.\r\n */var NO_COMPLETE_CHILD_SOURCE=new NoCompleteChildSource_();/**\r\n * An implementation of CompleteChildSource that uses a WriteTree in addition to any other server data or\r\n * old event caches available to calculate complete children.\r\n */var WriteTreeCompleteChildSource=/** @class */function(){function WriteTreeCompleteChildSource(writes_,viewCache_,optCompleteServerCache_){if(optCompleteServerCache_===void 0){optCompleteServerCache_=null;}this.writes_=writes_;this.viewCache_=viewCache_;this.optCompleteServerCache_=optCompleteServerCache_;}WriteTreeCompleteChildSource.prototype.getCompleteChild=function(childKey){var node=this.viewCache_.eventCache;if(node.isCompleteForChild(childKey)){return node.getNode().getImmediateChild(childKey);}else{var serverNode=this.optCompleteServerCache_!=null?new CacheNode(this.optCompleteServerCache_,true,false):this.viewCache_.serverCache;return writeTreeRefCalcCompleteChild(this.writes_,childKey,serverNode);}};WriteTreeCompleteChildSource.prototype.getChildAfterChild=function(index,child,reverse){var completeServerData=this.optCompleteServerCache_!=null?this.optCompleteServerCache_:viewCacheGetCompleteServerSnap(this.viewCache_);var nodes=writeTreeRefCalcIndexedSlice(this.writes_,completeServerData,child,1,reverse,index);if(nodes.length===0){return null;}else{return nodes[0];}};return WriteTreeCompleteChildSource;}();/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */function newViewProcessor(filter){return{filter:filter};}function viewProcessorAssertIndexed(viewProcessor,viewCache){assert(viewCache.eventCache.getNode().isIndexed(viewProcessor.filter.getIndex()),'Event snap not indexed');assert(viewCache.serverCache.getNode().isIndexed(viewProcessor.filter.getIndex()),'Server snap not indexed');}function viewProcessorApplyOperation(viewProcessor,oldViewCache,operation,writesCache,completeCache){var accumulator=new ChildChangeAccumulator();var newViewCache,filterServerNode;if(operation.type===OperationType.OVERWRITE){var overwrite=operation;if(overwrite.source.fromUser){newViewCache=viewProcessorApplyUserOverwrite(viewProcessor,oldViewCache,overwrite.path,overwrite.snap,writesCache,completeCache,accumulator);}else{assert(overwrite.source.fromServer,'Unknown source.');// We filter the node if it's a tagged update or the node has been previously filtered  and the\n// update is not at the root in which case it is ok (and necessary) to mark the node unfiltered\n// again\nfilterServerNode=overwrite.source.tagged||oldViewCache.serverCache.isFiltered()&&!pathIsEmpty(overwrite.path);newViewCache=viewProcessorApplyServerOverwrite(viewProcessor,oldViewCache,overwrite.path,overwrite.snap,writesCache,completeCache,filterServerNode,accumulator);}}else if(operation.type===OperationType.MERGE){var merge=operation;if(merge.source.fromUser){newViewCache=viewProcessorApplyUserMerge(viewProcessor,oldViewCache,merge.path,merge.children,writesCache,completeCache,accumulator);}else{assert(merge.source.fromServer,'Unknown source.');// We filter the node if it's a tagged update or the node has been previously filtered\nfilterServerNode=merge.source.tagged||oldViewCache.serverCache.isFiltered();newViewCache=viewProcessorApplyServerMerge(viewProcessor,oldViewCache,merge.path,merge.children,writesCache,completeCache,filterServerNode,accumulator);}}else if(operation.type===OperationType.ACK_USER_WRITE){var ackUserWrite=operation;if(!ackUserWrite.revert){newViewCache=viewProcessorAckUserWrite(viewProcessor,oldViewCache,ackUserWrite.path,ackUserWrite.affectedTree,writesCache,completeCache,accumulator);}else{newViewCache=viewProcessorRevertUserWrite(viewProcessor,oldViewCache,ackUserWrite.path,writesCache,completeCache,accumulator);}}else if(operation.type===OperationType.LISTEN_COMPLETE){newViewCache=viewProcessorListenComplete(viewProcessor,oldViewCache,operation.path,writesCache,accumulator);}else{throw assertionError('Unknown operation type: '+operation.type);}var changes=accumulator.getChanges();viewProcessorMaybeAddValueEvent(oldViewCache,newViewCache,changes);return{viewCache:newViewCache,changes:changes};}function viewProcessorMaybeAddValueEvent(oldViewCache,newViewCache,accumulator){var eventSnap=newViewCache.eventCache;if(eventSnap.isFullyInitialized()){var isLeafOrEmpty=eventSnap.getNode().isLeafNode()||eventSnap.getNode().isEmpty();var oldCompleteSnap=viewCacheGetCompleteEventSnap(oldViewCache);if(accumulator.length>0||!oldViewCache.eventCache.isFullyInitialized()||isLeafOrEmpty&&!eventSnap.getNode().equals(oldCompleteSnap)||!eventSnap.getNode().getPriority().equals(oldCompleteSnap.getPriority())){accumulator.push(changeValue(viewCacheGetCompleteEventSnap(newViewCache)));}}}function viewProcessorGenerateEventCacheAfterServerEvent(viewProcessor,viewCache,changePath,writesCache,source,accumulator){var oldEventSnap=viewCache.eventCache;if(writeTreeRefShadowingWrite(writesCache,changePath)!=null){// we have a shadowing write, ignore changes\nreturn viewCache;}else{var newEventCache=void 0,serverNode=void 0;if(pathIsEmpty(changePath)){// TODO: figure out how this plays with \"sliding ack windows\"\nassert(viewCache.serverCache.isFullyInitialized(),'If change path is empty, we must have complete server data');if(viewCache.serverCache.isFiltered()){// We need to special case this, because we need to only apply writes to complete children, or\n// we might end up raising events for incomplete children. If the server data is filtered deep\n// writes cannot be guaranteed to be complete\nvar serverCache=viewCacheGetCompleteServerSnap(viewCache);var completeChildren=serverCache instanceof ChildrenNode?serverCache:ChildrenNode.EMPTY_NODE;var completeEventChildren=writeTreeRefCalcCompleteEventChildren(writesCache,completeChildren);newEventCache=viewProcessor.filter.updateFullNode(viewCache.eventCache.getNode(),completeEventChildren,accumulator);}else{var completeNode=writeTreeRefCalcCompleteEventCache(writesCache,viewCacheGetCompleteServerSnap(viewCache));newEventCache=viewProcessor.filter.updateFullNode(viewCache.eventCache.getNode(),completeNode,accumulator);}}else{var childKey=pathGetFront(changePath);if(childKey==='.priority'){assert(pathGetLength(changePath)===1,\"Can't have a priority with additional path components\");var oldEventNode=oldEventSnap.getNode();serverNode=viewCache.serverCache.getNode();// we might have overwrites for this priority\nvar updatedPriority=writeTreeRefCalcEventCacheAfterServerOverwrite(writesCache,changePath,oldEventNode,serverNode);if(updatedPriority!=null){newEventCache=viewProcessor.filter.updatePriority(oldEventNode,updatedPriority);}else{// priority didn't change, keep old node\nnewEventCache=oldEventSnap.getNode();}}else{var childChangePath=pathPopFront(changePath);// update child\nvar newEventChild=void 0;if(oldEventSnap.isCompleteForChild(childKey)){serverNode=viewCache.serverCache.getNode();var eventChildUpdate=writeTreeRefCalcEventCacheAfterServerOverwrite(writesCache,changePath,oldEventSnap.getNode(),serverNode);if(eventChildUpdate!=null){newEventChild=oldEventSnap.getNode().getImmediateChild(childKey).updateChild(childChangePath,eventChildUpdate);}else{// Nothing changed, just keep the old child\nnewEventChild=oldEventSnap.getNode().getImmediateChild(childKey);}}else{newEventChild=writeTreeRefCalcCompleteChild(writesCache,childKey,viewCache.serverCache);}if(newEventChild!=null){newEventCache=viewProcessor.filter.updateChild(oldEventSnap.getNode(),childKey,newEventChild,childChangePath,source,accumulator);}else{// no complete child available or no change\nnewEventCache=oldEventSnap.getNode();}}}return viewCacheUpdateEventSnap(viewCache,newEventCache,oldEventSnap.isFullyInitialized()||pathIsEmpty(changePath),viewProcessor.filter.filtersNodes());}}function viewProcessorApplyServerOverwrite(viewProcessor,oldViewCache,changePath,changedSnap,writesCache,completeCache,filterServerNode,accumulator){var oldServerSnap=oldViewCache.serverCache;var newServerCache;var serverFilter=filterServerNode?viewProcessor.filter:viewProcessor.filter.getIndexedFilter();if(pathIsEmpty(changePath)){newServerCache=serverFilter.updateFullNode(oldServerSnap.getNode(),changedSnap,null);}else if(serverFilter.filtersNodes()&&!oldServerSnap.isFiltered()){// we want to filter the server node, but we didn't filter the server node yet, so simulate a full update\nvar newServerNode=oldServerSnap.getNode().updateChild(changePath,changedSnap);newServerCache=serverFilter.updateFullNode(oldServerSnap.getNode(),newServerNode,null);}else{var childKey=pathGetFront(changePath);if(!oldServerSnap.isCompleteForPath(changePath)&&pathGetLength(changePath)>1){// We don't update incomplete nodes with updates intended for other listeners\nreturn oldViewCache;}var childChangePath=pathPopFront(changePath);var childNode=oldServerSnap.getNode().getImmediateChild(childKey);var newChildNode=childNode.updateChild(childChangePath,changedSnap);if(childKey==='.priority'){newServerCache=serverFilter.updatePriority(oldServerSnap.getNode(),newChildNode);}else{newServerCache=serverFilter.updateChild(oldServerSnap.getNode(),childKey,newChildNode,childChangePath,NO_COMPLETE_CHILD_SOURCE,null);}}var newViewCache=viewCacheUpdateServerSnap(oldViewCache,newServerCache,oldServerSnap.isFullyInitialized()||pathIsEmpty(changePath),serverFilter.filtersNodes());var source=new WriteTreeCompleteChildSource(writesCache,newViewCache,completeCache);return viewProcessorGenerateEventCacheAfterServerEvent(viewProcessor,newViewCache,changePath,writesCache,source,accumulator);}function viewProcessorApplyUserOverwrite(viewProcessor,oldViewCache,changePath,changedSnap,writesCache,completeCache,accumulator){var oldEventSnap=oldViewCache.eventCache;var newViewCache,newEventCache;var source=new WriteTreeCompleteChildSource(writesCache,oldViewCache,completeCache);if(pathIsEmpty(changePath)){newEventCache=viewProcessor.filter.updateFullNode(oldViewCache.eventCache.getNode(),changedSnap,accumulator);newViewCache=viewCacheUpdateEventSnap(oldViewCache,newEventCache,true,viewProcessor.filter.filtersNodes());}else{var childKey=pathGetFront(changePath);if(childKey==='.priority'){newEventCache=viewProcessor.filter.updatePriority(oldViewCache.eventCache.getNode(),changedSnap);newViewCache=viewCacheUpdateEventSnap(oldViewCache,newEventCache,oldEventSnap.isFullyInitialized(),oldEventSnap.isFiltered());}else{var childChangePath=pathPopFront(changePath);var oldChild=oldEventSnap.getNode().getImmediateChild(childKey);var newChild=void 0;if(pathIsEmpty(childChangePath)){// Child overwrite, we can replace the child\nnewChild=changedSnap;}else{var childNode=source.getCompleteChild(childKey);if(childNode!=null){if(pathGetBack(childChangePath)==='.priority'&&childNode.getChild(pathParent(childChangePath)).isEmpty()){// This is a priority update on an empty node. If this node exists on the server, the\n// server will send down the priority in the update, so ignore for now\nnewChild=childNode;}else{newChild=childNode.updateChild(childChangePath,changedSnap);}}else{// There is no complete child node available\nnewChild=ChildrenNode.EMPTY_NODE;}}if(!oldChild.equals(newChild)){var newEventSnap=viewProcessor.filter.updateChild(oldEventSnap.getNode(),childKey,newChild,childChangePath,source,accumulator);newViewCache=viewCacheUpdateEventSnap(oldViewCache,newEventSnap,oldEventSnap.isFullyInitialized(),viewProcessor.filter.filtersNodes());}else{newViewCache=oldViewCache;}}}return newViewCache;}function viewProcessorCacheHasChild(viewCache,childKey){return viewCache.eventCache.isCompleteForChild(childKey);}function viewProcessorApplyUserMerge(viewProcessor,viewCache,path,changedChildren,writesCache,serverCache,accumulator){// HACK: In the case of a limit query, there may be some changes that bump things out of the\n// window leaving room for new items.  It's important we process these changes first, so we\n// iterate the changes twice, first processing any that affect items currently in view.\n// TODO: I consider an item \"in view\" if cacheHasChild is true, which checks both the server\n// and event snap.  I'm not sure if this will result in edge cases when a child is in one but\n// not the other.\nvar curViewCache=viewCache;changedChildren.foreach(function(relativePath,childNode){var writePath=pathChild(path,relativePath);if(viewProcessorCacheHasChild(viewCache,pathGetFront(writePath))){curViewCache=viewProcessorApplyUserOverwrite(viewProcessor,curViewCache,writePath,childNode,writesCache,serverCache,accumulator);}});changedChildren.foreach(function(relativePath,childNode){var writePath=pathChild(path,relativePath);if(!viewProcessorCacheHasChild(viewCache,pathGetFront(writePath))){curViewCache=viewProcessorApplyUserOverwrite(viewProcessor,curViewCache,writePath,childNode,writesCache,serverCache,accumulator);}});return curViewCache;}function viewProcessorApplyMerge(viewProcessor,node,merge){merge.foreach(function(relativePath,childNode){node=node.updateChild(relativePath,childNode);});return node;}function viewProcessorApplyServerMerge(viewProcessor,viewCache,path,changedChildren,writesCache,serverCache,filterServerNode,accumulator){// If we don't have a cache yet, this merge was intended for a previously listen in the same location. Ignore it and\n// wait for the complete data update coming soon.\nif(viewCache.serverCache.getNode().isEmpty()&&!viewCache.serverCache.isFullyInitialized()){return viewCache;}// HACK: In the case of a limit query, there may be some changes that bump things out of the\n// window leaving room for new items.  It's important we process these changes first, so we\n// iterate the changes twice, first processing any that affect items currently in view.\n// TODO: I consider an item \"in view\" if cacheHasChild is true, which checks both the server\n// and event snap.  I'm not sure if this will result in edge cases when a child is in one but\n// not the other.\nvar curViewCache=viewCache;var viewMergeTree;if(pathIsEmpty(path)){viewMergeTree=changedChildren;}else{viewMergeTree=new ImmutableTree(null).setTree(path,changedChildren);}var serverNode=viewCache.serverCache.getNode();viewMergeTree.children.inorderTraversal(function(childKey,childTree){if(serverNode.hasChild(childKey)){var serverChild=viewCache.serverCache.getNode().getImmediateChild(childKey);var newChild=viewProcessorApplyMerge(viewProcessor,serverChild,childTree);curViewCache=viewProcessorApplyServerOverwrite(viewProcessor,curViewCache,new Path(childKey),newChild,writesCache,serverCache,filterServerNode,accumulator);}});viewMergeTree.children.inorderTraversal(function(childKey,childMergeTree){var isUnknownDeepMerge=!viewCache.serverCache.isCompleteForChild(childKey)&&childMergeTree.value===undefined;if(!serverNode.hasChild(childKey)&&!isUnknownDeepMerge){var serverChild=viewCache.serverCache.getNode().getImmediateChild(childKey);var newChild=viewProcessorApplyMerge(viewProcessor,serverChild,childMergeTree);curViewCache=viewProcessorApplyServerOverwrite(viewProcessor,curViewCache,new Path(childKey),newChild,writesCache,serverCache,filterServerNode,accumulator);}});return curViewCache;}function viewProcessorAckUserWrite(viewProcessor,viewCache,ackPath,affectedTree,writesCache,completeCache,accumulator){if(writeTreeRefShadowingWrite(writesCache,ackPath)!=null){return viewCache;}// Only filter server node if it is currently filtered\nvar filterServerNode=viewCache.serverCache.isFiltered();// Essentially we'll just get our existing server cache for the affected paths and re-apply it as a server update\n// now that it won't be shadowed.\nvar serverCache=viewCache.serverCache;if(affectedTree.value!=null){// This is an overwrite.\nif(pathIsEmpty(ackPath)&&serverCache.isFullyInitialized()||serverCache.isCompleteForPath(ackPath)){return viewProcessorApplyServerOverwrite(viewProcessor,viewCache,ackPath,serverCache.getNode().getChild(ackPath),writesCache,completeCache,filterServerNode,accumulator);}else if(pathIsEmpty(ackPath)){// This is a goofy edge case where we are acking data at this location but don't have full data.  We\n// should just re-apply whatever we have in our cache as a merge.\nvar changedChildren_1=new ImmutableTree(null);serverCache.getNode().forEachChild(KEY_INDEX,function(name,node){changedChildren_1=changedChildren_1.set(new Path(name),node);});return viewProcessorApplyServerMerge(viewProcessor,viewCache,ackPath,changedChildren_1,writesCache,completeCache,filterServerNode,accumulator);}else{return viewCache;}}else{// This is a merge.\nvar changedChildren_2=new ImmutableTree(null);affectedTree.foreach(function(mergePath,value){var serverCachePath=pathChild(ackPath,mergePath);if(serverCache.isCompleteForPath(serverCachePath)){changedChildren_2=changedChildren_2.set(mergePath,serverCache.getNode().getChild(serverCachePath));}});return viewProcessorApplyServerMerge(viewProcessor,viewCache,ackPath,changedChildren_2,writesCache,completeCache,filterServerNode,accumulator);}}function viewProcessorListenComplete(viewProcessor,viewCache,path,writesCache,accumulator){var oldServerNode=viewCache.serverCache;var newViewCache=viewCacheUpdateServerSnap(viewCache,oldServerNode.getNode(),oldServerNode.isFullyInitialized()||pathIsEmpty(path),oldServerNode.isFiltered());return viewProcessorGenerateEventCacheAfterServerEvent(viewProcessor,newViewCache,path,writesCache,NO_COMPLETE_CHILD_SOURCE,accumulator);}function viewProcessorRevertUserWrite(viewProcessor,viewCache,path,writesCache,completeServerCache,accumulator){var complete;if(writeTreeRefShadowingWrite(writesCache,path)!=null){return viewCache;}else{var source=new WriteTreeCompleteChildSource(writesCache,viewCache,completeServerCache);var oldEventCache=viewCache.eventCache.getNode();var newEventCache=void 0;if(pathIsEmpty(path)||pathGetFront(path)==='.priority'){var newNode=void 0;if(viewCache.serverCache.isFullyInitialized()){newNode=writeTreeRefCalcCompleteEventCache(writesCache,viewCacheGetCompleteServerSnap(viewCache));}else{var serverChildren=viewCache.serverCache.getNode();assert(serverChildren instanceof ChildrenNode,'serverChildren would be complete if leaf node');newNode=writeTreeRefCalcCompleteEventChildren(writesCache,serverChildren);}newNode=newNode;newEventCache=viewProcessor.filter.updateFullNode(oldEventCache,newNode,accumulator);}else{var childKey=pathGetFront(path);var newChild=writeTreeRefCalcCompleteChild(writesCache,childKey,viewCache.serverCache);if(newChild==null&&viewCache.serverCache.isCompleteForChild(childKey)){newChild=oldEventCache.getImmediateChild(childKey);}if(newChild!=null){newEventCache=viewProcessor.filter.updateChild(oldEventCache,childKey,newChild,pathPopFront(path),source,accumulator);}else if(viewCache.eventCache.getNode().hasChild(childKey)){// No complete child available, delete the existing one, if any\nnewEventCache=viewProcessor.filter.updateChild(oldEventCache,childKey,ChildrenNode.EMPTY_NODE,pathPopFront(path),source,accumulator);}else{newEventCache=oldEventCache;}if(newEventCache.isEmpty()&&viewCache.serverCache.isFullyInitialized()){// We might have reverted all child writes. Maybe the old event was a leaf node\ncomplete=writeTreeRefCalcCompleteEventCache(writesCache,viewCacheGetCompleteServerSnap(viewCache));if(complete.isLeafNode()){newEventCache=viewProcessor.filter.updateFullNode(newEventCache,complete,accumulator);}}}complete=viewCache.serverCache.isFullyInitialized()||writeTreeRefShadowingWrite(writesCache,newEmptyPath())!=null;return viewCacheUpdateEventSnap(viewCache,newEventCache,complete,viewProcessor.filter.filtersNodes());}}/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * A view represents a specific location and query that has 1 or more event registrations.\r\n *\r\n * It does several things:\r\n *  - Maintains the list of event registrations for this location/query.\r\n *  - Maintains a cache of the data visible for this location/query.\r\n *  - Applies new operations (via applyOperation), updates the cache, and based on the event\r\n *    registrations returns the set of events to be raised.\r\n */var View=/** @class */function(){function View(query_,initialViewCache){this.query_=query_;this.eventRegistrations_=[];var params=this.query_._queryParams;var indexFilter=new IndexedFilter(params.getIndex());var filter=queryParamsGetNodeFilter(params);this.processor_=newViewProcessor(filter);var initialServerCache=initialViewCache.serverCache;var initialEventCache=initialViewCache.eventCache;// Don't filter server node with other filter than index, wait for tagged listen\nvar serverSnap=indexFilter.updateFullNode(ChildrenNode.EMPTY_NODE,initialServerCache.getNode(),null);var eventSnap=filter.updateFullNode(ChildrenNode.EMPTY_NODE,initialEventCache.getNode(),null);var newServerCache=new CacheNode(serverSnap,initialServerCache.isFullyInitialized(),indexFilter.filtersNodes());var newEventCache=new CacheNode(eventSnap,initialEventCache.isFullyInitialized(),filter.filtersNodes());this.viewCache_=newViewCache(newEventCache,newServerCache);this.eventGenerator_=new EventGenerator(this.query_);}Object.defineProperty(View.prototype,\"query\",{get:function(){return this.query_;},enumerable:false,configurable:true});return View;}();function viewGetServerCache(view){return view.viewCache_.serverCache.getNode();}function viewGetCompleteNode(view){return viewCacheGetCompleteEventSnap(view.viewCache_);}function viewGetCompleteServerCache(view,path){var cache=viewCacheGetCompleteServerSnap(view.viewCache_);if(cache){// If this isn't a \"loadsAllData\" view, then cache isn't actually a complete cache and\n// we need to see if it contains the child we're interested in.\nif(view.query._queryParams.loadsAllData()||!pathIsEmpty(path)&&!cache.getImmediateChild(pathGetFront(path)).isEmpty()){return cache.getChild(path);}}return null;}function viewIsEmpty(view){return view.eventRegistrations_.length===0;}function viewAddEventRegistration(view,eventRegistration){view.eventRegistrations_.push(eventRegistration);}/**\r\n * @param eventRegistration - If null, remove all callbacks.\r\n * @param cancelError - If a cancelError is provided, appropriate cancel events will be returned.\r\n * @returns Cancel events, if cancelError was provided.\r\n */function viewRemoveEventRegistration(view,eventRegistration,cancelError){var cancelEvents=[];if(cancelError){assert(eventRegistration==null,'A cancel should cancel all event registrations.');var path_1=view.query._path;view.eventRegistrations_.forEach(function(registration){var maybeEvent=registration.createCancelEvent(cancelError,path_1);if(maybeEvent){cancelEvents.push(maybeEvent);}});}if(eventRegistration){var remaining=[];for(var i=0;i<view.eventRegistrations_.length;++i){var existing=view.eventRegistrations_[i];if(!existing.matches(eventRegistration)){remaining.push(existing);}else if(eventRegistration.hasAnyCallback()){// We're removing just this one\nremaining=remaining.concat(view.eventRegistrations_.slice(i+1));break;}}view.eventRegistrations_=remaining;}else{view.eventRegistrations_=[];}return cancelEvents;}/**\r\n * Applies the given Operation, updates our cache, and returns the appropriate events.\r\n */function viewApplyOperation(view,operation,writesCache,completeServerCache){if(operation.type===OperationType.MERGE&&operation.source.queryId!==null){assert(viewCacheGetCompleteServerSnap(view.viewCache_),'We should always have a full cache before handling merges');assert(viewCacheGetCompleteEventSnap(view.viewCache_),'Missing event cache, even though we have a server cache');}var oldViewCache=view.viewCache_;var result=viewProcessorApplyOperation(view.processor_,oldViewCache,operation,writesCache,completeServerCache);viewProcessorAssertIndexed(view.processor_,result.viewCache);assert(result.viewCache.serverCache.isFullyInitialized()||!oldViewCache.serverCache.isFullyInitialized(),'Once a server snap is complete, it should never go back');view.viewCache_=result.viewCache;return viewGenerateEventsForChanges_(view,result.changes,result.viewCache.eventCache.getNode(),null);}function viewGetInitialEvents(view,registration){var eventSnap=view.viewCache_.eventCache;var initialChanges=[];if(!eventSnap.getNode().isLeafNode()){var eventNode=eventSnap.getNode();eventNode.forEachChild(PRIORITY_INDEX,function(key,childNode){initialChanges.push(changeChildAdded(key,childNode));});}if(eventSnap.isFullyInitialized()){initialChanges.push(changeValue(eventSnap.getNode()));}return viewGenerateEventsForChanges_(view,initialChanges,eventSnap.getNode(),registration);}function viewGenerateEventsForChanges_(view,changes,eventCache,eventRegistration){var registrations=eventRegistration?[eventRegistration]:view.eventRegistrations_;return eventGeneratorGenerateEventsForChanges(view.eventGenerator_,changes,eventCache,registrations);}/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */var referenceConstructor$1;/**\r\n * SyncPoint represents a single location in a SyncTree with 1 or more event registrations, meaning we need to\r\n * maintain 1 or more Views at this location to cache server data and raise appropriate events for server changes\r\n * and user writes (set, transaction, update).\r\n *\r\n * It's responsible for:\r\n *  - Maintaining the set of 1 or more views necessary at this location (a SyncPoint with 0 views should be removed).\r\n *  - Proxying user / server operations to the views as appropriate (i.e. applyServerOverwrite,\r\n *    applyUserOverwrite, etc.)\r\n */var SyncPoint=/** @class */function(){function SyncPoint(){/**\r\n         * The Views being tracked at this location in the tree, stored as a map where the key is a\r\n         * queryId and the value is the View for that query.\r\n         *\r\n         * NOTE: This list will be quite small (usually 1, but perhaps 2 or 3; any more is an odd use case).\r\n         */this.views=new Map();}return SyncPoint;}();function syncPointSetReferenceConstructor(val){assert(!referenceConstructor$1,'__referenceConstructor has already been defined');referenceConstructor$1=val;}function syncPointGetReferenceConstructor(){assert(referenceConstructor$1,'Reference.ts has not been loaded');return referenceConstructor$1;}function syncPointIsEmpty(syncPoint){return syncPoint.views.size===0;}function syncPointApplyOperation(syncPoint,operation,writesCache,optCompleteServerCache){var e_1,_a;var queryId=operation.source.queryId;if(queryId!==null){var view=syncPoint.views.get(queryId);assert(view!=null,'SyncTree gave us an op for an invalid query.');return viewApplyOperation(view,operation,writesCache,optCompleteServerCache);}else{var events=[];try{for(var _b=__values(syncPoint.views.values()),_c=_b.next();!_c.done;_c=_b.next()){var view=_c.value;events=events.concat(viewApplyOperation(view,operation,writesCache,optCompleteServerCache));}}catch(e_1_1){e_1={error:e_1_1};}finally{try{if(_c&&!_c.done&&(_a=_b.return))_a.call(_b);}finally{if(e_1)throw e_1.error;}}return events;}}/**\r\n * Get a view for the specified query.\r\n *\r\n * @param query - The query to return a view for\r\n * @param writesCache\r\n * @param serverCache\r\n * @param serverCacheComplete\r\n * @returns Events to raise.\r\n */function syncPointGetView(syncPoint,query,writesCache,serverCache,serverCacheComplete){var queryId=query._queryIdentifier;var view=syncPoint.views.get(queryId);if(!view){// TODO: make writesCache take flag for complete server node\nvar eventCache=writeTreeRefCalcCompleteEventCache(writesCache,serverCacheComplete?serverCache:null);var eventCacheComplete=false;if(eventCache){eventCacheComplete=true;}else if(serverCache instanceof ChildrenNode){eventCache=writeTreeRefCalcCompleteEventChildren(writesCache,serverCache);eventCacheComplete=false;}else{eventCache=ChildrenNode.EMPTY_NODE;eventCacheComplete=false;}var viewCache=newViewCache(new CacheNode(eventCache,eventCacheComplete,false),new CacheNode(serverCache,serverCacheComplete,false));return new View(query,viewCache);}return view;}/**\r\n * Add an event callback for the specified query.\r\n *\r\n * @param query\r\n * @param eventRegistration\r\n * @param writesCache\r\n * @param serverCache - Complete server cache, if we have it.\r\n * @param serverCacheComplete\r\n * @returns Events to raise.\r\n */function syncPointAddEventRegistration(syncPoint,query,eventRegistration,writesCache,serverCache,serverCacheComplete){var view=syncPointGetView(syncPoint,query,writesCache,serverCache,serverCacheComplete);if(!syncPoint.views.has(query._queryIdentifier)){syncPoint.views.set(query._queryIdentifier,view);}// This is guaranteed to exist now, we just created anything that was missing\nviewAddEventRegistration(view,eventRegistration);return viewGetInitialEvents(view,eventRegistration);}/**\r\n * Remove event callback(s).  Return cancelEvents if a cancelError is specified.\r\n *\r\n * If query is the default query, we'll check all views for the specified eventRegistration.\r\n * If eventRegistration is null, we'll remove all callbacks for the specified view(s).\r\n *\r\n * @param eventRegistration - If null, remove all callbacks.\r\n * @param cancelError - If a cancelError is provided, appropriate cancel events will be returned.\r\n * @returns removed queries and any cancel events\r\n */function syncPointRemoveEventRegistration(syncPoint,query,eventRegistration,cancelError){var e_2,_a;var queryId=query._queryIdentifier;var removed=[];var cancelEvents=[];var hadCompleteView=syncPointHasCompleteView(syncPoint);if(queryId==='default'){try{// When you do ref.off(...), we search all views for the registration to remove.\nfor(var _b=__values(syncPoint.views.entries()),_c=_b.next();!_c.done;_c=_b.next()){var _d=__read(_c.value,2),viewQueryId=_d[0],view=_d[1];cancelEvents=cancelEvents.concat(viewRemoveEventRegistration(view,eventRegistration,cancelError));if(viewIsEmpty(view)){syncPoint.views.delete(viewQueryId);// We'll deal with complete views later.\nif(!view.query._queryParams.loadsAllData()){removed.push(view.query);}}}}catch(e_2_1){e_2={error:e_2_1};}finally{try{if(_c&&!_c.done&&(_a=_b.return))_a.call(_b);}finally{if(e_2)throw e_2.error;}}}else{// remove the callback from the specific view.\nvar view=syncPoint.views.get(queryId);if(view){cancelEvents=cancelEvents.concat(viewRemoveEventRegistration(view,eventRegistration,cancelError));if(viewIsEmpty(view)){syncPoint.views.delete(queryId);// We'll deal with complete views later.\nif(!view.query._queryParams.loadsAllData()){removed.push(view.query);}}}}if(hadCompleteView&&!syncPointHasCompleteView(syncPoint)){// We removed our last complete view.\nremoved.push(new(syncPointGetReferenceConstructor())(query._repo,query._path));}return{removed:removed,events:cancelEvents};}function syncPointGetQueryViews(syncPoint){var e_3,_a;var result=[];try{for(var _b=__values(syncPoint.views.values()),_c=_b.next();!_c.done;_c=_b.next()){var view=_c.value;if(!view.query._queryParams.loadsAllData()){result.push(view);}}}catch(e_3_1){e_3={error:e_3_1};}finally{try{if(_c&&!_c.done&&(_a=_b.return))_a.call(_b);}finally{if(e_3)throw e_3.error;}}return result;}/**\r\n * @param path - The path to the desired complete snapshot\r\n * @returns A complete cache, if it exists\r\n */function syncPointGetCompleteServerCache(syncPoint,path){var e_4,_a;var serverCache=null;try{for(var _b=__values(syncPoint.views.values()),_c=_b.next();!_c.done;_c=_b.next()){var view=_c.value;serverCache=serverCache||viewGetCompleteServerCache(view,path);}}catch(e_4_1){e_4={error:e_4_1};}finally{try{if(_c&&!_c.done&&(_a=_b.return))_a.call(_b);}finally{if(e_4)throw e_4.error;}}return serverCache;}function syncPointViewForQuery(syncPoint,query){var params=query._queryParams;if(params.loadsAllData()){return syncPointGetCompleteView(syncPoint);}else{var queryId=query._queryIdentifier;return syncPoint.views.get(queryId);}}function syncPointViewExistsForQuery(syncPoint,query){return syncPointViewForQuery(syncPoint,query)!=null;}function syncPointHasCompleteView(syncPoint){return syncPointGetCompleteView(syncPoint)!=null;}function syncPointGetCompleteView(syncPoint){var e_5,_a;try{for(var _b=__values(syncPoint.views.values()),_c=_b.next();!_c.done;_c=_b.next()){var view=_c.value;if(view.query._queryParams.loadsAllData()){return view;}}}catch(e_5_1){e_5={error:e_5_1};}finally{try{if(_c&&!_c.done&&(_a=_b.return))_a.call(_b);}finally{if(e_5)throw e_5.error;}}return null;}/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */var referenceConstructor;function syncTreeSetReferenceConstructor(val){assert(!referenceConstructor,'__referenceConstructor has already been defined');referenceConstructor=val;}function syncTreeGetReferenceConstructor(){assert(referenceConstructor,'Reference.ts has not been loaded');return referenceConstructor;}/**\r\n * Static tracker for next query tag.\r\n */var syncTreeNextQueryTag_=1;/**\r\n * SyncTree is the central class for managing event callback registration, data caching, views\r\n * (query processing), and event generation.  There are typically two SyncTree instances for\r\n * each Repo, one for the normal Firebase data, and one for the .info data.\r\n *\r\n * It has a number of responsibilities, including:\r\n *  - Tracking all user event callbacks (registered via addEventRegistration() and removeEventRegistration()).\r\n *  - Applying and caching data changes for user set(), transaction(), and update() calls\r\n *    (applyUserOverwrite(), applyUserMerge()).\r\n *  - Applying and caching data changes for server data changes (applyServerOverwrite(),\r\n *    applyServerMerge()).\r\n *  - Generating user-facing events for server and user changes (all of the apply* methods\r\n *    return the set of events that need to be raised as a result).\r\n *  - Maintaining the appropriate set of server listens to ensure we are always subscribed\r\n *    to the correct set of paths and queries to satisfy the current set of user event\r\n *    callbacks (listens are started/stopped using the provided listenProvider).\r\n *\r\n * NOTE: Although SyncTree tracks event callbacks and calculates events to raise, the actual\r\n * events are returned to the caller rather than raised synchronously.\r\n *\r\n */var SyncTree=/** @class */function(){/**\r\n     * @param listenProvider_ - Used by SyncTree to start / stop listening\r\n     *   to server data.\r\n     */function SyncTree(listenProvider_){this.listenProvider_=listenProvider_;/**\r\n         * Tree of SyncPoints.  There's a SyncPoint at any location that has 1 or more views.\r\n         */this.syncPointTree_=new ImmutableTree(null);/**\r\n         * A tree of all pending user writes (user-initiated set()'s, transaction()'s, update()'s, etc.).\r\n         */this.pendingWriteTree_=newWriteTree();this.tagToQueryMap=new Map();this.queryToTagMap=new Map();}return SyncTree;}();/**\r\n * Apply the data changes for a user-generated set() or transaction() call.\r\n *\r\n * @returns Events to raise.\r\n */function syncTreeApplyUserOverwrite(syncTree,path,newData,writeId,visible){// Record pending write.\nwriteTreeAddOverwrite(syncTree.pendingWriteTree_,path,newData,writeId,visible);if(!visible){return[];}else{return syncTreeApplyOperationToSyncPoints_(syncTree,new Overwrite(newOperationSourceUser(),path,newData));}}/**\r\n * Apply the data from a user-generated update() call\r\n *\r\n * @returns Events to raise.\r\n */function syncTreeApplyUserMerge(syncTree,path,changedChildren,writeId){// Record pending merge.\nwriteTreeAddMerge(syncTree.pendingWriteTree_,path,changedChildren,writeId);var changeTree=ImmutableTree.fromObject(changedChildren);return syncTreeApplyOperationToSyncPoints_(syncTree,new Merge(newOperationSourceUser(),path,changeTree));}/**\r\n * Acknowledge a pending user write that was previously registered with applyUserOverwrite() or applyUserMerge().\r\n *\r\n * @param revert - True if the given write failed and needs to be reverted\r\n * @returns Events to raise.\r\n */function syncTreeAckUserWrite(syncTree,writeId,revert){if(revert===void 0){revert=false;}var write=writeTreeGetWrite(syncTree.pendingWriteTree_,writeId);var needToReevaluate=writeTreeRemoveWrite(syncTree.pendingWriteTree_,writeId);if(!needToReevaluate){return[];}else{var affectedTree_1=new ImmutableTree(null);if(write.snap!=null){// overwrite\naffectedTree_1=affectedTree_1.set(newEmptyPath(),true);}else{each(write.children,function(pathString){affectedTree_1=affectedTree_1.set(new Path(pathString),true);});}return syncTreeApplyOperationToSyncPoints_(syncTree,new AckUserWrite(write.path,affectedTree_1,revert));}}/**\r\n * Apply new server data for the specified path..\r\n *\r\n * @returns Events to raise.\r\n */function syncTreeApplyServerOverwrite(syncTree,path,newData){return syncTreeApplyOperationToSyncPoints_(syncTree,new Overwrite(newOperationSourceServer(),path,newData));}/**\r\n * Apply new server data to be merged in at the specified path.\r\n *\r\n * @returns Events to raise.\r\n */function syncTreeApplyServerMerge(syncTree,path,changedChildren){var changeTree=ImmutableTree.fromObject(changedChildren);return syncTreeApplyOperationToSyncPoints_(syncTree,new Merge(newOperationSourceServer(),path,changeTree));}/**\r\n * Apply a listen complete for a query\r\n *\r\n * @returns Events to raise.\r\n */function syncTreeApplyListenComplete(syncTree,path){return syncTreeApplyOperationToSyncPoints_(syncTree,new ListenComplete(newOperationSourceServer(),path));}/**\r\n * Apply a listen complete for a tagged query\r\n *\r\n * @returns Events to raise.\r\n */function syncTreeApplyTaggedListenComplete(syncTree,path,tag){var queryKey=syncTreeQueryKeyForTag_(syncTree,tag);if(queryKey){var r=syncTreeParseQueryKey_(queryKey);var queryPath=r.path,queryId=r.queryId;var relativePath=newRelativePath(queryPath,path);var op=new ListenComplete(newOperationSourceServerTaggedQuery(queryId),relativePath);return syncTreeApplyTaggedOperation_(syncTree,queryPath,op);}else{// We've already removed the query. No big deal, ignore the update\nreturn[];}}/**\r\n * Remove event callback(s).\r\n *\r\n * If query is the default query, we'll check all queries for the specified eventRegistration.\r\n * If eventRegistration is null, we'll remove all callbacks for the specified query/queries.\r\n *\r\n * @param eventRegistration - If null, all callbacks are removed.\r\n * @param cancelError - If a cancelError is provided, appropriate cancel events will be returned.\r\n * @returns Cancel events, if cancelError was provided.\r\n */function syncTreeRemoveEventRegistration(syncTree,query,eventRegistration,cancelError){// Find the syncPoint first. Then deal with whether or not it has matching listeners\nvar path=query._path;var maybeSyncPoint=syncTree.syncPointTree_.get(path);var cancelEvents=[];// A removal on a default query affects all queries at that location. A removal on an indexed query, even one without\n// other query constraints, does *not* affect all queries at that location. So this check must be for 'default', and\n// not loadsAllData().\nif(maybeSyncPoint&&(query._queryIdentifier==='default'||syncPointViewExistsForQuery(maybeSyncPoint,query))){var removedAndEvents=syncPointRemoveEventRegistration(maybeSyncPoint,query,eventRegistration,cancelError);if(syncPointIsEmpty(maybeSyncPoint)){syncTree.syncPointTree_=syncTree.syncPointTree_.remove(path);}var removed=removedAndEvents.removed;cancelEvents=removedAndEvents.events;// We may have just removed one of many listeners and can short-circuit this whole process\n// We may also not have removed a default listener, in which case all of the descendant listeners should already be\n// properly set up.\n//\n// Since indexed queries can shadow if they don't have other query constraints, check for loadsAllData(), instead of\n// queryId === 'default'\nvar removingDefault=-1!==removed.findIndex(function(query){return query._queryParams.loadsAllData();});var covered=syncTree.syncPointTree_.findOnPath(path,function(relativePath,parentSyncPoint){return syncPointHasCompleteView(parentSyncPoint);});if(removingDefault&&!covered){var subtree=syncTree.syncPointTree_.subtree(path);// There are potentially child listeners. Determine what if any listens we need to send before executing the\n// removal\nif(!subtree.isEmpty()){// We need to fold over our subtree and collect the listeners to send\nvar newViews=syncTreeCollectDistinctViewsForSubTree_(subtree);// Ok, we've collected all the listens we need. Set them up.\nfor(var i=0;i<newViews.length;++i){var view=newViews[i],newQuery=view.query;var listener=syncTreeCreateListenerForView_(syncTree,view);syncTree.listenProvider_.startListening(syncTreeQueryForListening_(newQuery),syncTreeTagForQuery_(syncTree,newQuery),listener.hashFn,listener.onComplete);}}}// If we removed anything and we're not covered by a higher up listen, we need to stop listening on this query\n// The above block has us covered in terms of making sure we're set up on listens lower in the tree.\n// Also, note that if we have a cancelError, it's already been removed at the provider level.\nif(!covered&&removed.length>0&&!cancelError){// If we removed a default, then we weren't listening on any of the other queries here. Just cancel the one\n// default. Otherwise, we need to iterate through and cancel each individual query\nif(removingDefault){// We don't tag default listeners\nvar defaultTag=null;syncTree.listenProvider_.stopListening(syncTreeQueryForListening_(query),defaultTag);}else{removed.forEach(function(queryToRemove){var tagToRemove=syncTree.queryToTagMap.get(syncTreeMakeQueryKey_(queryToRemove));syncTree.listenProvider_.stopListening(syncTreeQueryForListening_(queryToRemove),tagToRemove);});}}// Now, clear all of the tags we're tracking for the removed listens\nsyncTreeRemoveTags_(syncTree,removed);}return cancelEvents;}/**\r\n * Apply new server data for the specified tagged query.\r\n *\r\n * @returns Events to raise.\r\n */function syncTreeApplyTaggedQueryOverwrite(syncTree,path,snap,tag){var queryKey=syncTreeQueryKeyForTag_(syncTree,tag);if(queryKey!=null){var r=syncTreeParseQueryKey_(queryKey);var queryPath=r.path,queryId=r.queryId;var relativePath=newRelativePath(queryPath,path);var op=new Overwrite(newOperationSourceServerTaggedQuery(queryId),relativePath,snap);return syncTreeApplyTaggedOperation_(syncTree,queryPath,op);}else{// Query must have been removed already\nreturn[];}}/**\r\n * Apply server data to be merged in for the specified tagged query.\r\n *\r\n * @returns Events to raise.\r\n */function syncTreeApplyTaggedQueryMerge(syncTree,path,changedChildren,tag){var queryKey=syncTreeQueryKeyForTag_(syncTree,tag);if(queryKey){var r=syncTreeParseQueryKey_(queryKey);var queryPath=r.path,queryId=r.queryId;var relativePath=newRelativePath(queryPath,path);var changeTree=ImmutableTree.fromObject(changedChildren);var op=new Merge(newOperationSourceServerTaggedQuery(queryId),relativePath,changeTree);return syncTreeApplyTaggedOperation_(syncTree,queryPath,op);}else{// We've already removed the query. No big deal, ignore the update\nreturn[];}}/**\r\n * Add an event callback for the specified query.\r\n *\r\n * @returns Events to raise.\r\n */function syncTreeAddEventRegistration(syncTree,query,eventRegistration){var path=query._path;var serverCache=null;var foundAncestorDefaultView=false;// Any covering writes will necessarily be at the root, so really all we need to find is the server cache.\n// Consider optimizing this once there's a better understanding of what actual behavior will be.\nsyncTree.syncPointTree_.foreachOnPath(path,function(pathToSyncPoint,sp){var relativePath=newRelativePath(pathToSyncPoint,path);serverCache=serverCache||syncPointGetCompleteServerCache(sp,relativePath);foundAncestorDefaultView=foundAncestorDefaultView||syncPointHasCompleteView(sp);});var syncPoint=syncTree.syncPointTree_.get(path);if(!syncPoint){syncPoint=new SyncPoint();syncTree.syncPointTree_=syncTree.syncPointTree_.set(path,syncPoint);}else{foundAncestorDefaultView=foundAncestorDefaultView||syncPointHasCompleteView(syncPoint);serverCache=serverCache||syncPointGetCompleteServerCache(syncPoint,newEmptyPath());}var serverCacheComplete;if(serverCache!=null){serverCacheComplete=true;}else{serverCacheComplete=false;serverCache=ChildrenNode.EMPTY_NODE;var subtree=syncTree.syncPointTree_.subtree(path);subtree.foreachChild(function(childName,childSyncPoint){var completeCache=syncPointGetCompleteServerCache(childSyncPoint,newEmptyPath());if(completeCache){serverCache=serverCache.updateImmediateChild(childName,completeCache);}});}var viewAlreadyExists=syncPointViewExistsForQuery(syncPoint,query);if(!viewAlreadyExists&&!query._queryParams.loadsAllData()){// We need to track a tag for this query\nvar queryKey=syncTreeMakeQueryKey_(query);assert(!syncTree.queryToTagMap.has(queryKey),'View does not exist, but we have a tag');var tag=syncTreeGetNextQueryTag_();syncTree.queryToTagMap.set(queryKey,tag);syncTree.tagToQueryMap.set(tag,queryKey);}var writesCache=writeTreeChildWrites(syncTree.pendingWriteTree_,path);var events=syncPointAddEventRegistration(syncPoint,query,eventRegistration,writesCache,serverCache,serverCacheComplete);if(!viewAlreadyExists&&!foundAncestorDefaultView){var view=syncPointViewForQuery(syncPoint,query);events=events.concat(syncTreeSetupListener_(syncTree,query,view));}return events;}/**\r\n * Returns a complete cache, if we have one, of the data at a particular path. If the location does not have a\r\n * listener above it, we will get a false \"null\". This shouldn't be a problem because transactions will always\r\n * have a listener above, and atomic operations would correctly show a jitter of <increment value> ->\r\n *     <incremented total> as the write is applied locally and then acknowledged at the server.\r\n *\r\n * Note: this method will *include* hidden writes from transaction with applyLocally set to false.\r\n *\r\n * @param path - The path to the data we want\r\n * @param writeIdsToExclude - A specific set to be excluded\r\n */function syncTreeCalcCompleteEventCache(syncTree,path,writeIdsToExclude){var includeHiddenSets=true;var writeTree=syncTree.pendingWriteTree_;var serverCache=syncTree.syncPointTree_.findOnPath(path,function(pathSoFar,syncPoint){var relativePath=newRelativePath(pathSoFar,path);var serverCache=syncPointGetCompleteServerCache(syncPoint,relativePath);if(serverCache){return serverCache;}});return writeTreeCalcCompleteEventCache(writeTree,path,serverCache,writeIdsToExclude,includeHiddenSets);}function syncTreeGetServerValue(syncTree,query){var path=query._path;var serverCache=null;// Any covering writes will necessarily be at the root, so really all we need to find is the server cache.\n// Consider optimizing this once there's a better understanding of what actual behavior will be.\nsyncTree.syncPointTree_.foreachOnPath(path,function(pathToSyncPoint,sp){var relativePath=newRelativePath(pathToSyncPoint,path);serverCache=serverCache||syncPointGetCompleteServerCache(sp,relativePath);});var syncPoint=syncTree.syncPointTree_.get(path);if(!syncPoint){syncPoint=new SyncPoint();syncTree.syncPointTree_=syncTree.syncPointTree_.set(path,syncPoint);}else{serverCache=serverCache||syncPointGetCompleteServerCache(syncPoint,newEmptyPath());}var serverCacheComplete=serverCache!=null;var serverCacheNode=serverCacheComplete?new CacheNode(serverCache,true,false):null;var writesCache=writeTreeChildWrites(syncTree.pendingWriteTree_,query._path);var view=syncPointGetView(syncPoint,query,writesCache,serverCacheComplete?serverCacheNode.getNode():ChildrenNode.EMPTY_NODE,serverCacheComplete);return viewGetCompleteNode(view);}/**\r\n * A helper method that visits all descendant and ancestor SyncPoints, applying the operation.\r\n *\r\n * NOTES:\r\n * - Descendant SyncPoints will be visited first (since we raise events depth-first).\r\n *\r\n * - We call applyOperation() on each SyncPoint passing three things:\r\n *   1. A version of the Operation that has been made relative to the SyncPoint location.\r\n *   2. A WriteTreeRef of any writes we have cached at the SyncPoint location.\r\n *   3. A snapshot Node with cached server data, if we have it.\r\n *\r\n * - We concatenate all of the events returned by each SyncPoint and return the result.\r\n */function syncTreeApplyOperationToSyncPoints_(syncTree,operation){return syncTreeApplyOperationHelper_(operation,syncTree.syncPointTree_,/*serverCache=*/null,writeTreeChildWrites(syncTree.pendingWriteTree_,newEmptyPath()));}/**\r\n * Recursive helper for applyOperationToSyncPoints_\r\n */function syncTreeApplyOperationHelper_(operation,syncPointTree,serverCache,writesCache){if(pathIsEmpty(operation.path)){return syncTreeApplyOperationDescendantsHelper_(operation,syncPointTree,serverCache,writesCache);}else{var syncPoint=syncPointTree.get(newEmptyPath());// If we don't have cached server data, see if we can get it from this SyncPoint.\nif(serverCache==null&&syncPoint!=null){serverCache=syncPointGetCompleteServerCache(syncPoint,newEmptyPath());}var events=[];var childName=pathGetFront(operation.path);var childOperation=operation.operationForChild(childName);var childTree=syncPointTree.children.get(childName);if(childTree&&childOperation){var childServerCache=serverCache?serverCache.getImmediateChild(childName):null;var childWritesCache=writeTreeRefChild(writesCache,childName);events=events.concat(syncTreeApplyOperationHelper_(childOperation,childTree,childServerCache,childWritesCache));}if(syncPoint){events=events.concat(syncPointApplyOperation(syncPoint,operation,writesCache,serverCache));}return events;}}/**\r\n * Recursive helper for applyOperationToSyncPoints_\r\n */function syncTreeApplyOperationDescendantsHelper_(operation,syncPointTree,serverCache,writesCache){var syncPoint=syncPointTree.get(newEmptyPath());// If we don't have cached server data, see if we can get it from this SyncPoint.\nif(serverCache==null&&syncPoint!=null){serverCache=syncPointGetCompleteServerCache(syncPoint,newEmptyPath());}var events=[];syncPointTree.children.inorderTraversal(function(childName,childTree){var childServerCache=serverCache?serverCache.getImmediateChild(childName):null;var childWritesCache=writeTreeRefChild(writesCache,childName);var childOperation=operation.operationForChild(childName);if(childOperation){events=events.concat(syncTreeApplyOperationDescendantsHelper_(childOperation,childTree,childServerCache,childWritesCache));}});if(syncPoint){events=events.concat(syncPointApplyOperation(syncPoint,operation,writesCache,serverCache));}return events;}function syncTreeCreateListenerForView_(syncTree,view){var query=view.query;var tag=syncTreeTagForQuery_(syncTree,query);return{hashFn:function(){var cache=viewGetServerCache(view)||ChildrenNode.EMPTY_NODE;return cache.hash();},onComplete:function(status){if(status==='ok'){if(tag){return syncTreeApplyTaggedListenComplete(syncTree,query._path,tag);}else{return syncTreeApplyListenComplete(syncTree,query._path);}}else{// If a listen failed, kill all of the listeners here, not just the one that triggered the error.\n// Note that this may need to be scoped to just this listener if we change permissions on filtered children\nvar error=errorForServerCode(status,query);return syncTreeRemoveEventRegistration(syncTree,query,/*eventRegistration*/null,error);}}};}/**\r\n * Return the tag associated with the given query.\r\n */function syncTreeTagForQuery_(syncTree,query){var queryKey=syncTreeMakeQueryKey_(query);return syncTree.queryToTagMap.get(queryKey);}/**\r\n * Given a query, computes a \"queryKey\" suitable for use in our queryToTagMap_.\r\n */function syncTreeMakeQueryKey_(query){return query._path.toString()+'$'+query._queryIdentifier;}/**\r\n * Return the query associated with the given tag, if we have one\r\n */function syncTreeQueryKeyForTag_(syncTree,tag){return syncTree.tagToQueryMap.get(tag);}/**\r\n * Given a queryKey (created by makeQueryKey), parse it back into a path and queryId.\r\n */function syncTreeParseQueryKey_(queryKey){var splitIndex=queryKey.indexOf('$');assert(splitIndex!==-1&&splitIndex<queryKey.length-1,'Bad queryKey.');return{queryId:queryKey.substr(splitIndex+1),path:new Path(queryKey.substr(0,splitIndex))};}/**\r\n * A helper method to apply tagged operations\r\n */function syncTreeApplyTaggedOperation_(syncTree,queryPath,operation){var syncPoint=syncTree.syncPointTree_.get(queryPath);assert(syncPoint,\"Missing sync point for query tag that we're tracking\");var writesCache=writeTreeChildWrites(syncTree.pendingWriteTree_,queryPath);return syncPointApplyOperation(syncPoint,operation,writesCache,null);}/**\r\n * This collapses multiple unfiltered views into a single view, since we only need a single\r\n * listener for them.\r\n */function syncTreeCollectDistinctViewsForSubTree_(subtree){return subtree.fold(function(relativePath,maybeChildSyncPoint,childMap){if(maybeChildSyncPoint&&syncPointHasCompleteView(maybeChildSyncPoint)){var completeView=syncPointGetCompleteView(maybeChildSyncPoint);return[completeView];}else{// No complete view here, flatten any deeper listens into an array\nvar views_1=[];if(maybeChildSyncPoint){views_1=syncPointGetQueryViews(maybeChildSyncPoint);}each(childMap,function(_key,childViews){views_1=views_1.concat(childViews);});return views_1;}});}/**\r\n * Normalizes a query to a query we send the server for listening\r\n *\r\n * @returns The normalized query\r\n */function syncTreeQueryForListening_(query){if(query._queryParams.loadsAllData()&&!query._queryParams.isDefault()){// We treat queries that load all data as default queries\n// Cast is necessary because ref() technically returns Firebase which is actually fb.api.Firebase which inherits\n// from Query\nreturn new(syncTreeGetReferenceConstructor())(query._repo,query._path);}else{return query;}}function syncTreeRemoveTags_(syncTree,queries){for(var j=0;j<queries.length;++j){var removedQuery=queries[j];if(!removedQuery._queryParams.loadsAllData()){// We should have a tag for this\nvar removedQueryKey=syncTreeMakeQueryKey_(removedQuery);var removedQueryTag=syncTree.queryToTagMap.get(removedQueryKey);syncTree.queryToTagMap.delete(removedQueryKey);syncTree.tagToQueryMap.delete(removedQueryTag);}}}/**\r\n * Static accessor for query tags.\r\n */function syncTreeGetNextQueryTag_(){return syncTreeNextQueryTag_++;}/**\r\n * For a given new listen, manage the de-duplication of outstanding subscriptions.\r\n *\r\n * @returns This method can return events to support synchronous data sources\r\n */function syncTreeSetupListener_(syncTree,query,view){var path=query._path;var tag=syncTreeTagForQuery_(syncTree,query);var listener=syncTreeCreateListenerForView_(syncTree,view);var events=syncTree.listenProvider_.startListening(syncTreeQueryForListening_(query),tag,listener.hashFn,listener.onComplete);var subtree=syncTree.syncPointTree_.subtree(path);// The root of this subtree has our query. We're here because we definitely need to send a listen for that, but we\n// may need to shadow other listens as well.\nif(tag){assert(!syncPointHasCompleteView(subtree.value),\"If we're adding a query, it shouldn't be shadowed\");}else{// Shadow everything at or below this location, this is a default listener.\nvar queriesToStop=subtree.fold(function(relativePath,maybeChildSyncPoint,childMap){if(!pathIsEmpty(relativePath)&&maybeChildSyncPoint&&syncPointHasCompleteView(maybeChildSyncPoint)){return[syncPointGetCompleteView(maybeChildSyncPoint).query];}else{// No default listener here, flatten any deeper queries into an array\nvar queries_1=[];if(maybeChildSyncPoint){queries_1=queries_1.concat(syncPointGetQueryViews(maybeChildSyncPoint).map(function(view){return view.query;}));}each(childMap,function(_key,childQueries){queries_1=queries_1.concat(childQueries);});return queries_1;}});for(var i=0;i<queriesToStop.length;++i){var queryToStop=queriesToStop[i];syncTree.listenProvider_.stopListening(syncTreeQueryForListening_(queryToStop),syncTreeTagForQuery_(syncTree,queryToStop));}}return events;}/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */var ExistingValueProvider=/** @class */function(){function ExistingValueProvider(node_){this.node_=node_;}ExistingValueProvider.prototype.getImmediateChild=function(childName){var child=this.node_.getImmediateChild(childName);return new ExistingValueProvider(child);};ExistingValueProvider.prototype.node=function(){return this.node_;};return ExistingValueProvider;}();var DeferredValueProvider=/** @class */function(){function DeferredValueProvider(syncTree,path){this.syncTree_=syncTree;this.path_=path;}DeferredValueProvider.prototype.getImmediateChild=function(childName){var childPath=pathChild(this.path_,childName);return new DeferredValueProvider(this.syncTree_,childPath);};DeferredValueProvider.prototype.node=function(){return syncTreeCalcCompleteEventCache(this.syncTree_,this.path_);};return DeferredValueProvider;}();/**\r\n * Generate placeholders for deferred values.\r\n */var generateWithValues=function(values){values=values||{};values['timestamp']=values['timestamp']||new Date().getTime();return values;};/**\r\n * Value to use when firing local events. When writing server values, fire\r\n * local events with an approximate value, otherwise return value as-is.\r\n */var resolveDeferredLeafValue=function(value,existingVal,serverValues){if(!value||typeof value!=='object'){return value;}assert('.sv'in value,'Unexpected leaf node or priority contents');if(typeof value['.sv']==='string'){return resolveScalarDeferredValue(value['.sv'],existingVal,serverValues);}else if(typeof value['.sv']==='object'){return resolveComplexDeferredValue(value['.sv'],existingVal);}else{assert(false,'Unexpected server value: '+JSON.stringify(value,null,2));}};var resolveScalarDeferredValue=function(op,existing,serverValues){switch(op){case'timestamp':return serverValues['timestamp'];default:assert(false,'Unexpected server value: '+op);}};var resolveComplexDeferredValue=function(op,existing,unused){if(!op.hasOwnProperty('increment')){assert(false,'Unexpected server value: '+JSON.stringify(op,null,2));}var delta=op['increment'];if(typeof delta!=='number'){assert(false,'Unexpected increment value: '+delta);}var existingNode=existing.node();assert(existingNode!==null&&typeof existingNode!=='undefined','Expected ChildrenNode.EMPTY_NODE for nulls');// Incrementing a non-number sets the value to the incremented amount\nif(!existingNode.isLeafNode()){return delta;}var leaf=existingNode;var existingVal=leaf.getValue();if(typeof existingVal!=='number'){return delta;}// No need to do over/underflow arithmetic here because JS only handles floats under the covers\nreturn existingVal+delta;};/**\r\n * Recursively replace all deferred values and priorities in the tree with the\r\n * specified generated replacement values.\r\n * @param path - path to which write is relative\r\n * @param node - new data written at path\r\n * @param syncTree - current data\r\n */var resolveDeferredValueTree=function(path,node,syncTree,serverValues){return resolveDeferredValue(node,new DeferredValueProvider(syncTree,path),serverValues);};/**\r\n * Recursively replace all deferred values and priorities in the node with the\r\n * specified generated replacement values.  If there are no server values in the node,\r\n * it'll be returned as-is.\r\n */var resolveDeferredValueSnapshot=function(node,existing,serverValues){return resolveDeferredValue(node,new ExistingValueProvider(existing),serverValues);};function resolveDeferredValue(node,existingVal,serverValues){var rawPri=node.getPriority().val();var priority=resolveDeferredLeafValue(rawPri,existingVal.getImmediateChild('.priority'),serverValues);var newNode;if(node.isLeafNode()){var leafNode=node;var value=resolveDeferredLeafValue(leafNode.getValue(),existingVal,serverValues);if(value!==leafNode.getValue()||priority!==leafNode.getPriority().val()){return new LeafNode(value,nodeFromJSON(priority));}else{return node;}}else{var childrenNode=node;newNode=childrenNode;if(priority!==childrenNode.getPriority().val()){newNode=newNode.updatePriority(new LeafNode(priority));}childrenNode.forEachChild(PRIORITY_INDEX,function(childName,childNode){var newChildNode=resolveDeferredValue(childNode,existingVal.getImmediateChild(childName),serverValues);if(newChildNode!==childNode){newNode=newNode.updateImmediateChild(childName,newChildNode);}});return newNode;}}/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * A light-weight tree, traversable by path.  Nodes can have both values and children.\r\n * Nodes are not enumerated (by forEachChild) unless they have a value or non-empty\r\n * children.\r\n */var Tree=/** @class */function(){/**\r\n     * @param name - Optional name of the node.\r\n     * @param parent - Optional parent node.\r\n     * @param node - Optional node to wrap.\r\n     */function Tree(name,parent,node){if(name===void 0){name='';}if(parent===void 0){parent=null;}if(node===void 0){node={children:{},childCount:0};}this.name=name;this.parent=parent;this.node=node;}return Tree;}();/**\r\n * Returns a sub-Tree for the given path.\r\n *\r\n * @param pathObj - Path to look up.\r\n * @returns Tree for path.\r\n */function treeSubTree(tree,pathObj){// TODO: Require pathObj to be Path?\nvar path=pathObj instanceof Path?pathObj:new Path(pathObj);var child=tree,next=pathGetFront(path);while(next!==null){var childNode=safeGet(child.node.children,next)||{children:{},childCount:0};child=new Tree(next,child,childNode);path=pathPopFront(path);next=pathGetFront(path);}return child;}/**\r\n * Returns the data associated with this tree node.\r\n *\r\n * @returns The data or null if no data exists.\r\n */function treeGetValue(tree){return tree.node.value;}/**\r\n * Sets data to this tree node.\r\n *\r\n * @param value - Value to set.\r\n */function treeSetValue(tree,value){tree.node.value=value;treeUpdateParents(tree);}/**\r\n * @returns Whether the tree has any children.\r\n */function treeHasChildren(tree){return tree.node.childCount>0;}/**\r\n * @returns Whethe rthe tree is empty (no value or children).\r\n */function treeIsEmpty(tree){return treeGetValue(tree)===undefined&&!treeHasChildren(tree);}/**\r\n * Calls action for each child of this tree node.\r\n *\r\n * @param action - Action to be called for each child.\r\n */function treeForEachChild(tree,action){each(tree.node.children,function(child,childTree){action(new Tree(child,tree,childTree));});}/**\r\n * Does a depth-first traversal of this node's descendants, calling action for each one.\r\n *\r\n * @param action - Action to be called for each child.\r\n * @param includeSelf - Whether to call action on this node as well. Defaults to\r\n *   false.\r\n * @param childrenFirst - Whether to call action on children before calling it on\r\n *   parent.\r\n */function treeForEachDescendant(tree,action,includeSelf,childrenFirst){if(includeSelf&&!childrenFirst){action(tree);}treeForEachChild(tree,function(child){treeForEachDescendant(child,action,true,childrenFirst);});if(includeSelf&&childrenFirst){action(tree);}}/**\r\n * Calls action on each ancestor node.\r\n *\r\n * @param action - Action to be called on each parent; return\r\n *   true to abort.\r\n * @param includeSelf - Whether to call action on this node as well.\r\n * @returns true if the action callback returned true.\r\n */function treeForEachAncestor(tree,action,includeSelf){var node=includeSelf?tree:tree.parent;while(node!==null){if(action(node)){return true;}node=node.parent;}return false;}/**\r\n * @returns The path of this tree node, as a Path.\r\n */function treeGetPath(tree){return new Path(tree.parent===null?tree.name:treeGetPath(tree.parent)+'/'+tree.name);}/**\r\n * Adds or removes this child from its parent based on whether it's empty or not.\r\n */function treeUpdateParents(tree){if(tree.parent!==null){treeUpdateChild(tree.parent,tree.name,tree);}}/**\r\n * Adds or removes the passed child to this tree node, depending on whether it's empty.\r\n *\r\n * @param childName - The name of the child to update.\r\n * @param child - The child to update.\r\n */function treeUpdateChild(tree,childName,child){var childEmpty=treeIsEmpty(child);var childExists=contains(tree.node.children,childName);if(childEmpty&&childExists){delete tree.node.children[childName];tree.node.childCount--;treeUpdateParents(tree);}else if(!childEmpty&&!childExists){tree.node.children[childName]=child.node;tree.node.childCount++;treeUpdateParents(tree);}}/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * True for invalid Firebase keys\r\n */var INVALID_KEY_REGEX_=/[\\[\\].#$\\/\\u0000-\\u001F\\u007F]/;/**\r\n * True for invalid Firebase paths.\r\n * Allows '/' in paths.\r\n */var INVALID_PATH_REGEX_=/[\\[\\].#$\\u0000-\\u001F\\u007F]/;/**\r\n * Maximum number of characters to allow in leaf value\r\n */var MAX_LEAF_SIZE_=10*1024*1024;var isValidKey=function(key){return typeof key==='string'&&key.length!==0&&!INVALID_KEY_REGEX_.test(key);};var isValidPathString=function(pathString){return typeof pathString==='string'&&pathString.length!==0&&!INVALID_PATH_REGEX_.test(pathString);};var isValidRootPathString=function(pathString){if(pathString){// Allow '/.info/' at the beginning.\npathString=pathString.replace(/^\\/*\\.info(\\/|$)/,'/');}return isValidPathString(pathString);};var isValidPriority=function(priority){return priority===null||typeof priority==='string'||typeof priority==='number'&&!isInvalidJSONNumber(priority)||priority&&typeof priority==='object'&&// eslint-disable-next-line @typescript-eslint/no-explicit-any\ncontains(priority,'.sv');};/**\r\n * Pre-validate a datum passed as an argument to Firebase function.\r\n */var validateFirebaseDataArg=function(fnName,value,path,optional){if(optional&&value===undefined){return;}validateFirebaseData(errorPrefix(fnName,'value'),value,path);};/**\r\n * Validate a data object client-side before sending to server.\r\n */var validateFirebaseData=function(errorPrefix,data,path_){var path=path_ instanceof Path?new ValidationPath(path_,errorPrefix):path_;if(data===undefined){throw new Error(errorPrefix+'contains undefined '+validationPathToErrorString(path));}if(typeof data==='function'){throw new Error(errorPrefix+'contains a function '+validationPathToErrorString(path)+' with contents = '+data.toString());}if(isInvalidJSONNumber(data)){throw new Error(errorPrefix+'contains '+data.toString()+' '+validationPathToErrorString(path));}// Check max leaf size, but try to avoid the utf8 conversion if we can.\nif(typeof data==='string'&&data.length>MAX_LEAF_SIZE_/3&&stringLength(data)>MAX_LEAF_SIZE_){throw new Error(errorPrefix+'contains a string greater than '+MAX_LEAF_SIZE_+' utf8 bytes '+validationPathToErrorString(path)+\" ('\"+data.substring(0,50)+\"...')\");}// TODO = Perf = Consider combining the recursive validation of keys into NodeFromJSON\n// to save extra walking of large objects.\nif(data&&typeof data==='object'){var hasDotValue_1=false;var hasActualChild_1=false;each(data,function(key,value){if(key==='.value'){hasDotValue_1=true;}else if(key!=='.priority'&&key!=='.sv'){hasActualChild_1=true;if(!isValidKey(key)){throw new Error(errorPrefix+' contains an invalid key ('+key+') '+validationPathToErrorString(path)+'.  Keys must be non-empty strings '+'and can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\"');}}validationPathPush(path,key);validateFirebaseData(errorPrefix,value,path);validationPathPop(path);});if(hasDotValue_1&&hasActualChild_1){throw new Error(errorPrefix+' contains \".value\" child '+validationPathToErrorString(path)+' in addition to actual children.');}}};/**\r\n * Pre-validate paths passed in the firebase function.\r\n */var validateFirebaseMergePaths=function(errorPrefix,mergePaths){var i,curPath;for(i=0;i<mergePaths.length;i++){curPath=mergePaths[i];var keys=pathSlice(curPath);for(var j=0;j<keys.length;j++){if(keys[j]==='.priority'&&j===keys.length-1);else if(!isValidKey(keys[j])){throw new Error(errorPrefix+'contains an invalid key ('+keys[j]+') in path '+curPath.toString()+'. Keys must be non-empty strings '+'and can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\"');}}}// Check that update keys are not descendants of each other.\n// We rely on the property that sorting guarantees that ancestors come\n// right before descendants.\nmergePaths.sort(pathCompare);var prevPath=null;for(i=0;i<mergePaths.length;i++){curPath=mergePaths[i];if(prevPath!==null&&pathContains(prevPath,curPath)){throw new Error(errorPrefix+'contains a path '+prevPath.toString()+' that is ancestor of another path '+curPath.toString());}prevPath=curPath;}};/**\r\n * pre-validate an object passed as an argument to firebase function (\r\n * must be an object - e.g. for firebase.update()).\r\n */var validateFirebaseMergeDataArg=function(fnName,data,path,optional){if(optional&&data===undefined){return;}var errorPrefix$1=errorPrefix(fnName,'values');if(!(data&&typeof data==='object')||Array.isArray(data)){throw new Error(errorPrefix$1+' must be an object containing the children to replace.');}var mergePaths=[];each(data,function(key,value){var curPath=new Path(key);validateFirebaseData(errorPrefix$1,value,pathChild(path,curPath));if(pathGetBack(curPath)==='.priority'){if(!isValidPriority(value)){throw new Error(errorPrefix$1+\"contains an invalid value for '\"+curPath.toString()+\"', which must be a valid \"+'Firebase priority (a string, finite number, server value, or null).');}}mergePaths.push(curPath);});validateFirebaseMergePaths(errorPrefix$1,mergePaths);};var validatePriority=function(fnName,priority,optional){if(optional&&priority===undefined){return;}if(isInvalidJSONNumber(priority)){throw new Error(errorPrefix(fnName,'priority')+'is '+priority.toString()+', but must be a valid Firebase priority (a string, finite number, '+'server value, or null).');}// Special case to allow importing data with a .sv.\nif(!isValidPriority(priority)){throw new Error(errorPrefix(fnName,'priority')+'must be a valid Firebase priority '+'(a string, finite number, server value, or null).');}};var validateEventType=function(fnName,eventType,optional){if(optional&&eventType===undefined){return;}switch(eventType){case'value':case'child_added':case'child_removed':case'child_changed':case'child_moved':break;default:throw new Error(errorPrefix(fnName,'eventType')+'must be a valid event type = \"value\", \"child_added\", \"child_removed\", '+'\"child_changed\", or \"child_moved\".');}};var validateKey=function(fnName,argumentName,key,optional){if(optional&&key===undefined){return;}if(!isValidKey(key)){throw new Error(errorPrefix(fnName,argumentName)+'was an invalid key = \"'+key+'\".  Firebase keys must be non-empty strings and '+'can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\").');}};var validatePathString=function(fnName,argumentName,pathString,optional){if(optional&&pathString===undefined){return;}if(!isValidPathString(pathString)){throw new Error(errorPrefix(fnName,argumentName)+'was an invalid path = \"'+pathString+'\". Paths must be non-empty strings and '+'can\\'t contain \".\", \"#\", \"$\", \"[\", or \"]\"');}};var validateRootPathString=function(fnName,argumentName,pathString,optional){if(pathString){// Allow '/.info/' at the beginning.\npathString=pathString.replace(/^\\/*\\.info(\\/|$)/,'/');}validatePathString(fnName,argumentName,pathString,optional);};var validateWritablePath=function(fnName,path){if(pathGetFront(path)==='.info'){throw new Error(fnName+\" failed = Can't modify data under /.info/\");}};var validateUrl=function(fnName,parsedUrl){// TODO = Validate server better.\nvar pathString=parsedUrl.path.toString();if(!(typeof parsedUrl.repoInfo.host==='string')||parsedUrl.repoInfo.host.length===0||!isValidKey(parsedUrl.repoInfo.namespace)&&parsedUrl.repoInfo.host.split(':')[0]!=='localhost'||pathString.length!==0&&!isValidRootPathString(pathString)){throw new Error(errorPrefix(fnName,'url')+'must be a valid firebase URL and '+'the path can\\'t contain \".\", \"#\", \"$\", \"[\", or \"]\".');}};var validateBoolean=function(fnName,argumentName,bool,optional){if(optional&&bool===undefined){return;}if(typeof bool!=='boolean'){throw new Error(errorPrefix(fnName,argumentName)+'must be a boolean.');}};/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * The event queue serves a few purposes:\r\n * 1. It ensures we maintain event order in the face of event callbacks doing operations that result in more\r\n *    events being queued.\r\n * 2. raiseQueuedEvents() handles being called reentrantly nicely.  That is, if in the course of raising events,\r\n *    raiseQueuedEvents() is called again, the \"inner\" call will pick up raising events where the \"outer\" call\r\n *    left off, ensuring that the events are still raised synchronously and in order.\r\n * 3. You can use raiseEventsAtPath and raiseEventsForChangedPath to ensure only relevant previously-queued\r\n *    events are raised synchronously.\r\n *\r\n * NOTE: This can all go away if/when we move to async events.\r\n *\r\n */var EventQueue=/** @class */function(){function EventQueue(){this.eventLists_=[];/**\r\n         * Tracks recursion depth of raiseQueuedEvents_, for debugging purposes.\r\n         */this.recursionDepth_=0;}return EventQueue;}();/**\r\n * @param eventDataList - The new events to queue.\r\n */function eventQueueQueueEvents(eventQueue,eventDataList){// We group events by path, storing them in a single EventList, to make it easier to skip over them quickly.\nvar currList=null;for(var i=0;i<eventDataList.length;i++){var data=eventDataList[i];var path=data.getPath();if(currList!==null&&!pathEquals(path,currList.path)){eventQueue.eventLists_.push(currList);currList=null;}if(currList===null){currList={events:[],path:path};}currList.events.push(data);}if(currList){eventQueue.eventLists_.push(currList);}}/**\r\n * Queues the specified events and synchronously raises all events (including previously queued ones)\r\n * for the specified path.\r\n *\r\n * It is assumed that the new events are all for the specified path.\r\n *\r\n * @param path - The path to raise events for.\r\n * @param eventDataList - The new events to raise.\r\n */function eventQueueRaiseEventsAtPath(eventQueue,path,eventDataList){eventQueueQueueEvents(eventQueue,eventDataList);eventQueueRaiseQueuedEventsMatchingPredicate(eventQueue,function(eventPath){return pathEquals(eventPath,path);});}/**\r\n * Queues the specified events and synchronously raises all events (including previously queued ones) for\r\n * locations related to the specified change path (i.e. all ancestors and descendants).\r\n *\r\n * It is assumed that the new events are all related (ancestor or descendant) to the specified path.\r\n *\r\n * @param changedPath - The path to raise events for.\r\n * @param eventDataList - The events to raise\r\n */function eventQueueRaiseEventsForChangedPath(eventQueue,changedPath,eventDataList){eventQueueQueueEvents(eventQueue,eventDataList);eventQueueRaiseQueuedEventsMatchingPredicate(eventQueue,function(eventPath){return pathContains(eventPath,changedPath)||pathContains(changedPath,eventPath);});}function eventQueueRaiseQueuedEventsMatchingPredicate(eventQueue,predicate){eventQueue.recursionDepth_++;var sentAll=true;for(var i=0;i<eventQueue.eventLists_.length;i++){var eventList=eventQueue.eventLists_[i];if(eventList){var eventPath=eventList.path;if(predicate(eventPath)){eventListRaise(eventQueue.eventLists_[i]);eventQueue.eventLists_[i]=null;}else{sentAll=false;}}}if(sentAll){eventQueue.eventLists_=[];}eventQueue.recursionDepth_--;}/**\r\n * Iterates through the list and raises each event\r\n */function eventListRaise(eventList){for(var i=0;i<eventList.events.length;i++){var eventData=eventList.events[i];if(eventData!==null){eventList.events[i]=null;var eventFn=eventData.getEventRunner();if(logger){log('event: '+eventData.toString());}exceptionGuard(eventFn);}}}/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */var INTERRUPT_REASON='repo_interrupt';/**\r\n * If a transaction does not succeed after 25 retries, we abort it. Among other\r\n * things this ensure that if there's ever a bug causing a mismatch between\r\n * client / server hashes for some data, we won't retry indefinitely.\r\n */var MAX_TRANSACTION_RETRIES=25;/**\r\n * A connection to a single data repository.\r\n */var Repo=/** @class */function(){function Repo(repoInfo_,forceRestClient_,authTokenProvider_,appCheckProvider_){this.repoInfo_=repoInfo_;this.forceRestClient_=forceRestClient_;this.authTokenProvider_=authTokenProvider_;this.appCheckProvider_=appCheckProvider_;this.dataUpdateCount=0;this.statsListener_=null;this.eventQueue_=new EventQueue();this.nextWriteId_=1;this.interceptServerDataCallback_=null;/** A list of data pieces and paths to be set when this client disconnects. */this.onDisconnect_=newSparseSnapshotTree();/** Stores queues of outstanding transactions for Firebase locations. */this.transactionQueueTree_=new Tree();// TODO: This should be @private but it's used by test_access.js and internal.js\nthis.persistentConnection_=null;// This key is intentionally not updated if RepoInfo is later changed or replaced\nthis.key=this.repoInfo_.toURLString();}/**\r\n     * @returns The URL corresponding to the root of this Firebase.\r\n     */Repo.prototype.toString=function(){return(this.repoInfo_.secure?'https://':'http://')+this.repoInfo_.host;};return Repo;}();function repoStart(repo,appId,authOverride){repo.stats_=statsManagerGetCollection(repo.repoInfo_);if(repo.forceRestClient_||beingCrawled()){repo.server_=new ReadonlyRestClient(repo.repoInfo_,function(pathString,data,isMerge,tag){repoOnDataUpdate(repo,pathString,data,isMerge,tag);},repo.authTokenProvider_,repo.appCheckProvider_);// Minor hack: Fire onConnect immediately, since there's no actual connection.\nsetTimeout(function(){return repoOnConnectStatus(repo,/* connectStatus= */true);},0);}else{// Validate authOverride\nif(typeof authOverride!=='undefined'&&authOverride!==null){if(typeof authOverride!=='object'){throw new Error('Only objects are supported for option databaseAuthVariableOverride');}try{stringify(authOverride);}catch(e){throw new Error('Invalid authOverride provided: '+e);}}repo.persistentConnection_=new PersistentConnection(repo.repoInfo_,appId,function(pathString,data,isMerge,tag){repoOnDataUpdate(repo,pathString,data,isMerge,tag);},function(connectStatus){repoOnConnectStatus(repo,connectStatus);},function(updates){repoOnServerInfoUpdate(repo,updates);},repo.authTokenProvider_,repo.appCheckProvider_,authOverride);repo.server_=repo.persistentConnection_;}repo.authTokenProvider_.addTokenChangeListener(function(token){repo.server_.refreshAuthToken(token);});repo.appCheckProvider_.addTokenChangeListener(function(result){repo.server_.refreshAppCheckToken(result.token);});// In the case of multiple Repos for the same repoInfo (i.e. there are multiple Firebase.Contexts being used),\n// we only want to create one StatsReporter.  As such, we'll report stats over the first Repo created.\nrepo.statsReporter_=statsManagerGetOrCreateReporter(repo.repoInfo_,function(){return new StatsReporter(repo.stats_,repo.server_);});// Used for .info.\nrepo.infoData_=new SnapshotHolder();repo.infoSyncTree_=new SyncTree({startListening:function(query,tag,currentHashFn,onComplete){var infoEvents=[];var node=repo.infoData_.getNode(query._path);// This is possibly a hack, but we have different semantics for .info endpoints. We don't raise null events\n// on initial data...\nif(!node.isEmpty()){infoEvents=syncTreeApplyServerOverwrite(repo.infoSyncTree_,query._path,node);setTimeout(function(){onComplete('ok');},0);}return infoEvents;},stopListening:function(){}});repoUpdateInfo(repo,'connected',false);repo.serverSyncTree_=new SyncTree({startListening:function(query,tag,currentHashFn,onComplete){repo.server_.listen(query,currentHashFn,tag,function(status,data){var events=onComplete(status,data);eventQueueRaiseEventsForChangedPath(repo.eventQueue_,query._path,events);});// No synchronous events for network-backed sync trees\nreturn[];},stopListening:function(query,tag){repo.server_.unlisten(query,tag);}});}/**\r\n * @returns The time in milliseconds, taking the server offset into account if we have one.\r\n */function repoServerTime(repo){var offsetNode=repo.infoData_.getNode(new Path('.info/serverTimeOffset'));var offset=offsetNode.val()||0;return new Date().getTime()+offset;}/**\r\n * Generate ServerValues using some variables from the repo object.\r\n */function repoGenerateServerValues(repo){return generateWithValues({timestamp:repoServerTime(repo)});}/**\r\n * Called by realtime when we get new messages from the server.\r\n */function repoOnDataUpdate(repo,pathString,data,isMerge,tag){// For testing.\nrepo.dataUpdateCount++;var path=new Path(pathString);data=repo.interceptServerDataCallback_?repo.interceptServerDataCallback_(pathString,data):data;var events=[];if(tag){if(isMerge){var taggedChildren=map(data,function(raw){return nodeFromJSON(raw);});events=syncTreeApplyTaggedQueryMerge(repo.serverSyncTree_,path,taggedChildren,tag);}else{var taggedSnap=nodeFromJSON(data);events=syncTreeApplyTaggedQueryOverwrite(repo.serverSyncTree_,path,taggedSnap,tag);}}else if(isMerge){var changedChildren=map(data,function(raw){return nodeFromJSON(raw);});events=syncTreeApplyServerMerge(repo.serverSyncTree_,path,changedChildren);}else{var snap=nodeFromJSON(data);events=syncTreeApplyServerOverwrite(repo.serverSyncTree_,path,snap);}var affectedPath=path;if(events.length>0){// Since we have a listener outstanding for each transaction, receiving any events\n// is a proxy for some change having occurred.\naffectedPath=repoRerunTransactions(repo,path);}eventQueueRaiseEventsForChangedPath(repo.eventQueue_,affectedPath,events);}// TODO: This should be @private but it's used by test_access.js and internal.js\nfunction repoInterceptServerData(repo,callback){repo.interceptServerDataCallback_=callback;}function repoOnConnectStatus(repo,connectStatus){repoUpdateInfo(repo,'connected',connectStatus);if(connectStatus===false){repoRunOnDisconnectEvents(repo);}}function repoOnServerInfoUpdate(repo,updates){each(updates,function(key,value){repoUpdateInfo(repo,key,value);});}function repoUpdateInfo(repo,pathString,value){var path=new Path('/.info/'+pathString);var newNode=nodeFromJSON(value);repo.infoData_.updateSnapshot(path,newNode);var events=syncTreeApplyServerOverwrite(repo.infoSyncTree_,path,newNode);eventQueueRaiseEventsForChangedPath(repo.eventQueue_,path,events);}function repoGetNextWriteId(repo){return repo.nextWriteId_++;}/**\r\n * The purpose of `getValue` is to return the latest known value\r\n * satisfying `query`.\r\n *\r\n * This method will first check for in-memory cached values\r\n * belonging to active listeners. If they are found, such values\r\n * are considered to be the most up-to-date.\r\n *\r\n * If the client is not connected, this method will try to\r\n * establish a connection and request the value for `query`. If\r\n * the client is not able to retrieve the query result, it reports\r\n * an error.\r\n *\r\n * @param query - The query to surface a value for.\r\n */function repoGetValue(repo,query){// Only active queries are cached. There is no persisted cache.\nvar cached=syncTreeGetServerValue(repo.serverSyncTree_,query);if(cached!=null){return Promise.resolve(cached);}return repo.server_.get(query).then(function(payload){var node=nodeFromJSON(payload).withIndex(query._queryParams.getIndex());var events=syncTreeApplyServerOverwrite(repo.serverSyncTree_,query._path,node);eventQueueRaiseEventsAtPath(repo.eventQueue_,query._path,events);return Promise.resolve(node);},function(err){repoLog(repo,'get for query '+stringify(query)+' failed: '+err);return Promise.reject(new Error(err));});}function repoSetWithPriority(repo,path,newVal,newPriority,onComplete){repoLog(repo,'set',{path:path.toString(),value:newVal,priority:newPriority});// TODO: Optimize this behavior to either (a) store flag to skip resolving where possible and / or\n// (b) store unresolved paths on JSON parse\nvar serverValues=repoGenerateServerValues(repo);var newNodeUnresolved=nodeFromJSON(newVal,newPriority);var existing=syncTreeCalcCompleteEventCache(repo.serverSyncTree_,path);var newNode=resolveDeferredValueSnapshot(newNodeUnresolved,existing,serverValues);var writeId=repoGetNextWriteId(repo);var events=syncTreeApplyUserOverwrite(repo.serverSyncTree_,path,newNode,writeId,true);eventQueueQueueEvents(repo.eventQueue_,events);repo.server_.put(path.toString(),newNodeUnresolved.val(/*export=*/true),function(status,errorReason){var success=status==='ok';if(!success){warn('set at '+path+' failed: '+status);}var clearEvents=syncTreeAckUserWrite(repo.serverSyncTree_,writeId,!success);eventQueueRaiseEventsForChangedPath(repo.eventQueue_,path,clearEvents);repoCallOnCompleteCallback(repo,onComplete,status,errorReason);});var affectedPath=repoAbortTransactions(repo,path);repoRerunTransactions(repo,affectedPath);// We queued the events above, so just flush the queue here\neventQueueRaiseEventsForChangedPath(repo.eventQueue_,affectedPath,[]);}function repoUpdate(repo,path,childrenToMerge,onComplete){repoLog(repo,'update',{path:path.toString(),value:childrenToMerge});// Start with our existing data and merge each child into it.\nvar empty=true;var serverValues=repoGenerateServerValues(repo);var changedChildren={};each(childrenToMerge,function(changedKey,changedValue){empty=false;changedChildren[changedKey]=resolveDeferredValueTree(pathChild(path,changedKey),nodeFromJSON(changedValue),repo.serverSyncTree_,serverValues);});if(!empty){var writeId_1=repoGetNextWriteId(repo);var events=syncTreeApplyUserMerge(repo.serverSyncTree_,path,changedChildren,writeId_1);eventQueueQueueEvents(repo.eventQueue_,events);repo.server_.merge(path.toString(),childrenToMerge,function(status,errorReason){var success=status==='ok';if(!success){warn('update at '+path+' failed: '+status);}var clearEvents=syncTreeAckUserWrite(repo.serverSyncTree_,writeId_1,!success);var affectedPath=clearEvents.length>0?repoRerunTransactions(repo,path):path;eventQueueRaiseEventsForChangedPath(repo.eventQueue_,affectedPath,clearEvents);repoCallOnCompleteCallback(repo,onComplete,status,errorReason);});each(childrenToMerge,function(changedPath){var affectedPath=repoAbortTransactions(repo,pathChild(path,changedPath));repoRerunTransactions(repo,affectedPath);});// We queued the events above, so just flush the queue here\neventQueueRaiseEventsForChangedPath(repo.eventQueue_,path,[]);}else{log(\"update() called with empty data.  Don't do anything.\");repoCallOnCompleteCallback(repo,onComplete,'ok',undefined);}}/**\r\n * Applies all of the changes stored up in the onDisconnect_ tree.\r\n */function repoRunOnDisconnectEvents(repo){repoLog(repo,'onDisconnectEvents');var serverValues=repoGenerateServerValues(repo);var resolvedOnDisconnectTree=newSparseSnapshotTree();sparseSnapshotTreeForEachTree(repo.onDisconnect_,newEmptyPath(),function(path,node){var resolved=resolveDeferredValueTree(path,node,repo.serverSyncTree_,serverValues);sparseSnapshotTreeRemember(resolvedOnDisconnectTree,path,resolved);});var events=[];sparseSnapshotTreeForEachTree(resolvedOnDisconnectTree,newEmptyPath(),function(path,snap){events=events.concat(syncTreeApplyServerOverwrite(repo.serverSyncTree_,path,snap));var affectedPath=repoAbortTransactions(repo,path);repoRerunTransactions(repo,affectedPath);});repo.onDisconnect_=newSparseSnapshotTree();eventQueueRaiseEventsForChangedPath(repo.eventQueue_,newEmptyPath(),events);}function repoOnDisconnectCancel(repo,path,onComplete){repo.server_.onDisconnectCancel(path.toString(),function(status,errorReason){if(status==='ok'){sparseSnapshotTreeForget(repo.onDisconnect_,path);}repoCallOnCompleteCallback(repo,onComplete,status,errorReason);});}function repoOnDisconnectSet(repo,path,value,onComplete){var newNode=nodeFromJSON(value);repo.server_.onDisconnectPut(path.toString(),newNode.val(/*export=*/true),function(status,errorReason){if(status==='ok'){sparseSnapshotTreeRemember(repo.onDisconnect_,path,newNode);}repoCallOnCompleteCallback(repo,onComplete,status,errorReason);});}function repoOnDisconnectSetWithPriority(repo,path,value,priority,onComplete){var newNode=nodeFromJSON(value,priority);repo.server_.onDisconnectPut(path.toString(),newNode.val(/*export=*/true),function(status,errorReason){if(status==='ok'){sparseSnapshotTreeRemember(repo.onDisconnect_,path,newNode);}repoCallOnCompleteCallback(repo,onComplete,status,errorReason);});}function repoOnDisconnectUpdate(repo,path,childrenToMerge,onComplete){if(isEmpty(childrenToMerge)){log(\"onDisconnect().update() called with empty data.  Don't do anything.\");repoCallOnCompleteCallback(repo,onComplete,'ok',undefined);return;}repo.server_.onDisconnectMerge(path.toString(),childrenToMerge,function(status,errorReason){if(status==='ok'){each(childrenToMerge,function(childName,childNode){var newChildNode=nodeFromJSON(childNode);sparseSnapshotTreeRemember(repo.onDisconnect_,pathChild(path,childName),newChildNode);});}repoCallOnCompleteCallback(repo,onComplete,status,errorReason);});}function repoAddEventCallbackForQuery(repo,query,eventRegistration){var events;if(pathGetFront(query._path)==='.info'){events=syncTreeAddEventRegistration(repo.infoSyncTree_,query,eventRegistration);}else{events=syncTreeAddEventRegistration(repo.serverSyncTree_,query,eventRegistration);}eventQueueRaiseEventsAtPath(repo.eventQueue_,query._path,events);}function repoRemoveEventCallbackForQuery(repo,query,eventRegistration){// These are guaranteed not to raise events, since we're not passing in a cancelError. However, we can future-proof\n// a little bit by handling the return values anyways.\nvar events;if(pathGetFront(query._path)==='.info'){events=syncTreeRemoveEventRegistration(repo.infoSyncTree_,query,eventRegistration);}else{events=syncTreeRemoveEventRegistration(repo.serverSyncTree_,query,eventRegistration);}eventQueueRaiseEventsAtPath(repo.eventQueue_,query._path,events);}function repoInterrupt(repo){if(repo.persistentConnection_){repo.persistentConnection_.interrupt(INTERRUPT_REASON);}}function repoResume(repo){if(repo.persistentConnection_){repo.persistentConnection_.resume(INTERRUPT_REASON);}}function repoStats(repo,showDelta){if(showDelta===void 0){showDelta=false;}if(typeof console==='undefined'){return;}var stats;if(showDelta){if(!repo.statsListener_){repo.statsListener_=new StatsListener(repo.stats_);}stats=repo.statsListener_.get();}else{stats=repo.stats_.get();}var longestName=Object.keys(stats).reduce(function(previousValue,currentValue){return Math.max(currentValue.length,previousValue);},0);each(stats,function(stat,value){var paddedStat=stat;// pad stat names to be the same length (plus 2 extra spaces).\nfor(var i=stat.length;i<longestName+2;i++){paddedStat+=' ';}console.log(paddedStat+value);});}function repoStatsIncrementCounter(repo,metric){repo.stats_.incrementCounter(metric);statsReporterIncludeStat(repo.statsReporter_,metric);}function repoLog(repo){var varArgs=[];for(var _i=1;_i<arguments.length;_i++){varArgs[_i-1]=arguments[_i];}var prefix='';if(repo.persistentConnection_){prefix=repo.persistentConnection_.id+':';}log.apply(void 0,__spreadArray([prefix],__read(varArgs)));}function repoCallOnCompleteCallback(repo,callback,status,errorReason){if(callback){exceptionGuard(function(){if(status==='ok'){callback(null);}else{var code=(status||'error').toUpperCase();var message=code;if(errorReason){message+=': '+errorReason;}var error=new Error(message);// eslint-disable-next-line @typescript-eslint/no-explicit-any\nerror.code=code;callback(error);}});}}/**\r\n * Creates a new transaction, adds it to the transactions we're tracking, and\r\n * sends it to the server if possible.\r\n *\r\n * @param path - Path at which to do transaction.\r\n * @param transactionUpdate - Update callback.\r\n * @param onComplete - Completion callback.\r\n * @param unwatcher - Function that will be called when the transaction no longer\r\n * need data updates for `path`.\r\n * @param applyLocally - Whether or not to make intermediate results visible\r\n */function repoStartTransaction(repo,path,transactionUpdate,onComplete,unwatcher,applyLocally){repoLog(repo,'transaction on '+path);// Initialize transaction.\nvar transaction={path:path,update:transactionUpdate,onComplete:onComplete,// One of TransactionStatus enums.\nstatus:null,// Used when combining transactions at different locations to figure out\n// which one goes first.\norder:LUIDGenerator(),// Whether to raise local events for this transaction.\napplyLocally:applyLocally,// Count of how many times we've retried the transaction.\nretryCount:0,// Function to call to clean up our .on() listener.\nunwatcher:unwatcher,// Stores why a transaction was aborted.\nabortReason:null,currentWriteId:null,currentInputSnapshot:null,currentOutputSnapshotRaw:null,currentOutputSnapshotResolved:null};// Run transaction initially.\nvar currentState=repoGetLatestState(repo,path,undefined);transaction.currentInputSnapshot=currentState;var newVal=transaction.update(currentState.val());if(newVal===undefined){// Abort transaction.\ntransaction.unwatcher();transaction.currentOutputSnapshotRaw=null;transaction.currentOutputSnapshotResolved=null;if(transaction.onComplete){transaction.onComplete(null,false,transaction.currentInputSnapshot);}}else{validateFirebaseData('transaction failed: Data returned ',newVal,transaction.path);// Mark as run and add to our queue.\ntransaction.status=0/* RUN */;var queueNode=treeSubTree(repo.transactionQueueTree_,path);var nodeQueue=treeGetValue(queueNode)||[];nodeQueue.push(transaction);treeSetValue(queueNode,nodeQueue);// Update visibleData and raise events\n// Note: We intentionally raise events after updating all of our\n// transaction state, since the user could start new transactions from the\n// event callbacks.\nvar priorityForNode=void 0;if(typeof newVal==='object'&&newVal!==null&&contains(newVal,'.priority')){// eslint-disable-next-line @typescript-eslint/no-explicit-any\npriorityForNode=safeGet(newVal,'.priority');assert(isValidPriority(priorityForNode),'Invalid priority returned by transaction. '+'Priority must be a valid string, finite number, server value, or null.');}else{var currentNode=syncTreeCalcCompleteEventCache(repo.serverSyncTree_,path)||ChildrenNode.EMPTY_NODE;priorityForNode=currentNode.getPriority().val();}var serverValues=repoGenerateServerValues(repo);var newNodeUnresolved=nodeFromJSON(newVal,priorityForNode);var newNode=resolveDeferredValueSnapshot(newNodeUnresolved,currentState,serverValues);transaction.currentOutputSnapshotRaw=newNodeUnresolved;transaction.currentOutputSnapshotResolved=newNode;transaction.currentWriteId=repoGetNextWriteId(repo);var events=syncTreeApplyUserOverwrite(repo.serverSyncTree_,path,newNode,transaction.currentWriteId,transaction.applyLocally);eventQueueRaiseEventsForChangedPath(repo.eventQueue_,path,events);repoSendReadyTransactions(repo,repo.transactionQueueTree_);}}/**\r\n * @param excludeSets - A specific set to exclude\r\n */function repoGetLatestState(repo,path,excludeSets){return syncTreeCalcCompleteEventCache(repo.serverSyncTree_,path,excludeSets)||ChildrenNode.EMPTY_NODE;}/**\r\n * Sends any already-run transactions that aren't waiting for outstanding\r\n * transactions to complete.\r\n *\r\n * Externally it's called with no arguments, but it calls itself recursively\r\n * with a particular transactionQueueTree node to recurse through the tree.\r\n *\r\n * @param node - transactionQueueTree node to start at.\r\n */function repoSendReadyTransactions(repo,node){if(node===void 0){node=repo.transactionQueueTree_;}// Before recursing, make sure any completed transactions are removed.\nif(!node){repoPruneCompletedTransactionsBelowNode(repo,node);}if(treeGetValue(node)){var queue=repoBuildTransactionQueue(repo,node);assert(queue.length>0,'Sending zero length transaction queue');var allRun=queue.every(function(transaction){return transaction.status===0/* RUN */;});// If they're all run (and not sent), we can send them.  Else, we must wait.\nif(allRun){repoSendTransactionQueue(repo,treeGetPath(node),queue);}}else if(treeHasChildren(node)){treeForEachChild(node,function(childNode){repoSendReadyTransactions(repo,childNode);});}}/**\r\n * Given a list of run transactions, send them to the server and then handle\r\n * the result (success or failure).\r\n *\r\n * @param path - The location of the queue.\r\n * @param queue - Queue of transactions under the specified location.\r\n */function repoSendTransactionQueue(repo,path,queue){// Mark transactions as sent and increment retry count!\nvar setsToIgnore=queue.map(function(txn){return txn.currentWriteId;});var latestState=repoGetLatestState(repo,path,setsToIgnore);var snapToSend=latestState;var latestHash=latestState.hash();for(var i=0;i<queue.length;i++){var txn=queue[i];assert(txn.status===0/* RUN */,'tryToSendTransactionQueue_: items in queue should all be run.');txn.status=1/* SENT */;txn.retryCount++;var relativePath=newRelativePath(path,txn.path);// If we've gotten to this point, the output snapshot must be defined.\nsnapToSend=snapToSend.updateChild(relativePath/** @type {!Node} */,txn.currentOutputSnapshotRaw);}var dataToSend=snapToSend.val(true);var pathToSend=path;// Send the put.\nrepo.server_.put(pathToSend.toString(),dataToSend,function(status){repoLog(repo,'transaction put response',{path:pathToSend.toString(),status:status});var events=[];if(status==='ok'){// Queue up the callbacks and fire them after cleaning up all of our\n// transaction state, since the callback could trigger more\n// transactions or sets.\nvar callbacks=[];var _loop_1=function(i){queue[i].status=2/* COMPLETED */;events=events.concat(syncTreeAckUserWrite(repo.serverSyncTree_,queue[i].currentWriteId));if(queue[i].onComplete){// We never unset the output snapshot, and given that this\n// transaction is complete, it should be set\ncallbacks.push(function(){return queue[i].onComplete(null,true,queue[i].currentOutputSnapshotResolved);});}queue[i].unwatcher();};for(var i=0;i<queue.length;i++){_loop_1(i);}// Now remove the completed transactions.\nrepoPruneCompletedTransactionsBelowNode(repo,treeSubTree(repo.transactionQueueTree_,path));// There may be pending transactions that we can now send.\nrepoSendReadyTransactions(repo,repo.transactionQueueTree_);eventQueueRaiseEventsForChangedPath(repo.eventQueue_,path,events);// Finally, trigger onComplete callbacks.\nfor(var i=0;i<callbacks.length;i++){exceptionGuard(callbacks[i]);}}else{// transactions are no longer sent.  Update their status appropriately.\nif(status==='datastale'){for(var i=0;i<queue.length;i++){if(queue[i].status===3/* SENT_NEEDS_ABORT */){queue[i].status=4/* NEEDS_ABORT */;}else{queue[i].status=0/* RUN */;}}}else{warn('transaction at '+pathToSend.toString()+' failed: '+status);for(var i=0;i<queue.length;i++){queue[i].status=4/* NEEDS_ABORT */;queue[i].abortReason=status;}}repoRerunTransactions(repo,path);}},latestHash);}/**\r\n * Finds all transactions dependent on the data at changedPath and reruns them.\r\n *\r\n * Should be called any time cached data changes.\r\n *\r\n * Return the highest path that was affected by rerunning transactions. This\r\n * is the path at which events need to be raised for.\r\n *\r\n * @param changedPath - The path in mergedData that changed.\r\n * @returns The rootmost path that was affected by rerunning transactions.\r\n */function repoRerunTransactions(repo,changedPath){var rootMostTransactionNode=repoGetAncestorTransactionNode(repo,changedPath);var path=treeGetPath(rootMostTransactionNode);var queue=repoBuildTransactionQueue(repo,rootMostTransactionNode);repoRerunTransactionQueue(repo,queue,path);return path;}/**\r\n * Does all the work of rerunning transactions (as well as cleans up aborted\r\n * transactions and whatnot).\r\n *\r\n * @param queue - The queue of transactions to run.\r\n * @param path - The path the queue is for.\r\n */function repoRerunTransactionQueue(repo,queue,path){if(queue.length===0){return;// Nothing to do!\n}// Queue up the callbacks and fire them after cleaning up all of our\n// transaction state, since the callback could trigger more transactions or\n// sets.\nvar callbacks=[];var events=[];// Ignore all of the sets we're going to re-run.\nvar txnsToRerun=queue.filter(function(q){return q.status===0/* RUN */;});var setsToIgnore=txnsToRerun.map(function(q){return q.currentWriteId;});var _loop_2=function(i){var transaction=queue[i];var relativePath=newRelativePath(path,transaction.path);var abortTransaction=false,abortReason;assert(relativePath!==null,'rerunTransactionsUnderNode_: relativePath should not be null.');if(transaction.status===4/* NEEDS_ABORT */){abortTransaction=true;abortReason=transaction.abortReason;events=events.concat(syncTreeAckUserWrite(repo.serverSyncTree_,transaction.currentWriteId,true));}else if(transaction.status===0/* RUN */){if(transaction.retryCount>=MAX_TRANSACTION_RETRIES){abortTransaction=true;abortReason='maxretry';events=events.concat(syncTreeAckUserWrite(repo.serverSyncTree_,transaction.currentWriteId,true));}else{// This code reruns a transaction\nvar currentNode=repoGetLatestState(repo,transaction.path,setsToIgnore);transaction.currentInputSnapshot=currentNode;var newData=queue[i].update(currentNode.val());if(newData!==undefined){validateFirebaseData('transaction failed: Data returned ',newData,transaction.path);var newDataNode=nodeFromJSON(newData);var hasExplicitPriority=typeof newData==='object'&&newData!=null&&contains(newData,'.priority');if(!hasExplicitPriority){// Keep the old priority if there wasn't a priority explicitly specified.\nnewDataNode=newDataNode.updatePriority(currentNode.getPriority());}var oldWriteId=transaction.currentWriteId;var serverValues=repoGenerateServerValues(repo);var newNodeResolved=resolveDeferredValueSnapshot(newDataNode,currentNode,serverValues);transaction.currentOutputSnapshotRaw=newDataNode;transaction.currentOutputSnapshotResolved=newNodeResolved;transaction.currentWriteId=repoGetNextWriteId(repo);// Mutates setsToIgnore in place\nsetsToIgnore.splice(setsToIgnore.indexOf(oldWriteId),1);events=events.concat(syncTreeApplyUserOverwrite(repo.serverSyncTree_,transaction.path,newNodeResolved,transaction.currentWriteId,transaction.applyLocally));events=events.concat(syncTreeAckUserWrite(repo.serverSyncTree_,oldWriteId,true));}else{abortTransaction=true;abortReason='nodata';events=events.concat(syncTreeAckUserWrite(repo.serverSyncTree_,transaction.currentWriteId,true));}}}eventQueueRaiseEventsForChangedPath(repo.eventQueue_,path,events);events=[];if(abortTransaction){// Abort.\nqueue[i].status=2/* COMPLETED */;// Removing a listener can trigger pruning which can muck with\n// mergedData/visibleData (as it prunes data). So defer the unwatcher\n// until we're done.\n(function(unwatcher){setTimeout(unwatcher,Math.floor(0));})(queue[i].unwatcher);if(queue[i].onComplete){if(abortReason==='nodata'){callbacks.push(function(){return queue[i].onComplete(null,false,queue[i].currentInputSnapshot);});}else{callbacks.push(function(){return queue[i].onComplete(new Error(abortReason),false,null);});}}}};for(var i=0;i<queue.length;i++){_loop_2(i);}// Clean up completed transactions.\nrepoPruneCompletedTransactionsBelowNode(repo,repo.transactionQueueTree_);// Now fire callbacks, now that we're in a good, known state.\nfor(var i=0;i<callbacks.length;i++){exceptionGuard(callbacks[i]);}// Try to send the transaction result to the server.\nrepoSendReadyTransactions(repo,repo.transactionQueueTree_);}/**\r\n * Returns the rootmost ancestor node of the specified path that has a pending\r\n * transaction on it, or just returns the node for the given path if there are\r\n * no pending transactions on any ancestor.\r\n *\r\n * @param path - The location to start at.\r\n * @returns The rootmost node with a transaction.\r\n */function repoGetAncestorTransactionNode(repo,path){var front;// Start at the root and walk deeper into the tree towards path until we\n// find a node with pending transactions.\nvar transactionNode=repo.transactionQueueTree_;front=pathGetFront(path);while(front!==null&&treeGetValue(transactionNode)===undefined){transactionNode=treeSubTree(transactionNode,front);path=pathPopFront(path);front=pathGetFront(path);}return transactionNode;}/**\r\n * Builds the queue of all transactions at or below the specified\r\n * transactionNode.\r\n *\r\n * @param transactionNode\r\n * @returns The generated queue.\r\n */function repoBuildTransactionQueue(repo,transactionNode){// Walk any child transaction queues and aggregate them into a single queue.\nvar transactionQueue=[];repoAggregateTransactionQueuesForNode(repo,transactionNode,transactionQueue);// Sort them by the order the transactions were created.\ntransactionQueue.sort(function(a,b){return a.order-b.order;});return transactionQueue;}function repoAggregateTransactionQueuesForNode(repo,node,queue){var nodeQueue=treeGetValue(node);if(nodeQueue){for(var i=0;i<nodeQueue.length;i++){queue.push(nodeQueue[i]);}}treeForEachChild(node,function(child){repoAggregateTransactionQueuesForNode(repo,child,queue);});}/**\r\n * Remove COMPLETED transactions at or below this node in the transactionQueueTree_.\r\n */function repoPruneCompletedTransactionsBelowNode(repo,node){var queue=treeGetValue(node);if(queue){var to=0;for(var from=0;from<queue.length;from++){if(queue[from].status!==2/* COMPLETED */){queue[to]=queue[from];to++;}}queue.length=to;treeSetValue(node,queue.length>0?queue:undefined);}treeForEachChild(node,function(childNode){repoPruneCompletedTransactionsBelowNode(repo,childNode);});}/**\r\n * Aborts all transactions on ancestors or descendants of the specified path.\r\n * Called when doing a set() or update() since we consider them incompatible\r\n * with transactions.\r\n *\r\n * @param path - Path for which we want to abort related transactions.\r\n */function repoAbortTransactions(repo,path){var affectedPath=treeGetPath(repoGetAncestorTransactionNode(repo,path));var transactionNode=treeSubTree(repo.transactionQueueTree_,path);treeForEachAncestor(transactionNode,function(node){repoAbortTransactionsOnNode(repo,node);});repoAbortTransactionsOnNode(repo,transactionNode);treeForEachDescendant(transactionNode,function(node){repoAbortTransactionsOnNode(repo,node);});return affectedPath;}/**\r\n * Abort transactions stored in this transaction queue node.\r\n *\r\n * @param node - Node to abort transactions for.\r\n */function repoAbortTransactionsOnNode(repo,node){var queue=treeGetValue(node);if(queue){// Queue up the callbacks and fire them after cleaning up all of our\n// transaction state, since the callback could trigger more transactions\n// or sets.\nvar callbacks=[];// Go through queue.  Any already-sent transactions must be marked for\n// abort, while the unsent ones can be immediately aborted and removed.\nvar events=[];var lastSent=-1;for(var i=0;i<queue.length;i++){if(queue[i].status===3/* SENT_NEEDS_ABORT */);else if(queue[i].status===1/* SENT */){assert(lastSent===i-1,'All SENT items should be at beginning of queue.');lastSent=i;// Mark transaction for abort when it comes back.\nqueue[i].status=3/* SENT_NEEDS_ABORT */;queue[i].abortReason='set';}else{assert(queue[i].status===0/* RUN */,'Unexpected transaction status in abort');// We can abort it immediately.\nqueue[i].unwatcher();events=events.concat(syncTreeAckUserWrite(repo.serverSyncTree_,queue[i].currentWriteId,true));if(queue[i].onComplete){callbacks.push(queue[i].onComplete.bind(null,new Error('set'),false,null));}}}if(lastSent===-1){// We're not waiting for any sent transactions.  We can clear the queue.\ntreeSetValue(node,undefined);}else{// Remove the transactions we aborted.\nqueue.length=lastSent+1;}// Now fire the callbacks.\neventQueueRaiseEventsForChangedPath(repo.eventQueue_,treeGetPath(node),events);for(var i=0;i<callbacks.length;i++){exceptionGuard(callbacks[i]);}}}/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */function decodePath(pathString){var pathStringDecoded='';var pieces=pathString.split('/');for(var i=0;i<pieces.length;i++){if(pieces[i].length>0){var piece=pieces[i];try{piece=decodeURIComponent(piece.replace(/\\+/g,' '));}catch(e){}pathStringDecoded+='/'+piece;}}return pathStringDecoded;}/**\r\n * @returns key value hash\r\n */function decodeQuery(queryString){var e_1,_a;var results={};if(queryString.charAt(0)==='?'){queryString=queryString.substring(1);}try{for(var _b=__values(queryString.split('&')),_c=_b.next();!_c.done;_c=_b.next()){var segment=_c.value;if(segment.length===0){continue;}var kv=segment.split('=');if(kv.length===2){results[decodeURIComponent(kv[0])]=decodeURIComponent(kv[1]);}else{warn(\"Invalid query segment '\"+segment+\"' in query '\"+queryString+\"'\");}}}catch(e_1_1){e_1={error:e_1_1};}finally{try{if(_c&&!_c.done&&(_a=_b.return))_a.call(_b);}finally{if(e_1)throw e_1.error;}}return results;}var parseRepoInfo=function(dataURL,nodeAdmin){var parsedUrl=parseDatabaseURL(dataURL),namespace=parsedUrl.namespace;if(parsedUrl.domain==='firebase.com'){fatal(parsedUrl.host+' is no longer supported. '+'Please use <YOUR FIREBASE>.firebaseio.com instead');}// Catch common error of uninitialized namespace value.\nif((!namespace||namespace==='undefined')&&parsedUrl.domain!=='localhost'){fatal('Cannot parse Firebase url. Please use https://<YOUR FIREBASE>.firebaseio.com');}if(!parsedUrl.secure){warnIfPageIsSecure();}var webSocketOnly=parsedUrl.scheme==='ws'||parsedUrl.scheme==='wss';return{repoInfo:new RepoInfo(parsedUrl.host,parsedUrl.secure,namespace,nodeAdmin,webSocketOnly,/*persistenceKey=*/'',/*includeNamespaceInQueryParams=*/namespace!==parsedUrl.subdomain),path:new Path(parsedUrl.pathString)};};var parseDatabaseURL=function(dataURL){// Default to empty strings in the event of a malformed string.\nvar host='',domain='',subdomain='',pathString='',namespace='';// Always default to SSL, unless otherwise specified.\nvar secure=true,scheme='https',port=443;// Don't do any validation here. The caller is responsible for validating the result of parsing.\nif(typeof dataURL==='string'){// Parse scheme.\nvar colonInd=dataURL.indexOf('//');if(colonInd>=0){scheme=dataURL.substring(0,colonInd-1);dataURL=dataURL.substring(colonInd+2);}// Parse host, path, and query string.\nvar slashInd=dataURL.indexOf('/');if(slashInd===-1){slashInd=dataURL.length;}var questionMarkInd=dataURL.indexOf('?');if(questionMarkInd===-1){questionMarkInd=dataURL.length;}host=dataURL.substring(0,Math.min(slashInd,questionMarkInd));if(slashInd<questionMarkInd){// For pathString, questionMarkInd will always come after slashInd\npathString=decodePath(dataURL.substring(slashInd,questionMarkInd));}var queryParams=decodeQuery(dataURL.substring(Math.min(dataURL.length,questionMarkInd)));// If we have a port, use scheme for determining if it's secure.\ncolonInd=host.indexOf(':');if(colonInd>=0){secure=scheme==='https'||scheme==='wss';port=parseInt(host.substring(colonInd+1),10);}else{colonInd=host.length;}var hostWithoutPort=host.slice(0,colonInd);if(hostWithoutPort.toLowerCase()==='localhost'){domain='localhost';}else if(hostWithoutPort.split('.').length<=2){domain=hostWithoutPort;}else{// Interpret the subdomain of a 3 or more component URL as the namespace name.\nvar dotInd=host.indexOf('.');subdomain=host.substring(0,dotInd).toLowerCase();domain=host.substring(dotInd+1);// Normalize namespaces to lowercase to share storage / connection.\nnamespace=subdomain;}// Always treat the value of the `ns` as the namespace name if it is present.\nif('ns'in queryParams){namespace=queryParams['ns'];}}return{host:host,port:port,domain:domain,subdomain:subdomain,secure:secure,scheme:scheme,pathString:pathString,namespace:namespace};};/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * Encapsulates the data needed to raise an event\r\n */var DataEvent=/** @class */function(){/**\r\n     * @param eventType - One of: value, child_added, child_changed, child_moved, child_removed\r\n     * @param eventRegistration - The function to call to with the event data. User provided\r\n     * @param snapshot - The data backing the event\r\n     * @param prevName - Optional, the name of the previous child for child_* events.\r\n     */function DataEvent(eventType,eventRegistration,snapshot,prevName){this.eventType=eventType;this.eventRegistration=eventRegistration;this.snapshot=snapshot;this.prevName=prevName;}DataEvent.prototype.getPath=function(){var ref=this.snapshot.ref;if(this.eventType==='value'){return ref._path;}else{return ref.parent._path;}};DataEvent.prototype.getEventType=function(){return this.eventType;};DataEvent.prototype.getEventRunner=function(){return this.eventRegistration.getEventRunner(this);};DataEvent.prototype.toString=function(){return this.getPath().toString()+':'+this.eventType+':'+stringify(this.snapshot.exportVal());};return DataEvent;}();var CancelEvent=/** @class */function(){function CancelEvent(eventRegistration,error,path){this.eventRegistration=eventRegistration;this.error=error;this.path=path;}CancelEvent.prototype.getPath=function(){return this.path;};CancelEvent.prototype.getEventType=function(){return'cancel';};CancelEvent.prototype.getEventRunner=function(){return this.eventRegistration.getEventRunner(this);};CancelEvent.prototype.toString=function(){return this.path.toString()+':cancel';};return CancelEvent;}();/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * A wrapper class that converts events from the database@exp SDK to the legacy\r\n * Database SDK. Events are not converted directly as event registration relies\r\n * on reference comparison of the original user callback (see `matches()`) and\r\n * relies on equality of the legacy SDK's `context` object.\r\n */var CallbackContext=/** @class */function(){function CallbackContext(snapshotCallback,cancelCallback){this.snapshotCallback=snapshotCallback;this.cancelCallback=cancelCallback;}CallbackContext.prototype.onValue=function(expDataSnapshot,previousChildName){this.snapshotCallback.call(null,expDataSnapshot,previousChildName);};CallbackContext.prototype.onCancel=function(error){assert(this.hasCancelCallback,'Raising a cancel event on a listener with no cancel callback');return this.cancelCallback.call(null,error);};Object.defineProperty(CallbackContext.prototype,\"hasCancelCallback\",{get:function(){return!!this.cancelCallback;},enumerable:false,configurable:true});CallbackContext.prototype.matches=function(other){return this.snapshotCallback===other.snapshotCallback||this.snapshotCallback.userCallback!==undefined&&this.snapshotCallback.userCallback===other.snapshotCallback.userCallback&&this.snapshotCallback.context===other.snapshotCallback.context;};return CallbackContext;}();/**\r\n * @license\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * The `onDisconnect` class allows you to write or clear data when your client\r\n * disconnects from the Database server. These updates occur whether your\r\n * client disconnects cleanly or not, so you can rely on them to clean up data\r\n * even if a connection is dropped or a client crashes.\r\n *\r\n * The `onDisconnect` class is most commonly used to manage presence in\r\n * applications where it is useful to detect how many clients are connected and\r\n * when other clients disconnect. See\r\n * {@link https://firebase.google.com/docs/database/web/offline-capabilities | Enabling Offline Capabilities in JavaScript}\r\n * for more information.\r\n *\r\n * To avoid problems when a connection is dropped before the requests can be\r\n * transferred to the Database server, these functions should be called before\r\n * writing any data.\r\n *\r\n * Note that `onDisconnect` operations are only triggered once. If you want an\r\n * operation to occur each time a disconnect occurs, you'll need to re-establish\r\n * the `onDisconnect` operations each time you reconnect.\r\n */var OnDisconnect$1=/** @class */function(){/** @hideconstructor */function OnDisconnect(_repo,_path){this._repo=_repo;this._path=_path;}/**\r\n     * Cancels all previously queued `onDisconnect()` set or update events for this\r\n     * location and all children.\r\n     *\r\n     * If a write has been queued for this location via a `set()` or `update()` at a\r\n     * parent location, the write at this location will be canceled, though writes\r\n     * to sibling locations will still occur.\r\n     *\r\n     * @returns Resolves when synchronization to the server is complete.\r\n     */OnDisconnect.prototype.cancel=function(){var deferred=new Deferred();repoOnDisconnectCancel(this._repo,this._path,deferred.wrapCallback(function(){}));return deferred.promise;};/**\r\n     * Ensures the data at this location is deleted when the client is disconnected\r\n     * (due to closing the browser, navigating to a new page, or network issues).\r\n     *\r\n     * @returns Resolves when synchronization to the server is complete.\r\n     */OnDisconnect.prototype.remove=function(){validateWritablePath('OnDisconnect.remove',this._path);var deferred=new Deferred();repoOnDisconnectSet(this._repo,this._path,null,deferred.wrapCallback(function(){}));return deferred.promise;};/**\r\n     * Ensures the data at this location is set to the specified value when the\r\n     * client is disconnected (due to closing the browser, navigating to a new page,\r\n     * or network issues).\r\n     *\r\n     * `set()` is especially useful for implementing \"presence\" systems, where a\r\n     * value should be changed or cleared when a user disconnects so that they\r\n     * appear \"offline\" to other users. See\r\n     * {@link https://firebase.google.com/docs/database/web/offline-capabilities | Enabling Offline Capabilities in JavaScript}\r\n     * for more information.\r\n     *\r\n     * Note that `onDisconnect` operations are only triggered once. If you want an\r\n     * operation to occur each time a disconnect occurs, you'll need to re-establish\r\n     * the `onDisconnect` operations each time.\r\n     *\r\n     * @param value - The value to be written to this location on disconnect (can\r\n     * be an object, array, string, number, boolean, or null).\r\n     * @returns Resolves when synchronization to the Database is complete.\r\n     */OnDisconnect.prototype.set=function(value){validateWritablePath('OnDisconnect.set',this._path);validateFirebaseDataArg('OnDisconnect.set',value,this._path,false);var deferred=new Deferred();repoOnDisconnectSet(this._repo,this._path,value,deferred.wrapCallback(function(){}));return deferred.promise;};/**\r\n     * Ensures the data at this location is set to the specified value and priority\r\n     * when the client is disconnected (due to closing the browser, navigating to a\r\n     * new page, or network issues).\r\n     *\r\n     * @param value - The value to be written to this location on disconnect (can\r\n     * be an object, array, string, number, boolean, or null).\r\n     * @param priority - The priority to be written (string, number, or null).\r\n     * @returns Resolves when synchronization to the Database is complete.\r\n     */OnDisconnect.prototype.setWithPriority=function(value,priority){validateWritablePath('OnDisconnect.setWithPriority',this._path);validateFirebaseDataArg('OnDisconnect.setWithPriority',value,this._path,false);validatePriority('OnDisconnect.setWithPriority',priority,false);var deferred=new Deferred();repoOnDisconnectSetWithPriority(this._repo,this._path,value,priority,deferred.wrapCallback(function(){}));return deferred.promise;};/**\r\n     * Writes multiple values at this location when the client is disconnected (due\r\n     * to closing the browser, navigating to a new page, or network issues).\r\n     *\r\n     * The `values` argument contains multiple property-value pairs that will be\r\n     * written to the Database together. Each child property can either be a simple\r\n     * property (for example, \"name\") or a relative path (for example, \"name/first\")\r\n     * from the current location to the data to update.\r\n     *\r\n     * As opposed to the `set()` method, `update()` can be use to selectively update\r\n     * only the referenced properties at the current location (instead of replacing\r\n     * all the child properties at the current location).\r\n     *\r\n     * @param values - Object containing multiple values.\r\n     * @returns Resolves when synchronization to the Database is complete.\r\n     */OnDisconnect.prototype.update=function(values){validateWritablePath('OnDisconnect.update',this._path);validateFirebaseMergeDataArg('OnDisconnect.update',values,this._path,false);var deferred=new Deferred();repoOnDisconnectUpdate(this._repo,this._path,values,deferred.wrapCallback(function(){}));return deferred.promise;};return OnDisconnect;}();/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * @internal\r\n */var QueryImpl=/** @class */function(){/**\r\n     * @hideconstructor\r\n     */function QueryImpl(_repo,_path,_queryParams,_orderByCalled){this._repo=_repo;this._path=_path;this._queryParams=_queryParams;this._orderByCalled=_orderByCalled;}Object.defineProperty(QueryImpl.prototype,\"key\",{get:function(){if(pathIsEmpty(this._path)){return null;}else{return pathGetBack(this._path);}},enumerable:false,configurable:true});Object.defineProperty(QueryImpl.prototype,\"ref\",{get:function(){return new ReferenceImpl(this._repo,this._path);},enumerable:false,configurable:true});Object.defineProperty(QueryImpl.prototype,\"_queryIdentifier\",{get:function(){var obj=queryParamsGetQueryObject(this._queryParams);var id=ObjectToUniqueKey(obj);return id==='{}'?'default':id;},enumerable:false,configurable:true});Object.defineProperty(QueryImpl.prototype,\"_queryObject\",{/**\r\n         * An object representation of the query parameters used by this Query.\r\n         */get:function(){return queryParamsGetQueryObject(this._queryParams);},enumerable:false,configurable:true});QueryImpl.prototype.isEqual=function(other){other=getModularInstance(other);if(!(other instanceof QueryImpl)){return false;}var sameRepo=this._repo===other._repo;var samePath=pathEquals(this._path,other._path);var sameQueryIdentifier=this._queryIdentifier===other._queryIdentifier;return sameRepo&&samePath&&sameQueryIdentifier;};QueryImpl.prototype.toJSON=function(){return this.toString();};QueryImpl.prototype.toString=function(){return this._repo.toString()+pathToUrlEncodedString(this._path);};return QueryImpl;}();/**\r\n * Validates that no other order by call has been made\r\n */function validateNoPreviousOrderByCall(query,fnName){if(query._orderByCalled===true){throw new Error(fnName+\": You can't combine multiple orderBy calls.\");}}/**\r\n * Validates start/end values for queries.\r\n */function validateQueryEndpoints(params){var startNode=null;var endNode=null;if(params.hasStart()){startNode=params.getIndexStartValue();}if(params.hasEnd()){endNode=params.getIndexEndValue();}if(params.getIndex()===KEY_INDEX){var tooManyArgsError='Query: When ordering by key, you may only pass one argument to '+'startAt(), endAt(), or equalTo().';var wrongArgTypeError='Query: When ordering by key, the argument passed to startAt(), startAfter(), '+'endAt(), endBefore(), or equalTo() must be a string.';if(params.hasStart()){var startName=params.getIndexStartName();if(startName!==MIN_NAME){throw new Error(tooManyArgsError);}else if(typeof startNode!=='string'){throw new Error(wrongArgTypeError);}}if(params.hasEnd()){var endName=params.getIndexEndName();if(endName!==MAX_NAME){throw new Error(tooManyArgsError);}else if(typeof endNode!=='string'){throw new Error(wrongArgTypeError);}}}else if(params.getIndex()===PRIORITY_INDEX){if(startNode!=null&&!isValidPriority(startNode)||endNode!=null&&!isValidPriority(endNode)){throw new Error('Query: When ordering by priority, the first argument passed to startAt(), '+'startAfter() endAt(), endBefore(), or equalTo() must be a valid priority value '+'(null, a number, or a string).');}}else{assert(params.getIndex()instanceof PathIndex||params.getIndex()===VALUE_INDEX,'unknown index type.');if(startNode!=null&&typeof startNode==='object'||endNode!=null&&typeof endNode==='object'){throw new Error('Query: First argument passed to startAt(), startAfter(), endAt(), endBefore(), or '+'equalTo() cannot be an object.');}}}/**\r\n * Validates that limit* has been called with the correct combination of parameters\r\n */function validateLimit(params){if(params.hasStart()&&params.hasEnd()&&params.hasLimit()&&!params.hasAnchoredLimit()){throw new Error(\"Query: Can't combine startAt(), startAfter(), endAt(), endBefore(), and limit(). Use \"+'limitToFirst() or limitToLast() instead.');}}/**\r\n * @internal\r\n */var ReferenceImpl=/** @class */function(_super){__extends(ReferenceImpl,_super);/** @hideconstructor */function ReferenceImpl(repo,path){return _super.call(this,repo,path,new QueryParams(),false)||this;}Object.defineProperty(ReferenceImpl.prototype,\"parent\",{get:function(){var parentPath=pathParent(this._path);return parentPath===null?null:new ReferenceImpl(this._repo,parentPath);},enumerable:false,configurable:true});Object.defineProperty(ReferenceImpl.prototype,\"root\",{get:function(){var ref=this;while(ref.parent!==null){ref=ref.parent;}return ref;},enumerable:false,configurable:true});return ReferenceImpl;}(QueryImpl);/**\r\n * A `DataSnapshot` contains data from a Database location.\r\n *\r\n * Any time you read data from the Database, you receive the data as a\r\n * `DataSnapshot`. A `DataSnapshot` is passed to the event callbacks you attach\r\n * with `on()` or `once()`. You can extract the contents of the snapshot as a\r\n * JavaScript object by calling the `val()` method. Alternatively, you can\r\n * traverse into the snapshot by calling `child()` to return child snapshots\r\n * (which you could then call `val()` on).\r\n *\r\n * A `DataSnapshot` is an efficiently generated, immutable copy of the data at\r\n * a Database location. It cannot be modified and will never change (to modify\r\n * data, you always call the `set()` method on a `Reference` directly).\r\n */var DataSnapshot$1=/** @class */function(){/**\r\n     * @param _node - A SnapshotNode to wrap.\r\n     * @param ref - The location this snapshot came from.\r\n     * @param _index - The iteration order for this snapshot\r\n     * @hideconstructor\r\n     */function DataSnapshot(_node,/**\r\n     * The location of this DataSnapshot.\r\n     */ref,_index){this._node=_node;this.ref=ref;this._index=_index;}Object.defineProperty(DataSnapshot.prototype,\"priority\",{/**\r\n         * Gets the priority value of the data in this `DataSnapshot`.\r\n         *\r\n         * Applications need not use priority but can order collections by\r\n         * ordinary properties (see\r\n         * {@link https://firebase.google.com/docs/database/web/lists-of-data#sorting_and_filtering_data |Sorting and filtering data}\r\n         * ).\r\n         */get:function(){// typecast here because we never return deferred values or internal priorities (MAX_PRIORITY)\nreturn this._node.getPriority().val();},enumerable:false,configurable:true});Object.defineProperty(DataSnapshot.prototype,\"key\",{/**\r\n         * The key (last part of the path) of the location of this `DataSnapshot`.\r\n         *\r\n         * The last token in a Database location is considered its key. For example,\r\n         * \"ada\" is the key for the /users/ada/ node. Accessing the key on any\r\n         * `DataSnapshot` will return the key for the location that generated it.\r\n         * However, accessing the key on the root URL of a Database will return\r\n         * `null`.\r\n         */get:function(){return this.ref.key;},enumerable:false,configurable:true});Object.defineProperty(DataSnapshot.prototype,\"size\",{/** Returns the number of child properties of this `DataSnapshot`. */get:function(){return this._node.numChildren();},enumerable:false,configurable:true});/**\r\n     * Gets another `DataSnapshot` for the location at the specified relative path.\r\n     *\r\n     * Passing a relative path to the `child()` method of a DataSnapshot returns\r\n     * another `DataSnapshot` for the location at the specified relative path. The\r\n     * relative path can either be a simple child name (for example, \"ada\") or a\r\n     * deeper, slash-separated path (for example, \"ada/name/first\"). If the child\r\n     * location has no data, an empty `DataSnapshot` (that is, a `DataSnapshot`\r\n     * whose value is `null`) is returned.\r\n     *\r\n     * @param path - A relative path to the location of child data.\r\n     */DataSnapshot.prototype.child=function(path){var childPath=new Path(path);var childRef=child(this.ref,path);return new DataSnapshot(this._node.getChild(childPath),childRef,PRIORITY_INDEX);};/**\r\n     * Returns true if this `DataSnapshot` contains any data. It is slightly more\r\n     * efficient than using `snapshot.val() !== null`.\r\n     */DataSnapshot.prototype.exists=function(){return!this._node.isEmpty();};/**\r\n     * Exports the entire contents of the DataSnapshot as a JavaScript object.\r\n     *\r\n     * The `exportVal()` method is similar to `val()`, except priority information\r\n     * is included (if available), making it suitable for backing up your data.\r\n     *\r\n     * @returns The DataSnapshot's contents as a JavaScript value (Object,\r\n     *   Array, string, number, boolean, or `null`).\r\n     */ // eslint-disable-next-line @typescript-eslint/no-explicit-any\nDataSnapshot.prototype.exportVal=function(){return this._node.val(true);};/**\r\n     * Enumerates the top-level children in the `DataSnapshot`.\r\n     *\r\n     * Because of the way JavaScript objects work, the ordering of data in the\r\n     * JavaScript object returned by `val()` is not guaranteed to match the\r\n     * ordering on the server nor the ordering of `onChildAdded()` events. That is\r\n     * where `forEach()` comes in handy. It guarantees the children of a\r\n     * `DataSnapshot` will be iterated in their query order.\r\n     *\r\n     * If no explicit `orderBy*()` method is used, results are returned\r\n     * ordered by key (unless priorities are used, in which case, results are\r\n     * returned by priority).\r\n     *\r\n     * @param action - A function that will be called for each child DataSnapshot.\r\n     * The callback can return true to cancel further enumeration.\r\n     * @returns true if enumeration was canceled due to your callback returning\r\n     * true.\r\n     */DataSnapshot.prototype.forEach=function(action){var _this=this;if(this._node.isLeafNode()){return false;}var childrenNode=this._node;// Sanitize the return value to a boolean. ChildrenNode.forEachChild has a weird return type...\nreturn!!childrenNode.forEachChild(this._index,function(key,node){return action(new DataSnapshot(node,child(_this.ref,key),PRIORITY_INDEX));});};/**\r\n     * Returns true if the specified child path has (non-null) data.\r\n     *\r\n     * @param path - A relative path to the location of a potential child.\r\n     * @returns `true` if data exists at the specified child path; else\r\n     *  `false`.\r\n     */DataSnapshot.prototype.hasChild=function(path){var childPath=new Path(path);return!this._node.getChild(childPath).isEmpty();};/**\r\n     * Returns whether or not the `DataSnapshot` has any non-`null` child\r\n     * properties.\r\n     *\r\n     * You can use `hasChildren()` to determine if a `DataSnapshot` has any\r\n     * children. If it does, you can enumerate them using `forEach()`. If it\r\n     * doesn't, then either this snapshot contains a primitive value (which can be\r\n     * retrieved with `val()`) or it is empty (in which case, `val()` will return\r\n     * `null`).\r\n     *\r\n     * @returns true if this snapshot has any children; else false.\r\n     */DataSnapshot.prototype.hasChildren=function(){if(this._node.isLeafNode()){return false;}else{return!this._node.isEmpty();}};/**\r\n     * Returns a JSON-serializable representation of this object.\r\n     */DataSnapshot.prototype.toJSON=function(){return this.exportVal();};/**\r\n     * Extracts a JavaScript value from a `DataSnapshot`.\r\n     *\r\n     * Depending on the data in a `DataSnapshot`, the `val()` method may return a\r\n     * scalar type (string, number, or boolean), an array, or an object. It may\r\n     * also return null, indicating that the `DataSnapshot` is empty (contains no\r\n     * data).\r\n     *\r\n     * @returns The DataSnapshot's contents as a JavaScript value (Object,\r\n     *   Array, string, number, boolean, or `null`).\r\n     */ // eslint-disable-next-line @typescript-eslint/no-explicit-any\nDataSnapshot.prototype.val=function(){return this._node.val();};return DataSnapshot;}();/**\r\n *\r\n * Returns a `Reference` representing the location in the Database\r\n * corresponding to the provided path. If no path is provided, the `Reference`\r\n * will point to the root of the Database.\r\n *\r\n * @param db - The database instance to obtain a reference for.\r\n * @param path - Optional path representing the location the returned\r\n *   `Reference` will point. If not provided, the returned `Reference` will\r\n *   point to the root of the Database.\r\n * @returns If a path is provided, a `Reference`\r\n *   pointing to the provided path. Otherwise, a `Reference` pointing to the\r\n *   root of the Database.\r\n */function ref(db,path){db=getModularInstance(db);db._checkNotDeleted('ref');return path!==undefined?child(db._root,path):db._root;}/**\r\n * Returns a `Reference` representing the location in the Database\r\n * corresponding to the provided Firebase URL.\r\n *\r\n * An exception is thrown if the URL is not a valid Firebase Database URL or it\r\n * has a different domain than the current `Database` instance.\r\n *\r\n * Note that all query parameters (`orderBy`, `limitToLast`, etc.) are ignored\r\n * and are not applied to the returned `Reference`.\r\n *\r\n * @param db - The database instance to obtain a reference for.\r\n * @param url - The Firebase URL at which the returned `Reference` will\r\n *   point.\r\n * @returns A `Reference` pointing to the provided\r\n *   Firebase URL.\r\n */function refFromURL(db,url){db=getModularInstance(db);db._checkNotDeleted('refFromURL');var parsedURL=parseRepoInfo(url,db._repo.repoInfo_.nodeAdmin);validateUrl('refFromURL',parsedURL);var repoInfo=parsedURL.repoInfo;if(!db._repo.repoInfo_.isCustomHost()&&repoInfo.host!==db._repo.repoInfo_.host){fatal('refFromURL'+': Host name does not match the current database: '+'(found '+repoInfo.host+' but expected '+db._repo.repoInfo_.host+')');}return ref(db,parsedURL.path.toString());}/**\r\n * Gets a `Reference` for the location at the specified relative path.\r\n *\r\n * The relative path can either be a simple child name (for example, \"ada\") or\r\n * a deeper slash-separated path (for example, \"ada/name/first\").\r\n *\r\n * @param parent - The parent location.\r\n * @param path - A relative path from this location to the desired child\r\n *   location.\r\n * @returns The specified child location.\r\n */function child(parent,path){parent=getModularInstance(parent);if(pathGetFront(parent._path)===null){validateRootPathString('child','path',path,false);}else{validatePathString('child','path',path,false);}return new ReferenceImpl(parent._repo,pathChild(parent._path,path));}/**\r\n * Generates a new child location using a unique key and returns its\r\n * `Reference`.\r\n *\r\n * This is the most common pattern for adding data to a collection of items.\r\n *\r\n * If you provide a value to `push()`, the value is written to the\r\n * generated location. If you don't pass a value, nothing is written to the\r\n * database and the child remains empty (but you can use the `Reference`\r\n * elsewhere).\r\n *\r\n * The unique keys generated by `push()` are ordered by the current time, so the\r\n * resulting list of items is chronologically sorted. The keys are also\r\n * designed to be unguessable (they contain 72 random bits of entropy).\r\n *\r\n * See {@link https://firebase.google.com/docs/database/web/lists-of-data#append_to_a_list_of_data | Append to a list of data}\r\n * </br>See {@link ttps://firebase.googleblog.com/2015/02/the-2120-ways-to-ensure-unique_68.html | The 2^120 Ways to Ensure Unique Identifiers}\r\n *\r\n * @param parent - The parent location.\r\n * @param value - Optional value to be written at the generated location.\r\n * @returns Combined `Promise` and `Reference`; resolves when write is complete,\r\n * but can be used immediately as the `Reference` to the child location.\r\n */function push(parent,value){parent=getModularInstance(parent);validateWritablePath('push',parent._path);validateFirebaseDataArg('push',value,parent._path,true);var now=repoServerTime(parent._repo);var name=nextPushId(now);// push() returns a ThennableReference whose promise is fulfilled with a\n// regular Reference. We use child() to create handles to two different\n// references. The first is turned into a ThennableReference below by adding\n// then() and catch() methods and is used as the return value of push(). The\n// second remains a regular Reference and is used as the fulfilled value of\n// the first ThennableReference.\nvar thennablePushRef=child(parent,name);var pushRef=child(parent,name);var promise;if(value!=null){promise=set(pushRef,value).then(function(){return pushRef;});}else{promise=Promise.resolve(pushRef);}thennablePushRef.then=promise.then.bind(promise);thennablePushRef.catch=promise.then.bind(promise,undefined);return thennablePushRef;}/**\r\n * Removes the data at this Database location.\r\n *\r\n * Any data at child locations will also be deleted.\r\n *\r\n * The effect of the remove will be visible immediately and the corresponding\r\n * event 'value' will be triggered. Synchronization of the remove to the\r\n * Firebase servers will also be started, and the returned Promise will resolve\r\n * when complete. If provided, the onComplete callback will be called\r\n * asynchronously after synchronization has finished.\r\n *\r\n * @param ref - The location to remove.\r\n * @returns Resolves when remove on server is complete.\r\n */function remove(ref){validateWritablePath('remove',ref._path);return set(ref,null);}/**\r\n * Writes data to this Database location.\r\n *\r\n * This will overwrite any data at this location and all child locations.\r\n *\r\n * The effect of the write will be visible immediately, and the corresponding\r\n * events (\"value\", \"child_added\", etc.) will be triggered. Synchronization of\r\n * the data to the Firebase servers will also be started, and the returned\r\n * Promise will resolve when complete. If provided, the `onComplete` callback\r\n * will be called asynchronously after synchronization has finished.\r\n *\r\n * Passing `null` for the new value is equivalent to calling `remove()`; namely,\r\n * all data at this location and all child locations will be deleted.\r\n *\r\n * `set()` will remove any priority stored at this location, so if priority is\r\n * meant to be preserved, you need to use `setWithPriority()` instead.\r\n *\r\n * Note that modifying data with `set()` will cancel any pending transactions\r\n * at that location, so extreme care should be taken if mixing `set()` and\r\n * `transaction()` to modify the same data.\r\n *\r\n * A single `set()` will generate a single \"value\" event at the location where\r\n * the `set()` was performed.\r\n *\r\n * @param ref - The location to write to.\r\n * @param value - The value to be written (string, number, boolean, object,\r\n *   array, or null).\r\n * @returns Resolves when write to server is complete.\r\n */function set(ref,value){ref=getModularInstance(ref);validateWritablePath('set',ref._path);validateFirebaseDataArg('set',value,ref._path,false);var deferred=new Deferred();repoSetWithPriority(ref._repo,ref._path,value,/*priority=*/null,deferred.wrapCallback(function(){}));return deferred.promise;}/**\r\n * Sets a priority for the data at this Database location.\r\n *\r\n * Applications need not use priority but can order collections by\r\n * ordinary properties (see\r\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sorting_and_filtering_data | Sorting and filtering data}\r\n * ).\r\n *\r\n * @param ref - The location to write to.\r\n * @param priority - The priority to be written (string, number, or null).\r\n * @returns Resolves when write to server is complete.\r\n */function setPriority(ref,priority){ref=getModularInstance(ref);validateWritablePath('setPriority',ref._path);validatePriority('setPriority',priority,false);var deferred=new Deferred();repoSetWithPriority(ref._repo,pathChild(ref._path,'.priority'),priority,null,deferred.wrapCallback(function(){}));return deferred.promise;}/**\r\n * Writes data the Database location. Like `set()` but also specifies the\r\n * priority for that data.\r\n *\r\n * Applications need not use priority but can order collections by\r\n * ordinary properties (see\r\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sorting_and_filtering_data | Sorting and filtering data}\r\n * ).\r\n *\r\n * @param ref - The location to write to.\r\n * @param value - The value to be written (string, number, boolean, object,\r\n *   array, or null).\r\n * @param priority - The priority to be written (string, number, or null).\r\n * @returns Resolves when write to server is complete.\r\n */function setWithPriority(ref,value,priority){validateWritablePath('setWithPriority',ref._path);validateFirebaseDataArg('setWithPriority',value,ref._path,false);validatePriority('setWithPriority',priority,false);if(ref.key==='.length'||ref.key==='.keys'){throw'setWithPriority failed: '+ref.key+' is a read-only object.';}var deferred=new Deferred();repoSetWithPriority(ref._repo,ref._path,value,priority,deferred.wrapCallback(function(){}));return deferred.promise;}/**\r\n * Writes multiple values to the Database at once.\r\n *\r\n * The `values` argument contains multiple property-value pairs that will be\r\n * written to the Database together. Each child property can either be a simple\r\n * property (for example, \"name\") or a relative path (for example,\r\n * \"name/first\") from the current location to the data to update.\r\n *\r\n * As opposed to the `set()` method, `update()` can be use to selectively update\r\n * only the referenced properties at the current location (instead of replacing\r\n * all the child properties at the current location).\r\n *\r\n * The effect of the write will be visible immediately, and the corresponding\r\n * events ('value', 'child_added', etc.) will be triggered. Synchronization of\r\n * the data to the Firebase servers will also be started, and the returned\r\n * Promise will resolve when complete. If provided, the `onComplete` callback\r\n * will be called asynchronously after synchronization has finished.\r\n *\r\n * A single `update()` will generate a single \"value\" event at the location\r\n * where the `update()` was performed, regardless of how many children were\r\n * modified.\r\n *\r\n * Note that modifying data with `update()` will cancel any pending\r\n * transactions at that location, so extreme care should be taken if mixing\r\n * `update()` and `transaction()` to modify the same data.\r\n *\r\n * Passing `null` to `update()` will remove the data at this location.\r\n *\r\n * See\r\n * {@link https://firebase.googleblog.com/2015/09/introducing-multi-location-updates-and_86.html | Introducing multi-location updates and more}.\r\n *\r\n * @param ref - The location to write to.\r\n * @param values - Object containing multiple values.\r\n * @returns Resolves when update on server is complete.\r\n */function update(ref,values){validateFirebaseMergeDataArg('update',values,ref._path,false);var deferred=new Deferred();repoUpdate(ref._repo,ref._path,values,deferred.wrapCallback(function(){}));return deferred.promise;}/**\r\n * Gets the most up-to-date result for this query.\r\n *\r\n * @param query - The query to run.\r\n * @returns A promise which resolves to the resulting DataSnapshot if a value is\r\n * available, or rejects if the client is unable to return a value (e.g., if the\r\n * server is unreachable and there is nothing cached).\r\n */function get(query){query=getModularInstance(query);return repoGetValue(query._repo,query).then(function(node){return new DataSnapshot$1(node,new ReferenceImpl(query._repo,query._path),query._queryParams.getIndex());});}/**\r\n * Represents registration for 'value' events.\r\n */var ValueEventRegistration=/** @class */function(){function ValueEventRegistration(callbackContext){this.callbackContext=callbackContext;}ValueEventRegistration.prototype.respondsTo=function(eventType){return eventType==='value';};ValueEventRegistration.prototype.createEvent=function(change,query){var index=query._queryParams.getIndex();return new DataEvent('value',this,new DataSnapshot$1(change.snapshotNode,new ReferenceImpl(query._repo,query._path),index));};ValueEventRegistration.prototype.getEventRunner=function(eventData){var _this=this;if(eventData.getEventType()==='cancel'){return function(){return _this.callbackContext.onCancel(eventData.error);};}else{return function(){return _this.callbackContext.onValue(eventData.snapshot,null);};}};ValueEventRegistration.prototype.createCancelEvent=function(error,path){if(this.callbackContext.hasCancelCallback){return new CancelEvent(this,error,path);}else{return null;}};ValueEventRegistration.prototype.matches=function(other){if(!(other instanceof ValueEventRegistration)){return false;}else if(!other.callbackContext||!this.callbackContext){// If no callback specified, we consider it to match any callback.\nreturn true;}else{return other.callbackContext.matches(this.callbackContext);}};ValueEventRegistration.prototype.hasAnyCallback=function(){return this.callbackContext!==null;};return ValueEventRegistration;}();/**\r\n * Represents the registration of a child_x event.\r\n */var ChildEventRegistration=/** @class */function(){function ChildEventRegistration(eventType,callbackContext){this.eventType=eventType;this.callbackContext=callbackContext;}ChildEventRegistration.prototype.respondsTo=function(eventType){var eventToCheck=eventType==='children_added'?'child_added':eventType;eventToCheck=eventToCheck==='children_removed'?'child_removed':eventToCheck;return this.eventType===eventToCheck;};ChildEventRegistration.prototype.createCancelEvent=function(error,path){if(this.callbackContext.hasCancelCallback){return new CancelEvent(this,error,path);}else{return null;}};ChildEventRegistration.prototype.createEvent=function(change,query){assert(change.childName!=null,'Child events should have a childName.');var childRef=child(new ReferenceImpl(query._repo,query._path),change.childName);var index=query._queryParams.getIndex();return new DataEvent(change.type,this,new DataSnapshot$1(change.snapshotNode,childRef,index),change.prevName);};ChildEventRegistration.prototype.getEventRunner=function(eventData){var _this=this;if(eventData.getEventType()==='cancel'){return function(){return _this.callbackContext.onCancel(eventData.error);};}else{return function(){return _this.callbackContext.onValue(eventData.snapshot,eventData.prevName);};}};ChildEventRegistration.prototype.matches=function(other){if(other instanceof ChildEventRegistration){return this.eventType===other.eventType&&(!this.callbackContext||!other.callbackContext||this.callbackContext.matches(other.callbackContext));}return false;};ChildEventRegistration.prototype.hasAnyCallback=function(){return!!this.callbackContext;};return ChildEventRegistration;}();function addEventListener(query,eventType,callback,cancelCallbackOrListenOptions,options){var cancelCallback;if(typeof cancelCallbackOrListenOptions==='object'){cancelCallback=undefined;options=cancelCallbackOrListenOptions;}if(typeof cancelCallbackOrListenOptions==='function'){cancelCallback=cancelCallbackOrListenOptions;}if(options&&options.onlyOnce){var userCallback_1=callback;var onceCallback=function(dataSnapshot,previousChildName){repoRemoveEventCallbackForQuery(query._repo,query,container);userCallback_1(dataSnapshot,previousChildName);};onceCallback.userCallback=callback.userCallback;onceCallback.context=callback.context;callback=onceCallback;}var callbackContext=new CallbackContext(callback,cancelCallback||undefined);var container=eventType==='value'?new ValueEventRegistration(callbackContext):new ChildEventRegistration(eventType,callbackContext);repoAddEventCallbackForQuery(query._repo,query,container);return function(){return repoRemoveEventCallbackForQuery(query._repo,query,container);};}function onValue(query,callback,cancelCallbackOrListenOptions,options){return addEventListener(query,'value',callback,cancelCallbackOrListenOptions,options);}function onChildAdded(query,callback,cancelCallbackOrListenOptions,options){return addEventListener(query,'child_added',callback,cancelCallbackOrListenOptions,options);}function onChildChanged(query,callback,cancelCallbackOrListenOptions,options){return addEventListener(query,'child_changed',callback,cancelCallbackOrListenOptions,options);}function onChildMoved(query,callback,cancelCallbackOrListenOptions,options){return addEventListener(query,'child_moved',callback,cancelCallbackOrListenOptions,options);}function onChildRemoved(query,callback,cancelCallbackOrListenOptions,options){return addEventListener(query,'child_removed',callback,cancelCallbackOrListenOptions,options);}/**\r\n * Detaches a callback previously attached with `on()`.\r\n *\r\n * Detach a callback previously attached with `on()`. Note that if `on()` was\r\n * called multiple times with the same eventType and callback, the callback\r\n * will be called multiple times for each event, and `off()` must be called\r\n * multiple times to remove the callback. Calling `off()` on a parent listener\r\n * will not automatically remove listeners registered on child nodes, `off()`\r\n * must also be called on any child listeners to remove the callback.\r\n *\r\n * If a callback is not specified, all callbacks for the specified eventType\r\n * will be removed. Similarly, if no eventType is specified, all callbacks\r\n * for the `Reference` will be removed.\r\n *\r\n * Individual listeners can also be removed by invoking their unsubscribe\r\n * callbacks.\r\n *\r\n * @param query - The query that the listener was registered with.\r\n * @param eventType - One of the following strings: \"value\", \"child_added\",\r\n * \"child_changed\", \"child_removed\", or \"child_moved.\" If omitted, all callbacks\r\n * for the `Reference` will be removed.\r\n * @param callback - The callback function that was passed to `on()` or\r\n * `undefined` to remove all callbacks.\r\n */function off(query,eventType,callback){var container=null;var expCallback=callback?new CallbackContext(callback):null;if(eventType==='value'){container=new ValueEventRegistration(expCallback);}else if(eventType){container=new ChildEventRegistration(eventType,expCallback);}repoRemoveEventCallbackForQuery(query._repo,query,container);}/**\r\n * A `QueryConstraint` is used to narrow the set of documents returned by a\r\n * Database query. `QueryConstraint`s are created by invoking {@link endAt},\r\n * {@link endBefore}, {@link startAt}, {@link startAfter}, {@link\r\n * limitToFirst}, {@link limitToLast}, {@link orderByChild},\r\n * {@link orderByChild}, {@link orderByKey} , {@link orderByPriority} ,\r\n * {@link orderByValue}  or {@link equalTo} and\r\n * can then be passed to {@link query} to create a new query instance that\r\n * also contains this `QueryConstraint`.\r\n */var QueryConstraint=/** @class */function(){function QueryConstraint(){}return QueryConstraint;}();var QueryEndAtConstraint=/** @class */function(_super){__extends(QueryEndAtConstraint,_super);function QueryEndAtConstraint(_value,_key){var _this=_super.call(this)||this;_this._value=_value;_this._key=_key;return _this;}QueryEndAtConstraint.prototype._apply=function(query){validateFirebaseDataArg('endAt',this._value,query._path,true);var newParams=queryParamsEndAt(query._queryParams,this._value,this._key);validateLimit(newParams);validateQueryEndpoints(newParams);if(query._queryParams.hasEnd()){throw new Error('endAt: Starting point was already set (by another call to endAt, '+'endBefore or equalTo).');}return new QueryImpl(query._repo,query._path,newParams,query._orderByCalled);};return QueryEndAtConstraint;}(QueryConstraint);/**\r\n * Creates a `QueryConstraint` with the specified ending point.\r\n *\r\n * Using `startAt()`, `startAfter()`, `endBefore()`, `endAt()` and `equalTo()`\r\n * allows you to choose arbitrary starting and ending points for your queries.\r\n *\r\n * The ending point is inclusive, so children with exactly the specified value\r\n * will be included in the query. The optional key argument can be used to\r\n * further limit the range of the query. If it is specified, then children that\r\n * have exactly the specified value must also have a key name less than or equal\r\n * to the specified key.\r\n *\r\n * You can read more about `endAt()` in\r\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#filtering_data | Filtering data}.\r\n *\r\n * @param value - The value to end at. The argument type depends on which\r\n * `orderBy*()` function was used in this query. Specify a value that matches\r\n * the `orderBy*()` type. When used in combination with `orderByKey()`, the\r\n * value must be a string.\r\n * @param key - The child key to end at, among the children with the previously\r\n * specified priority. This argument is only allowed if ordering by child,\r\n * value, or priority.\r\n */function endAt(value,key){validateKey('endAt','key',key,true);return new QueryEndAtConstraint(value,key);}var QueryEndBeforeConstraint=/** @class */function(_super){__extends(QueryEndBeforeConstraint,_super);function QueryEndBeforeConstraint(_value,_key){var _this=_super.call(this)||this;_this._value=_value;_this._key=_key;return _this;}QueryEndBeforeConstraint.prototype._apply=function(query){validateFirebaseDataArg('endBefore',this._value,query._path,false);var newParams=queryParamsEndBefore(query._queryParams,this._value,this._key);validateLimit(newParams);validateQueryEndpoints(newParams);if(query._queryParams.hasEnd()){throw new Error('endBefore: Starting point was already set (by another call to endAt, '+'endBefore or equalTo).');}return new QueryImpl(query._repo,query._path,newParams,query._orderByCalled);};return QueryEndBeforeConstraint;}(QueryConstraint);/**\r\n * Creates a `QueryConstraint` with the specified ending point (exclusive).\r\n *\r\n * Using `startAt()`, `startAfter()`, `endBefore()`, `endAt()` and `equalTo()`\r\n * allows you to choose arbitrary starting and ending points for your queries.\r\n *\r\n * The ending point is exclusive. If only a value is provided, children\r\n * with a value less than the specified value will be included in the query.\r\n * If a key is specified, then children must have a value lesss than or equal\r\n * to the specified value and a a key name less than the specified key.\r\n *\r\n * @param value - The value to end before. The argument type depends on which\r\n * `orderBy*()` function was used in this query. Specify a value that matches\r\n * the `orderBy*()` type. When used in combination with `orderByKey()`, the\r\n * value must be a string.\r\n * @param key - The child key to end before, among the children with the\r\n * previously specified priority. This argument is only allowed if ordering by\r\n * child, value, or priority.\r\n */function endBefore(value,key){validateKey('endBefore','key',key,true);return new QueryEndBeforeConstraint(value,key);}var QueryStartAtConstraint=/** @class */function(_super){__extends(QueryStartAtConstraint,_super);function QueryStartAtConstraint(_value,_key){var _this=_super.call(this)||this;_this._value=_value;_this._key=_key;return _this;}QueryStartAtConstraint.prototype._apply=function(query){validateFirebaseDataArg('startAt',this._value,query._path,true);var newParams=queryParamsStartAt(query._queryParams,this._value,this._key);validateLimit(newParams);validateQueryEndpoints(newParams);if(query._queryParams.hasStart()){throw new Error('startAt: Starting point was already set (by another call to startAt, '+'startBefore or equalTo).');}return new QueryImpl(query._repo,query._path,newParams,query._orderByCalled);};return QueryStartAtConstraint;}(QueryConstraint);/**\r\n * Creates a `QueryConstraint` with the specified starting point.\r\n *\r\n * Using `startAt()`, `startAfter()`, `endBefore()`, `endAt()` and `equalTo()`\r\n * allows you to choose arbitrary starting and ending points for your queries.\r\n *\r\n * The starting point is inclusive, so children with exactly the specified value\r\n * will be included in the query. The optional key argument can be used to\r\n * further limit the range of the query. If it is specified, then children that\r\n * have exactly the specified value must also have a key name greater than or\r\n * equal to the specified key.\r\n *\r\n * You can read more about `startAt()` in\r\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#filtering_data | Filtering data}.\r\n *\r\n * @param value - The value to start at. The argument type depends on which\r\n * `orderBy*()` function was used in this query. Specify a value that matches\r\n * the `orderBy*()` type. When used in combination with `orderByKey()`, the\r\n * value must be a string.\r\n * @param key - The child key to start at. This argument is only allowed if\r\n * ordering by child, value, or priority.\r\n */function startAt(value,key){if(value===void 0){value=null;}validateKey('startAt','key',key,true);return new QueryStartAtConstraint(value,key);}var QueryStartAfterConstraint=/** @class */function(_super){__extends(QueryStartAfterConstraint,_super);function QueryStartAfterConstraint(_value,_key){var _this=_super.call(this)||this;_this._value=_value;_this._key=_key;return _this;}QueryStartAfterConstraint.prototype._apply=function(query){validateFirebaseDataArg('startAfter',this._value,query._path,false);var newParams=queryParamsStartAfter(query._queryParams,this._value,this._key);validateLimit(newParams);validateQueryEndpoints(newParams);if(query._queryParams.hasStart()){throw new Error('startAfter: Starting point was already set (by another call to startAt, '+'startAfter, or equalTo).');}return new QueryImpl(query._repo,query._path,newParams,query._orderByCalled);};return QueryStartAfterConstraint;}(QueryConstraint);/**\r\n * Creates a `QueryConstraint` with the specified starting point (exclusive).\r\n *\r\n * Using `startAt()`, `startAfter()`, `endBefore()`, `endAt()` and `equalTo()`\r\n * allows you to choose arbitrary starting and ending points for your queries.\r\n *\r\n * The starting point is exclusive. If only a value is provided, children\r\n * with a value greater than the specified value will be included in the query.\r\n * If a key is specified, then children must have a value greater than or equal\r\n * to the specified value and a a key name greater than the specified key.\r\n *\r\n * @param value - The value to start after. The argument type depends on which\r\n * `orderBy*()` function was used in this query. Specify a value that matches\r\n * the `orderBy*()` type. When used in combination with `orderByKey()`, the\r\n * value must be a string.\r\n * @param key - The child key to start after. This argument is only allowed if\r\n * ordering by child, value, or priority.\r\n */function startAfter(value,key){validateKey('startAfter','key',key,true);return new QueryStartAfterConstraint(value,key);}var QueryLimitToFirstConstraint=/** @class */function(_super){__extends(QueryLimitToFirstConstraint,_super);function QueryLimitToFirstConstraint(_limit){var _this=_super.call(this)||this;_this._limit=_limit;return _this;}QueryLimitToFirstConstraint.prototype._apply=function(query){if(query._queryParams.hasLimit()){throw new Error('limitToFirst: Limit was already set (by another call to limitToFirst '+'or limitToLast).');}return new QueryImpl(query._repo,query._path,queryParamsLimitToFirst(query._queryParams,this._limit),query._orderByCalled);};return QueryLimitToFirstConstraint;}(QueryConstraint);/**\r\n * Creates a new `QueryConstraint` that if limited to the first specific number\r\n * of children.\r\n *\r\n * The `limitToFirst()` method is used to set a maximum number of children to be\r\n * synced for a given callback. If we set a limit of 100, we will initially only\r\n * receive up to 100 `child_added` events. If we have fewer than 100 messages\r\n * stored in our Database, a `child_added` event will fire for each message.\r\n * However, if we have over 100 messages, we will only receive a `child_added`\r\n * event for the first 100 ordered messages. As items change, we will receive\r\n * `child_removed` events for each item that drops out of the active list so\r\n * that the total number stays at 100.\r\n *\r\n * You can read more about `limitToFirst()` in\r\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#filtering_data | Filtering data}.\r\n *\r\n * @param limit - The maximum number of nodes to include in this query.\r\n */function limitToFirst(limit){if(typeof limit!=='number'||Math.floor(limit)!==limit||limit<=0){throw new Error('limitToFirst: First argument must be a positive integer.');}return new QueryLimitToFirstConstraint(limit);}var QueryLimitToLastConstraint=/** @class */function(_super){__extends(QueryLimitToLastConstraint,_super);function QueryLimitToLastConstraint(_limit){var _this=_super.call(this)||this;_this._limit=_limit;return _this;}QueryLimitToLastConstraint.prototype._apply=function(query){if(query._queryParams.hasLimit()){throw new Error('limitToLast: Limit was already set (by another call to limitToFirst '+'or limitToLast).');}return new QueryImpl(query._repo,query._path,queryParamsLimitToLast(query._queryParams,this._limit),query._orderByCalled);};return QueryLimitToLastConstraint;}(QueryConstraint);/**\r\n * Creates a new `QueryConstraint` that is limited to return only the last\r\n * specified number of children.\r\n *\r\n * The `limitToLast()` method is used to set a maximum number of children to be\r\n * synced for a given callback. If we set a limit of 100, we will initially only\r\n * receive up to 100 `child_added` events. If we have fewer than 100 messages\r\n * stored in our Database, a `child_added` event will fire for each message.\r\n * However, if we have over 100 messages, we will only receive a `child_added`\r\n * event for the last 100 ordered messages. As items change, we will receive\r\n * `child_removed` events for each item that drops out of the active list so\r\n * that the total number stays at 100.\r\n *\r\n * You can read more about `limitToLast()` in\r\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#filtering_data | Filtering data}.\r\n *\r\n * @param limit - The maximum number of nodes to include in this query.\r\n */function limitToLast(limit){if(typeof limit!=='number'||Math.floor(limit)!==limit||limit<=0){throw new Error('limitToLast: First argument must be a positive integer.');}return new QueryLimitToLastConstraint(limit);}var QueryOrderByChildConstraint=/** @class */function(_super){__extends(QueryOrderByChildConstraint,_super);function QueryOrderByChildConstraint(_path){var _this=_super.call(this)||this;_this._path=_path;return _this;}QueryOrderByChildConstraint.prototype._apply=function(query){validateNoPreviousOrderByCall(query,'orderByChild');var parsedPath=new Path(this._path);if(pathIsEmpty(parsedPath)){throw new Error('orderByChild: cannot pass in empty path. Use orderByValue() instead.');}var index=new PathIndex(parsedPath);var newParams=queryParamsOrderBy(query._queryParams,index);validateQueryEndpoints(newParams);return new QueryImpl(query._repo,query._path,newParams,/*orderByCalled=*/true);};return QueryOrderByChildConstraint;}(QueryConstraint);/**\r\n * Creates a new `QueryConstraint` that orders by the specified child key.\r\n *\r\n * Queries can only order by one key at a time. Calling `orderByChild()`\r\n * multiple times on the same query is an error.\r\n *\r\n * Firebase queries allow you to order your data by any child key on the fly.\r\n * However, if you know in advance what your indexes will be, you can define\r\n * them via the .indexOn rule in your Security Rules for better performance. See\r\n * the{@link https://firebase.google.com/docs/database/security/indexing-data}\r\n * rule for more information.\r\n *\r\n * You can read more about `orderByChild()` in\r\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sort_data | Sort data}.\r\n *\r\n * @param path - The path to order by.\r\n */function orderByChild(path){if(path==='$key'){throw new Error('orderByChild: \"$key\" is invalid.  Use orderByKey() instead.');}else if(path==='$priority'){throw new Error('orderByChild: \"$priority\" is invalid.  Use orderByPriority() instead.');}else if(path==='$value'){throw new Error('orderByChild: \"$value\" is invalid.  Use orderByValue() instead.');}validatePathString('orderByChild','path',path,false);return new QueryOrderByChildConstraint(path);}var QueryOrderByKeyConstraint=/** @class */function(_super){__extends(QueryOrderByKeyConstraint,_super);function QueryOrderByKeyConstraint(){return _super!==null&&_super.apply(this,arguments)||this;}QueryOrderByKeyConstraint.prototype._apply=function(query){validateNoPreviousOrderByCall(query,'orderByKey');var newParams=queryParamsOrderBy(query._queryParams,KEY_INDEX);validateQueryEndpoints(newParams);return new QueryImpl(query._repo,query._path,newParams,/*orderByCalled=*/true);};return QueryOrderByKeyConstraint;}(QueryConstraint);/**\r\n * Creates a new `QueryConstraint` that orders by the key.\r\n *\r\n * Sorts the results of a query by their (ascending) key values.\r\n *\r\n * You can read more about `orderByKey()` in\r\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sort_data | Sort data}.\r\n */function orderByKey(){return new QueryOrderByKeyConstraint();}var QueryOrderByPriorityConstraint=/** @class */function(_super){__extends(QueryOrderByPriorityConstraint,_super);function QueryOrderByPriorityConstraint(){return _super!==null&&_super.apply(this,arguments)||this;}QueryOrderByPriorityConstraint.prototype._apply=function(query){validateNoPreviousOrderByCall(query,'orderByPriority');var newParams=queryParamsOrderBy(query._queryParams,PRIORITY_INDEX);validateQueryEndpoints(newParams);return new QueryImpl(query._repo,query._path,newParams,/*orderByCalled=*/true);};return QueryOrderByPriorityConstraint;}(QueryConstraint);/**\r\n * Creates a new `QueryConstraint` that orders by priority.\r\n *\r\n * Applications need not use priority but can order collections by\r\n * ordinary properties (see\r\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sort_data | Sort data}\r\n * for alternatives to priority.\r\n */function orderByPriority(){return new QueryOrderByPriorityConstraint();}var QueryOrderByValueConstraint=/** @class */function(_super){__extends(QueryOrderByValueConstraint,_super);function QueryOrderByValueConstraint(){return _super!==null&&_super.apply(this,arguments)||this;}QueryOrderByValueConstraint.prototype._apply=function(query){validateNoPreviousOrderByCall(query,'orderByValue');var newParams=queryParamsOrderBy(query._queryParams,VALUE_INDEX);validateQueryEndpoints(newParams);return new QueryImpl(query._repo,query._path,newParams,/*orderByCalled=*/true);};return QueryOrderByValueConstraint;}(QueryConstraint);/**\r\n * Creates a new `QueryConstraint` that orders by value.\r\n *\r\n * If the children of a query are all scalar values (string, number, or\r\n * boolean), you can order the results by their (ascending) values.\r\n *\r\n * You can read more about `orderByValue()` in\r\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sort_data | Sort data}.\r\n */function orderByValue(){return new QueryOrderByValueConstraint();}var QueryEqualToValueConstraint=/** @class */function(_super){__extends(QueryEqualToValueConstraint,_super);function QueryEqualToValueConstraint(_value,_key){var _this=_super.call(this)||this;_this._value=_value;_this._key=_key;return _this;}QueryEqualToValueConstraint.prototype._apply=function(query){validateFirebaseDataArg('equalTo',this._value,query._path,false);if(query._queryParams.hasStart()){throw new Error('equalTo: Starting point was already set (by another call to startAt/startAfter or '+'equalTo).');}if(query._queryParams.hasEnd()){throw new Error('equalTo: Ending point was already set (by another call to endAt/endBefore or '+'equalTo).');}return new QueryEndAtConstraint(this._value,this._key)._apply(new QueryStartAtConstraint(this._value,this._key)._apply(query));};return QueryEqualToValueConstraint;}(QueryConstraint);/**\r\n * Creates a `QueryConstraint` that includes children that match the specified\r\n * value.\r\n *\r\n * Using `startAt()`, `startAfter()`, `endBefore()`, `endAt()` and `equalTo()`\r\n * allows you to choose arbitrary starting and ending points for your queries.\r\n *\r\n * The optional key argument can be used to further limit the range of the\r\n * query. If it is specified, then children that have exactly the specified\r\n * value must also have exactly the specified key as their key name. This can be\r\n * used to filter result sets with many matches for the same value.\r\n *\r\n * You can read more about `equalTo()` in\r\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#filtering_data | Filtering data}.\r\n *\r\n * @param value - The value to match for. The argument type depends on which\r\n * `orderBy*()` function was used in this query. Specify a value that matches\r\n * the `orderBy*()` type. When used in combination with `orderByKey()`, the\r\n * value must be a string.\r\n * @param key - The child key to start at, among the children with the\r\n * previously specified priority. This argument is only allowed if ordering by\r\n * child, value, or priority.\r\n */function equalTo(value,key){validateKey('equalTo','key',key,true);return new QueryEqualToValueConstraint(value,key);}/**\r\n * Creates a new immutable instance of `Query` that is extended to also include\r\n * additional query constraints.\r\n *\r\n * @param query - The Query instance to use as a base for the new constraints.\r\n * @param queryConstraints - The list of `QueryConstraint`s to apply.\r\n * @throws if any of the provided query constraints cannot be combined with the\r\n * existing or new constraints.\r\n */function query(query){var e_1,_a;var queryConstraints=[];for(var _i=1;_i<arguments.length;_i++){queryConstraints[_i-1]=arguments[_i];}var queryImpl=getModularInstance(query);try{for(var queryConstraints_1=__values(queryConstraints),queryConstraints_1_1=queryConstraints_1.next();!queryConstraints_1_1.done;queryConstraints_1_1=queryConstraints_1.next()){var constraint=queryConstraints_1_1.value;queryImpl=constraint._apply(queryImpl);}}catch(e_1_1){e_1={error:e_1_1};}finally{try{if(queryConstraints_1_1&&!queryConstraints_1_1.done&&(_a=queryConstraints_1.return))_a.call(queryConstraints_1);}finally{if(e_1)throw e_1.error;}}return queryImpl;}/**\r\n * Define reference constructor in various modules\r\n *\r\n * We are doing this here to avoid several circular\r\n * dependency issues\r\n */syncPointSetReferenceConstructor(ReferenceImpl);syncTreeSetReferenceConstructor(ReferenceImpl);/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * This variable is also defined in the firebase node.js admin SDK. Before\r\n * modifying this definition, consult the definition in:\r\n *\r\n * https://github.com/firebase/firebase-admin-node\r\n *\r\n * and make sure the two are consistent.\r\n */var FIREBASE_DATABASE_EMULATOR_HOST_VAR='FIREBASE_DATABASE_EMULATOR_HOST';/**\r\n * Creates and caches Repo instances.\r\n */var repos={};/**\r\n * If true, new Repos will be created to use ReadonlyRestClient (for testing purposes).\r\n */var useRestClient=false;/**\r\n * Update an existing repo in place to point to a new host/port.\r\n */function repoManagerApplyEmulatorSettings(repo,host,port,tokenProvider){repo.repoInfo_=new RepoInfo(host+\":\"+port,/* secure= */false,repo.repoInfo_.namespace,repo.repoInfo_.webSocketOnly,repo.repoInfo_.nodeAdmin,repo.repoInfo_.persistenceKey,repo.repoInfo_.includeNamespaceInQueryParams);if(tokenProvider){repo.authTokenProvider_=tokenProvider;}}/**\r\n * This function should only ever be called to CREATE a new database instance.\r\n * @internal\r\n */function repoManagerDatabaseFromApp(app,authProvider,appCheckProvider,url,nodeAdmin){var dbUrl=url||app.options.databaseURL;if(dbUrl===undefined){if(!app.options.projectId){fatal(\"Can't determine Firebase Database URL. Be sure to include \"+' a Project ID when calling firebase.initializeApp().');}log('Using default host for project ',app.options.projectId);dbUrl=app.options.projectId+\"-default-rtdb.firebaseio.com\";}var parsedUrl=parseRepoInfo(dbUrl,nodeAdmin);var repoInfo=parsedUrl.repoInfo;var isEmulator;var dbEmulatorHost=undefined;if(typeof process!=='undefined'){dbEmulatorHost=process.env[FIREBASE_DATABASE_EMULATOR_HOST_VAR];}if(dbEmulatorHost){isEmulator=true;dbUrl=\"http://\"+dbEmulatorHost+\"?ns=\"+repoInfo.namespace;parsedUrl=parseRepoInfo(dbUrl,nodeAdmin);repoInfo=parsedUrl.repoInfo;}else{isEmulator=!parsedUrl.repoInfo.secure;}var authTokenProvider=nodeAdmin&&isEmulator?new EmulatorTokenProvider(EmulatorTokenProvider.OWNER):new FirebaseAuthTokenProvider(app.name,app.options,authProvider);validateUrl('Invalid Firebase Database URL',parsedUrl);if(!pathIsEmpty(parsedUrl.path)){fatal('Database URL must point to the root of a Firebase Database '+'(not including a child path).');}var repo=repoManagerCreateRepo(repoInfo,app,authTokenProvider,new AppCheckTokenProvider(app.name,appCheckProvider));return new Database$1(repo,app);}/**\r\n * Remove the repo and make sure it is disconnected.\r\n *\r\n */function repoManagerDeleteRepo(repo,appName){var appRepos=repos[appName];// This should never happen...\nif(!appRepos||appRepos[repo.key]!==repo){fatal(\"Database \"+appName+\"(\"+repo.repoInfo_+\") has already been deleted.\");}repoInterrupt(repo);delete appRepos[repo.key];}/**\r\n * Ensures a repo doesn't already exist and then creates one using the\r\n * provided app.\r\n *\r\n * @param repoInfo - The metadata about the Repo\r\n * @returns The Repo object for the specified server / repoName.\r\n */function repoManagerCreateRepo(repoInfo,app,authTokenProvider,appCheckProvider){var appRepos=repos[app.name];if(!appRepos){appRepos={};repos[app.name]=appRepos;}var repo=appRepos[repoInfo.toURLString()];if(repo){fatal('Database initialized multiple times. Please make sure the format of the database URL matches with each database() call.');}repo=new Repo(repoInfo,useRestClient,authTokenProvider,appCheckProvider);appRepos[repoInfo.toURLString()]=repo;return repo;}/**\r\n * Forces us to use ReadonlyRestClient instead of PersistentConnection for new Repos.\r\n */function repoManagerForceRestClient(forceRestClient){useRestClient=forceRestClient;}/**\r\n * Class representing a Firebase Realtime Database.\r\n */var Database$1=/** @class */function(){/** @hideconstructor */function Database(_repoInternal,/** The FirebaseApp associated with this Realtime Database instance. */app){this._repoInternal=_repoInternal;this.app=app;/** Represents a database instance. */this['type']='database';/** Track if the instance has been used (root or repo accessed) */this._instanceStarted=false;}Object.defineProperty(Database.prototype,\"_repo\",{get:function(){if(!this._instanceStarted){repoStart(this._repoInternal,this.app.options.appId,this.app.options['databaseAuthVariableOverride']);this._instanceStarted=true;}return this._repoInternal;},enumerable:false,configurable:true});Object.defineProperty(Database.prototype,\"_root\",{get:function(){if(!this._rootInternal){this._rootInternal=new ReferenceImpl(this._repo,newEmptyPath());}return this._rootInternal;},enumerable:false,configurable:true});Database.prototype._delete=function(){if(this._rootInternal!==null){repoManagerDeleteRepo(this._repo,this.app.name);this._repoInternal=null;this._rootInternal=null;}return Promise.resolve();};Database.prototype._checkNotDeleted=function(apiName){if(this._rootInternal===null){fatal('Cannot call '+apiName+' on a deleted database.');}};return Database;}();/**\r\n * Modify the provided instance to communicate with the Realtime Database\r\n * emulator.\r\n *\r\n * <p>Note: This method must be called before performing any other operation.\r\n *\r\n * @param db - The instance to modify.\r\n * @param host - The emulator host (ex: localhost)\r\n * @param port - The emulator port (ex: 8080)\r\n * @param options.mockUserToken - the mock auth token to use for unit testing Security Rules\r\n */function connectDatabaseEmulator(db,host,port,options){if(options===void 0){options={};}db=getModularInstance(db);db._checkNotDeleted('useEmulator');if(db._instanceStarted){fatal('Cannot call useEmulator() after instance has already been initialized.');}var repo=db._repoInternal;var tokenProvider=undefined;if(repo.repoInfo_.nodeAdmin){if(options.mockUserToken){fatal('mockUserToken is not supported by the Admin SDK. For client access with mock users, please use the \"firebase\" package instead of \"firebase-admin\".');}tokenProvider=new EmulatorTokenProvider(EmulatorTokenProvider.OWNER);}else if(options.mockUserToken){var token=typeof options.mockUserToken==='string'?options.mockUserToken:createMockUserToken(options.mockUserToken,db.app.options.projectId);tokenProvider=new EmulatorTokenProvider(token);}// Modify the repo to apply emulator settings\nrepoManagerApplyEmulatorSettings(repo,host,port,tokenProvider);}/**\r\n * Disconnects from the server (all Database operations will be completed\r\n * offline).\r\n *\r\n * The client automatically maintains a persistent connection to the Database\r\n * server, which will remain active indefinitely and reconnect when\r\n * disconnected. However, the `goOffline()` and `goOnline()` methods may be used\r\n * to control the client connection in cases where a persistent connection is\r\n * undesirable.\r\n *\r\n * While offline, the client will no longer receive data updates from the\r\n * Database. However, all Database operations performed locally will continue to\r\n * immediately fire events, allowing your application to continue behaving\r\n * normally. Additionally, each operation performed locally will automatically\r\n * be queued and retried upon reconnection to the Database server.\r\n *\r\n * To reconnect to the Database and begin receiving remote events, see\r\n * `goOnline()`.\r\n *\r\n * @param db - The instance to disconnect.\r\n */function goOffline(db){db=getModularInstance(db);db._checkNotDeleted('goOffline');repoInterrupt(db._repo);}/**\r\n * Reconnects to the server and synchronizes the offline Database state\r\n * with the server state.\r\n *\r\n * This method should be used after disabling the active connection with\r\n * `goOffline()`. Once reconnected, the client will transmit the proper data\r\n * and fire the appropriate events so that your client \"catches up\"\r\n * automatically.\r\n *\r\n * @param db - The instance to reconnect.\r\n */function goOnline(db){db=getModularInstance(db);db._checkNotDeleted('goOnline');repoResume(db._repo);}/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */var SERVER_TIMESTAMP={'.sv':'timestamp'};/**\r\n * Returns a placeholder value for auto-populating the current timestamp (time\r\n * since the Unix epoch, in milliseconds) as determined by the Firebase\r\n * servers.\r\n */function serverTimestamp(){return SERVER_TIMESTAMP;}/**\r\n * Returns a placeholder value that can be used to atomically increment the\r\n * current database value by the provided delta.\r\n *\r\n * @param delta - the amount to modify the current value atomically.\r\n * @returns A placeholder value for modifying data atomically server-side.\r\n */function increment(delta){return{'.sv':{'increment':delta}};}/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * A type for the resolve value of Firebase.transaction.\r\n */var TransactionResult$1=/** @class */function(){/** @hideconstructor */function TransactionResult(/** Whether the transaction was successfully committed. */committed,/** The resulting data snapshot. */snapshot){this.committed=committed;this.snapshot=snapshot;}/** Returns a JSON-serializable representation of this object. */TransactionResult.prototype.toJSON=function(){return{committed:this.committed,snapshot:this.snapshot.toJSON()};};return TransactionResult;}();/**\r\n * Atomically modifies the data at this location.\r\n *\r\n * Atomically modify the data at this location. Unlike a normal `set()`, which\r\n * just overwrites the data regardless of its previous value, `transaction()` is\r\n * used to modify the existing value to a new value, ensuring there are no\r\n * conflicts with other clients writing to the same location at the same time.\r\n *\r\n * To accomplish this, you pass `runTransaction()` an update function which is\r\n * used to transform the current value into a new value. If another client\r\n * writes to the location before your new value is successfully written, your\r\n * update function will be called again with the new current value, and the\r\n * write will be retried. This will happen repeatedly until your write succeeds\r\n * without conflict or you abort the transaction by not returning a value from\r\n * your update function.\r\n *\r\n * Note: Modifying data with `set()` will cancel any pending transactions at\r\n * that location, so extreme care should be taken if mixing `set()` and\r\n * `transaction()` to update the same data.\r\n *\r\n * Note: When using transactions with Security and Firebase Rules in place, be\r\n * aware that a client needs `.read` access in addition to `.write` access in\r\n * order to perform a transaction. This is because the client-side nature of\r\n * transactions requires the client to read the data in order to transactionally\r\n * update it.\r\n *\r\n * @param ref - The location to atomically modify.\r\n * @param transactionUpdate - A developer-supplied function which will be passed\r\n * the current data stored at this location (as a JavaScript object). The\r\n * function should return the new value it would like written (as a JavaScript\r\n * object). If `undefined` is returned (i.e. you return with no arguments) the\r\n * transaction will be aborted and the data at this location will not be\r\n * modified.\r\n * @param options - An options object to configure transactions.\r\n * @returns A Promise that can optionally be used instead of the onComplete\r\n * callback to handle success and failure.\r\n */function runTransaction(ref,// eslint-disable-next-line @typescript-eslint/no-explicit-any\ntransactionUpdate,options){var _a;ref=getModularInstance(ref);validateWritablePath('Reference.transaction',ref._path);if(ref.key==='.length'||ref.key==='.keys'){throw'Reference.transaction failed: '+ref.key+' is a read-only object.';}var applyLocally=(_a=options===null||options===void 0?void 0:options.applyLocally)!==null&&_a!==void 0?_a:true;var deferred=new Deferred();var promiseComplete=function(error,committed,node){var dataSnapshot=null;if(error){deferred.reject(error);}else{dataSnapshot=new DataSnapshot$1(node,new ReferenceImpl(ref._repo,ref._path),PRIORITY_INDEX);deferred.resolve(new TransactionResult$1(committed,dataSnapshot));}};// Add a watch to make sure we get server updates.\nvar unwatcher=onValue(ref,function(){});repoStartTransaction(ref._repo,ref._path,transactionUpdate,promiseComplete,unwatcher,applyLocally);return deferred.promise;}/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */var OnDisconnect=/** @class */function(){function OnDisconnect(_delegate){this._delegate=_delegate;}OnDisconnect.prototype.cancel=function(onComplete){validateArgCount('OnDisconnect.cancel',0,1,arguments.length);validateCallback('OnDisconnect.cancel','onComplete',onComplete,true);var result=this._delegate.cancel();if(onComplete){result.then(function(){return onComplete(null);},function(error){return onComplete(error);});}return result;};OnDisconnect.prototype.remove=function(onComplete){validateArgCount('OnDisconnect.remove',0,1,arguments.length);validateCallback('OnDisconnect.remove','onComplete',onComplete,true);var result=this._delegate.remove();if(onComplete){result.then(function(){return onComplete(null);},function(error){return onComplete(error);});}return result;};OnDisconnect.prototype.set=function(value,onComplete){validateArgCount('OnDisconnect.set',1,2,arguments.length);validateCallback('OnDisconnect.set','onComplete',onComplete,true);var result=this._delegate.set(value);if(onComplete){result.then(function(){return onComplete(null);},function(error){return onComplete(error);});}return result;};OnDisconnect.prototype.setWithPriority=function(value,priority,onComplete){validateArgCount('OnDisconnect.setWithPriority',2,3,arguments.length);validateCallback('OnDisconnect.setWithPriority','onComplete',onComplete,true);var result=this._delegate.setWithPriority(value,priority);if(onComplete){result.then(function(){return onComplete(null);},function(error){return onComplete(error);});}return result;};OnDisconnect.prototype.update=function(objectToMerge,onComplete){validateArgCount('OnDisconnect.update',1,2,arguments.length);if(Array.isArray(objectToMerge)){var newObjectToMerge={};for(var i=0;i<objectToMerge.length;++i){newObjectToMerge[''+i]=objectToMerge[i];}objectToMerge=newObjectToMerge;warn('Passing an Array to firebase.database.onDisconnect().update() is deprecated. Use set() if you want to overwrite the '+'existing data, or an Object with integer keys if you really do want to only update some of the children.');}validateCallback('OnDisconnect.update','onComplete',onComplete,true);var result=this._delegate.update(objectToMerge);if(onComplete){result.then(function(){return onComplete(null);},function(error){return onComplete(error);});}return result;};return OnDisconnect;}();/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */var TransactionResult=/** @class */function(){/**\r\n     * A type for the resolve value of Firebase.transaction.\r\n     */function TransactionResult(committed,snapshot){this.committed=committed;this.snapshot=snapshot;}// Do not create public documentation. This is intended to make JSON serialization work but is otherwise unnecessary\n// for end-users\nTransactionResult.prototype.toJSON=function(){validateArgCount('TransactionResult.toJSON',0,1,arguments.length);return{committed:this.committed,snapshot:this.snapshot.toJSON()};};return TransactionResult;}();/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /* eslint-enable @typescript-eslint/no-explicit-any */ /**\r\n * Class representing a firebase data snapshot.  It wraps a SnapshotNode and\r\n * surfaces the public methods (val, forEach, etc.) we want to expose.\r\n */var DataSnapshot=/** @class */function(){function DataSnapshot(_database,_delegate){this._database=_database;this._delegate=_delegate;}/**\r\n     * Retrieves the snapshot contents as JSON.  Returns null if the snapshot is\r\n     * empty.\r\n     *\r\n     * @returns JSON representation of the DataSnapshot contents, or null if empty.\r\n     */DataSnapshot.prototype.val=function(){validateArgCount('DataSnapshot.val',0,0,arguments.length);return this._delegate.val();};/**\r\n     * Returns the snapshot contents as JSON, including priorities of node.  Suitable for exporting\r\n     * the entire node contents.\r\n     * @returns JSON representation of the DataSnapshot contents, or null if empty.\r\n     */DataSnapshot.prototype.exportVal=function(){validateArgCount('DataSnapshot.exportVal',0,0,arguments.length);return this._delegate.exportVal();};// Do not create public documentation. This is intended to make JSON serialization work but is otherwise unnecessary\n// for end-users\nDataSnapshot.prototype.toJSON=function(){// Optional spacer argument is unnecessary because we're depending on recursion rather than stringifying the content\nvalidateArgCount('DataSnapshot.toJSON',0,1,arguments.length);return this._delegate.toJSON();};/**\r\n     * Returns whether the snapshot contains a non-null value.\r\n     *\r\n     * @returns Whether the snapshot contains a non-null value, or is empty.\r\n     */DataSnapshot.prototype.exists=function(){validateArgCount('DataSnapshot.exists',0,0,arguments.length);return this._delegate.exists();};/**\r\n     * Returns a DataSnapshot of the specified child node's contents.\r\n     *\r\n     * @param path - Path to a child.\r\n     * @returns DataSnapshot for child node.\r\n     */DataSnapshot.prototype.child=function(path){validateArgCount('DataSnapshot.child',0,1,arguments.length);// Ensure the childPath is a string (can be a number)\npath=String(path);validatePathString('DataSnapshot.child','path',path,false);return new DataSnapshot(this._database,this._delegate.child(path));};/**\r\n     * Returns whether the snapshot contains a child at the specified path.\r\n     *\r\n     * @param path - Path to a child.\r\n     * @returns Whether the child exists.\r\n     */DataSnapshot.prototype.hasChild=function(path){validateArgCount('DataSnapshot.hasChild',1,1,arguments.length);validatePathString('DataSnapshot.hasChild','path',path,false);return this._delegate.hasChild(path);};/**\r\n     * Returns the priority of the object, or null if no priority was set.\r\n     *\r\n     * @returns The priority.\r\n     */DataSnapshot.prototype.getPriority=function(){validateArgCount('DataSnapshot.getPriority',0,0,arguments.length);return this._delegate.priority;};/**\r\n     * Iterates through child nodes and calls the specified action for each one.\r\n     *\r\n     * @param action - Callback function to be called\r\n     * for each child.\r\n     * @returns True if forEach was canceled by action returning true for\r\n     * one of the child nodes.\r\n     */DataSnapshot.prototype.forEach=function(action){var _this=this;validateArgCount('DataSnapshot.forEach',1,1,arguments.length);validateCallback('DataSnapshot.forEach','action',action,false);return this._delegate.forEach(function(expDataSnapshot){return action(new DataSnapshot(_this._database,expDataSnapshot));});};/**\r\n     * Returns whether this DataSnapshot has children.\r\n     * @returns True if the DataSnapshot contains 1 or more child nodes.\r\n     */DataSnapshot.prototype.hasChildren=function(){validateArgCount('DataSnapshot.hasChildren',0,0,arguments.length);return this._delegate.hasChildren();};Object.defineProperty(DataSnapshot.prototype,\"key\",{get:function(){return this._delegate.key;},enumerable:false,configurable:true});/**\r\n     * Returns the number of children for this DataSnapshot.\r\n     * @returns The number of children that this DataSnapshot contains.\r\n     */DataSnapshot.prototype.numChildren=function(){validateArgCount('DataSnapshot.numChildren',0,0,arguments.length);return this._delegate.size;};/**\r\n     * @returns The Firebase reference for the location this snapshot's data came\r\n     * from.\r\n     */DataSnapshot.prototype.getRef=function(){validateArgCount('DataSnapshot.ref',0,0,arguments.length);return new Reference(this._database,this._delegate.ref);};Object.defineProperty(DataSnapshot.prototype,\"ref\",{get:function(){return this.getRef();},enumerable:false,configurable:true});return DataSnapshot;}();/**\r\n * A Query represents a filter to be applied to a firebase location.  This object purely represents the\r\n * query expression (and exposes our public API to build the query).  The actual query logic is in ViewBase.js.\r\n *\r\n * Since every Firebase reference is a query, Firebase inherits from this object.\r\n */var Query=/** @class */function(){function Query(database,_delegate){this.database=database;this._delegate=_delegate;}Query.prototype.on=function(eventType,callback,cancelCallbackOrContext,context){var _this=this;var _a;validateArgCount('Query.on',2,4,arguments.length);validateCallback('Query.on','callback',callback,false);var ret=Query.getCancelAndContextArgs_('Query.on',cancelCallbackOrContext,context);var valueCallback=function(expSnapshot,previousChildName){callback.call(ret.context,new DataSnapshot(_this.database,expSnapshot),previousChildName);};valueCallback.userCallback=callback;valueCallback.context=ret.context;var cancelCallback=(_a=ret.cancel)===null||_a===void 0?void 0:_a.bind(ret.context);switch(eventType){case'value':onValue(this._delegate,valueCallback,cancelCallback);return callback;case'child_added':onChildAdded(this._delegate,valueCallback,cancelCallback);return callback;case'child_removed':onChildRemoved(this._delegate,valueCallback,cancelCallback);return callback;case'child_changed':onChildChanged(this._delegate,valueCallback,cancelCallback);return callback;case'child_moved':onChildMoved(this._delegate,valueCallback,cancelCallback);return callback;default:throw new Error(errorPrefix('Query.on','eventType')+'must be a valid event type = \"value\", \"child_added\", \"child_removed\", '+'\"child_changed\", or \"child_moved\".');}};Query.prototype.off=function(eventType,callback,context){validateArgCount('Query.off',0,3,arguments.length);validateEventType('Query.off',eventType,true);validateCallback('Query.off','callback',callback,true);validateContextObject('Query.off','context',context,true);if(callback){var valueCallback=function(){};valueCallback.userCallback=callback;valueCallback.context=context;off(this._delegate,eventType,valueCallback);}else{off(this._delegate,eventType);}};/**\r\n     * Get the server-value for this query, or return a cached value if not connected.\r\n     */Query.prototype.get=function(){var _this=this;return get(this._delegate).then(function(expSnapshot){return new DataSnapshot(_this.database,expSnapshot);});};/**\r\n     * Attaches a listener, waits for the first event, and then removes the listener\r\n     */Query.prototype.once=function(eventType,callback,failureCallbackOrContext,context){var _this=this;validateArgCount('Query.once',1,4,arguments.length);validateCallback('Query.once','callback',callback,true);var ret=Query.getCancelAndContextArgs_('Query.once',failureCallbackOrContext,context);var deferred=new Deferred();var valueCallback=function(expSnapshot,previousChildName){var result=new DataSnapshot(_this.database,expSnapshot);if(callback){callback.call(ret.context,result,previousChildName);}deferred.resolve(result);};valueCallback.userCallback=callback;valueCallback.context=ret.context;var cancelCallback=function(error){if(ret.cancel){ret.cancel.call(ret.context,error);}deferred.reject(error);};switch(eventType){case'value':onValue(this._delegate,valueCallback,cancelCallback,{onlyOnce:true});break;case'child_added':onChildAdded(this._delegate,valueCallback,cancelCallback,{onlyOnce:true});break;case'child_removed':onChildRemoved(this._delegate,valueCallback,cancelCallback,{onlyOnce:true});break;case'child_changed':onChildChanged(this._delegate,valueCallback,cancelCallback,{onlyOnce:true});break;case'child_moved':onChildMoved(this._delegate,valueCallback,cancelCallback,{onlyOnce:true});break;default:throw new Error(errorPrefix('Query.once','eventType')+'must be a valid event type = \"value\", \"child_added\", \"child_removed\", '+'\"child_changed\", or \"child_moved\".');}return deferred.promise;};/**\r\n     * Set a limit and anchor it to the start of the window.\r\n     */Query.prototype.limitToFirst=function(limit){validateArgCount('Query.limitToFirst',1,1,arguments.length);return new Query(this.database,query(this._delegate,limitToFirst(limit)));};/**\r\n     * Set a limit and anchor it to the end of the window.\r\n     */Query.prototype.limitToLast=function(limit){validateArgCount('Query.limitToLast',1,1,arguments.length);return new Query(this.database,query(this._delegate,limitToLast(limit)));};/**\r\n     * Given a child path, return a new query ordered by the specified grandchild path.\r\n     */Query.prototype.orderByChild=function(path){validateArgCount('Query.orderByChild',1,1,arguments.length);return new Query(this.database,query(this._delegate,orderByChild(path)));};/**\r\n     * Return a new query ordered by the KeyIndex\r\n     */Query.prototype.orderByKey=function(){validateArgCount('Query.orderByKey',0,0,arguments.length);return new Query(this.database,query(this._delegate,orderByKey()));};/**\r\n     * Return a new query ordered by the PriorityIndex\r\n     */Query.prototype.orderByPriority=function(){validateArgCount('Query.orderByPriority',0,0,arguments.length);return new Query(this.database,query(this._delegate,orderByPriority()));};/**\r\n     * Return a new query ordered by the ValueIndex\r\n     */Query.prototype.orderByValue=function(){validateArgCount('Query.orderByValue',0,0,arguments.length);return new Query(this.database,query(this._delegate,orderByValue()));};Query.prototype.startAt=function(value,name){if(value===void 0){value=null;}validateArgCount('Query.startAt',0,2,arguments.length);return new Query(this.database,query(this._delegate,startAt(value,name)));};Query.prototype.startAfter=function(value,name){if(value===void 0){value=null;}validateArgCount('Query.startAfter',0,2,arguments.length);return new Query(this.database,query(this._delegate,startAfter(value,name)));};Query.prototype.endAt=function(value,name){if(value===void 0){value=null;}validateArgCount('Query.endAt',0,2,arguments.length);return new Query(this.database,query(this._delegate,endAt(value,name)));};Query.prototype.endBefore=function(value,name){if(value===void 0){value=null;}validateArgCount('Query.endBefore',0,2,arguments.length);return new Query(this.database,query(this._delegate,endBefore(value,name)));};/**\r\n     * Load the selection of children with exactly the specified value, and, optionally,\r\n     * the specified name.\r\n     */Query.prototype.equalTo=function(value,name){validateArgCount('Query.equalTo',1,2,arguments.length);return new Query(this.database,query(this._delegate,equalTo(value,name)));};/**\r\n     * @returns URL for this location.\r\n     */Query.prototype.toString=function(){validateArgCount('Query.toString',0,0,arguments.length);return this._delegate.toString();};// Do not create public documentation. This is intended to make JSON serialization work but is otherwise unnecessary\n// for end-users.\nQuery.prototype.toJSON=function(){// An optional spacer argument is unnecessary for a string.\nvalidateArgCount('Query.toJSON',0,1,arguments.length);return this._delegate.toJSON();};/**\r\n     * Return true if this query and the provided query are equivalent; otherwise, return false.\r\n     */Query.prototype.isEqual=function(other){validateArgCount('Query.isEqual',1,1,arguments.length);if(!(other instanceof Query)){var error='Query.isEqual failed: First argument must be an instance of firebase.database.Query.';throw new Error(error);}return this._delegate.isEqual(other._delegate);};/**\r\n     * Helper used by .on and .once to extract the context and or cancel arguments.\r\n     * @param fnName - The function name (on or once)\r\n     *\r\n     */Query.getCancelAndContextArgs_=function(fnName,cancelOrContext,context){var ret={cancel:undefined,context:undefined};if(cancelOrContext&&context){ret.cancel=cancelOrContext;validateCallback(fnName,'cancel',ret.cancel,true);ret.context=context;validateContextObject(fnName,'context',ret.context,true);}else if(cancelOrContext){// we have either a cancel callback or a context.\nif(typeof cancelOrContext==='object'&&cancelOrContext!==null){// it's a context!\nret.context=cancelOrContext;}else if(typeof cancelOrContext==='function'){ret.cancel=cancelOrContext;}else{throw new Error(errorPrefix(fnName,'cancelOrContext')+' must either be a cancel callback or a context object.');}}return ret;};Object.defineProperty(Query.prototype,\"ref\",{get:function(){return new Reference(this.database,new ReferenceImpl(this._delegate._repo,this._delegate._path));},enumerable:false,configurable:true});return Query;}();var Reference=/** @class */function(_super){__extends(Reference,_super);/**\r\n     * Call options:\r\n     *   new Reference(Repo, Path) or\r\n     *   new Reference(url: string, string|RepoManager)\r\n     *\r\n     * Externally - this is the firebase.database.Reference type.\r\n     */function Reference(database,_delegate){var _this=_super.call(this,database,new QueryImpl(_delegate._repo,_delegate._path,new QueryParams(),false))||this;_this.database=database;_this._delegate=_delegate;return _this;}/** @returns {?string} */Reference.prototype.getKey=function(){validateArgCount('Reference.key',0,0,arguments.length);return this._delegate.key;};Reference.prototype.child=function(pathString){validateArgCount('Reference.child',1,1,arguments.length);if(typeof pathString==='number'){pathString=String(pathString);}return new Reference(this.database,child(this._delegate,pathString));};/** @returns {?Reference} */Reference.prototype.getParent=function(){validateArgCount('Reference.parent',0,0,arguments.length);var parent=this._delegate.parent;return parent?new Reference(this.database,parent):null;};/** @returns {!Reference} */Reference.prototype.getRoot=function(){validateArgCount('Reference.root',0,0,arguments.length);return new Reference(this.database,this._delegate.root);};Reference.prototype.set=function(newVal,onComplete){validateArgCount('Reference.set',1,2,arguments.length);validateCallback('Reference.set','onComplete',onComplete,true);var result=set(this._delegate,newVal);if(onComplete){result.then(function(){return onComplete(null);},function(error){return onComplete(error);});}return result;};Reference.prototype.update=function(values,onComplete){validateArgCount('Reference.update',1,2,arguments.length);if(Array.isArray(values)){var newObjectToMerge={};for(var i=0;i<values.length;++i){newObjectToMerge[''+i]=values[i];}values=newObjectToMerge;warn('Passing an Array to Firebase.update() is deprecated. '+'Use set() if you want to overwrite the existing data, or '+'an Object with integer keys if you really do want to '+'only update some of the children.');}validateWritablePath('Reference.update',this._delegate._path);validateCallback('Reference.update','onComplete',onComplete,true);var result=update(this._delegate,values);if(onComplete){result.then(function(){return onComplete(null);},function(error){return onComplete(error);});}return result;};Reference.prototype.setWithPriority=function(newVal,newPriority,onComplete){validateArgCount('Reference.setWithPriority',2,3,arguments.length);validateCallback('Reference.setWithPriority','onComplete',onComplete,true);var result=setWithPriority(this._delegate,newVal,newPriority);if(onComplete){result.then(function(){return onComplete(null);},function(error){return onComplete(error);});}return result;};Reference.prototype.remove=function(onComplete){validateArgCount('Reference.remove',0,1,arguments.length);validateCallback('Reference.remove','onComplete',onComplete,true);var result=remove(this._delegate);if(onComplete){result.then(function(){return onComplete(null);},function(error){return onComplete(error);});}return result;};Reference.prototype.transaction=function(transactionUpdate,onComplete,applyLocally){var _this=this;validateArgCount('Reference.transaction',1,3,arguments.length);validateCallback('Reference.transaction','transactionUpdate',transactionUpdate,false);validateCallback('Reference.transaction','onComplete',onComplete,true);validateBoolean('Reference.transaction','applyLocally',applyLocally,true);var result=runTransaction(this._delegate,transactionUpdate,{applyLocally:applyLocally}).then(function(transactionResult){return new TransactionResult(transactionResult.committed,new DataSnapshot(_this.database,transactionResult.snapshot));});if(onComplete){result.then(function(transactionResult){return onComplete(null,transactionResult.committed,transactionResult.snapshot);},function(error){return onComplete(error,false,null);});}return result;};Reference.prototype.setPriority=function(priority,onComplete){validateArgCount('Reference.setPriority',1,2,arguments.length);validateCallback('Reference.setPriority','onComplete',onComplete,true);var result=setPriority(this._delegate,priority);if(onComplete){result.then(function(){return onComplete(null);},function(error){return onComplete(error);});}return result;};Reference.prototype.push=function(value,onComplete){var _this=this;validateArgCount('Reference.push',0,2,arguments.length);validateCallback('Reference.push','onComplete',onComplete,true);var expPromise=push(this._delegate,value);var promise=expPromise.then(function(expRef){return new Reference(_this.database,expRef);});if(onComplete){promise.then(function(){return onComplete(null);},function(error){return onComplete(error);});}var result=new Reference(this.database,expPromise);result.then=promise.then.bind(promise);result.catch=promise.catch.bind(promise,undefined);return result;};Reference.prototype.onDisconnect=function(){validateWritablePath('Reference.onDisconnect',this._delegate._path);return new OnDisconnect(new OnDisconnect$1(this._delegate._repo,this._delegate._path));};Object.defineProperty(Reference.prototype,\"key\",{get:function(){return this.getKey();},enumerable:false,configurable:true});Object.defineProperty(Reference.prototype,\"parent\",{get:function(){return this.getParent();},enumerable:false,configurable:true});Object.defineProperty(Reference.prototype,\"root\",{get:function(){return this.getRoot();},enumerable:false,configurable:true});return Reference;}(Query);/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * Class representing a firebase database.\r\n */var Database=/** @class */function(){/**\r\n     * The constructor should not be called by users of our public API.\r\n     */function Database(_delegate,app){var _this=this;this._delegate=_delegate;this.app=app;this.INTERNAL={delete:function(){return _this._delegate._delete();}};}/**\r\n     * Modify this instance to communicate with the Realtime Database emulator.\r\n     *\r\n     * <p>Note: This method must be called before performing any other operation.\r\n     *\r\n     * @param host - the emulator host (ex: localhost)\r\n     * @param port - the emulator port (ex: 8080)\r\n     * @param options.mockUserToken - the mock auth token to use for unit testing Security Rules\r\n     */Database.prototype.useEmulator=function(host,port,options){if(options===void 0){options={};}connectDatabaseEmulator(this._delegate,host,port,options);};Database.prototype.ref=function(path){validateArgCount('database.ref',0,1,arguments.length);if(path instanceof Reference){var childRef=refFromURL(this._delegate,path.toString());return new Reference(this,childRef);}else{var childRef=ref(this._delegate,path);return new Reference(this,childRef);}};/**\r\n     * Returns a reference to the root or the path specified in url.\r\n     * We throw a exception if the url is not in the same domain as the\r\n     * current repo.\r\n     * @returns Firebase reference.\r\n     */Database.prototype.refFromURL=function(url){var apiName='database.refFromURL';validateArgCount(apiName,1,1,arguments.length);var childRef=refFromURL(this._delegate,url);return new Reference(this,childRef);};// Make individual repo go offline.\nDatabase.prototype.goOffline=function(){validateArgCount('database.goOffline',0,0,arguments.length);return goOffline(this._delegate);};Database.prototype.goOnline=function(){validateArgCount('database.goOnline',0,0,arguments.length);return goOnline(this._delegate);};Database.ServerValue={TIMESTAMP:serverTimestamp(),increment:function(delta){return increment(delta);}};return Database;}();/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * INTERNAL methods for internal-use only (tests, etc.).\r\n *\r\n * Customers shouldn't use these or else should be aware that they could break at any time.\r\n */var forceLongPolling=function(){WebSocketConnection.forceDisallow();BrowserPollConnection.forceAllow();};var forceWebSockets=function(){BrowserPollConnection.forceDisallow();};/* Used by App Manager */var isWebSocketsAvailable=function(){return WebSocketConnection['isAvailable']();};var setSecurityDebugCallback=function(ref,callback){var connection=ref._delegate._repo.persistentConnection_;// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconnection.securityDebugCallback_=callback;};var stats=function(ref,showDelta){repoStats(ref._delegate._repo,showDelta);};var statsIncrementCounter=function(ref,metric){repoStatsIncrementCounter(ref._delegate._repo,metric);};var dataUpdateCount=function(ref){return ref._delegate._repo.dataUpdateCount;};var interceptServerData=function(ref,callback){return repoInterceptServerData(ref._delegate._repo,callback);};/**\r\n * Used by console to create a database based on the app,\r\n * passed database URL and a custom auth implementation.\r\n *\r\n * @param app - A valid FirebaseApp-like object\r\n * @param url - A valid Firebase databaseURL\r\n * @param version - custom version e.g. firebase-admin version\r\n * @param customAuthImpl - custom auth implementation\r\n */function initStandalone(_a){var app=_a.app,url=_a.url,version=_a.version,customAuthImpl=_a.customAuthImpl,namespace=_a.namespace,_b=_a.nodeAdmin,nodeAdmin=_b===void 0?false:_b;setSDKVersion(version);/**\r\n     * ComponentContainer('database-standalone') is just a placeholder that doesn't perform\r\n     * any actual function.\r\n     */var authProvider=new Provider('auth-internal',new ComponentContainer('database-standalone'));authProvider.setComponent(new Component('auth-internal',function(){return customAuthImpl;},\"PRIVATE\"/* PRIVATE */));return{instance:new Database(repoManagerDatabaseFromApp(app,authProvider,/* appCheckProvider= */undefined,url,nodeAdmin),app),namespace:namespace};}var INTERNAL=/*#__PURE__*/Object.freeze({__proto__:null,forceLongPolling:forceLongPolling,forceWebSockets:forceWebSockets,isWebSocketsAvailable:isWebSocketsAvailable,setSecurityDebugCallback:setSecurityDebugCallback,stats:stats,statsIncrementCounter:statsIncrementCounter,dataUpdateCount:dataUpdateCount,interceptServerData:interceptServerData,initStandalone:initStandalone});/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */var DataConnection=PersistentConnection;// eslint-disable-next-line @typescript-eslint/no-explicit-any\nPersistentConnection.prototype.simpleListen=function(pathString,onComplete){this.sendRequest('q',{p:pathString},onComplete);};// eslint-disable-next-line @typescript-eslint/no-explicit-any\nPersistentConnection.prototype.echo=function(data,onEcho){this.sendRequest('echo',{d:data},onEcho);};// RealTimeConnection properties that we use in tests.\nvar RealTimeConnection=Connection;var hijackHash=function(newHash){var oldPut=PersistentConnection.prototype.put;PersistentConnection.prototype.put=function(pathString,data,onComplete,hash){if(hash!==undefined){hash=newHash();}oldPut.call(this,pathString,data,onComplete,hash);};return function(){PersistentConnection.prototype.put=oldPut;};};var ConnectionTarget=RepoInfo;var queryIdentifier=function(query){return query._delegate._queryIdentifier;};/**\r\n * Forces the RepoManager to create Repos that use ReadonlyRestClient instead of PersistentConnection.\r\n */var forceRestClient=function(forceRestClient){repoManagerForceRestClient(forceRestClient);};var TEST_ACCESS=/*#__PURE__*/Object.freeze({__proto__:null,DataConnection:DataConnection,RealTimeConnection:RealTimeConnection,hijackHash:hijackHash,ConnectionTarget:ConnectionTarget,queryIdentifier:queryIdentifier,forceRestClient:forceRestClient});/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */var ServerValue=Database.ServerValue;function registerDatabase(instance){// set SDK_VERSION\nsetSDKVersion(instance.SDK_VERSION);// Register the Database Service with the 'firebase' namespace.\nvar namespace=instance.INTERNAL.registerComponent(new Component('database',function(container,_a){var url=_a.instanceIdentifier;/* Dependencies */ // getImmediate for FirebaseApp will always succeed\nvar app=container.getProvider('app').getImmediate();var authProvider=container.getProvider('auth-internal');var appCheckProvider=container.getProvider('app-check-internal');return new Database(repoManagerDatabaseFromApp(app,authProvider,appCheckProvider,url),app);},\"PUBLIC\"/* PUBLIC */).setServiceProps(// firebase.database namespace properties\n{Reference:Reference,Query:Query,Database:Database,DataSnapshot:DataSnapshot,enableLogging:enableLogging,INTERNAL:INTERNAL,ServerValue:ServerValue,TEST_ACCESS:TEST_ACCESS}).setMultipleInstances(true));instance.registerVersion(name,version);if(isNodeSdk()){module.exports=namespace;}}registerDatabase(firebase);export{DataSnapshot,Database,OnDisconnect,Query,Reference,ServerValue,enableLogging,registerDatabase};","map":{"version":3,"mappings":"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","names":["SDK_VERSION","setSDKVersion","version","domStorage_","DOMStorageWrapper","key","value","removeItem","prefixedName_","setItem","stringify","storedVal","getItem","jsonEval","name","prefix_","toString","MemoryStorage","cache_","contains","createStoragefor","domStorageName","window","domStorage","e","PersistentStorage","SessionStorage","logClient","Logger","LUIDGenerator","id","sha1","str","utf8Bytes","stringToByteArray","Sha1","update","sha1Bytes","digest","base64","encodeByteArray","buildLogMessage_","_i","varArgs","message","i","length","arg","Array","isArray","apply","logger","firstLog_","enableLogging","logger_","persistent","assert","logLevel","LogLevel","VERBOSE","log","bind","set","remove","get","logWrapper","prefix","error","fatal","Error","warn","warnIfPageIsSecure","location","protocol","indexOf","isInvalidJSONNumber","data","Number","POSITIVE_INFINITY","NEGATIVE_INFINITY","executeWhenDOMReady","fn","isNodeSdk","document","readyState","called_1","wrappedFn_1","body","setTimeout","Math","floor","addEventListener","attachEvent","MIN_NAME","MAX_NAME","nameCompare","a","b","aAsInt","tryParseInt","bAsInt","stringCompare","requireKey","obj","ObjectToUniqueKey","keys","k","push","sort","splitStringBySize","segsize","len","dataSegs","c","substring","each","hasOwnProperty","doubleToIEEE754String","v","ebits","fbits","bias","s","f","ln","Infinity","abs","pow","min","LN2","round","bits","reverse","join","hexByteString","hexByte","parseInt","substr","toLowerCase","isChromeExtensionContentScript","test","href","isWindowsStoreApp","Windows","UI","errorForServerCode","code","query","reason","_path","toUpperCase","INTEGER_REGEXP_","RegExp","INTEGER_32_MIN","INTEGER_32_MAX","intVal","exceptionGuard","stack","beingCrawled","userAgent","search","setTimeoutNonBlocking","time","timeout","appName_","appCheckProvider","appCheck","getImmediate","optional","then","_this","AppCheckTokenProvider","forceRefresh","Promise","resolve","reject","getToken","listener","addTokenListener","firebaseOptions_","authProvider_","auth_","onInit","auth","FirebaseAuthTokenProvider","catch","addAuthTokenListener","removeAuthTokenListener","errorMessage","accessToken","EmulatorTokenProvider","PROTOCOL_VERSION","VERSION_PARAM","TRANSPORT_SESSION_PARAM","REFERER_PARAM","FORGE_REF","FORGE_DOMAIN_RE","LAST_SESSION_PARAM","APPLICATION_ID_PARAM","APP_CHECK_TOKEN_PARAM","WEBSOCKET","LONG_POLLING","host","secure","namespace","webSocketOnly","nodeAdmin","persistenceKey","includeNamespaceInQueryParams","_host","_domain","internalHost","RepoInfo","Object","newHost","isCacheableHost","toURLString","repoInfoNeedsQueryParam","repoInfo","isCustomHost","repoInfoConnectionURL","type","params","connURL","pairs","StatsCollection","amount","counters_","deepCopy","collections","reporters","statsManagerGetCollection","hashString","statsManagerGetOrCreateReporter","creatorFunction","onMessage_","PacketReceiver","responseNum","callback","closeAfterResponse","onClose","currentResponseNum","requestNum","pendingResponses","toProcess","this_1","FIREBASE_LONGPOLL_START_PARAM","FIREBASE_LONGPOLL_CLOSE_COMMAND","FIREBASE_LONGPOLL_COMMAND_CB_NAME","FIREBASE_LONGPOLL_DATA_CB_NAME","FIREBASE_LONGPOLL_ID_PARAM","FIREBASE_LONGPOLL_PW_PARAM","FIREBASE_LONGPOLL_SERIAL_PARAM","FIREBASE_LONGPOLL_CALLBACK_ID_PARAM","FIREBASE_LONGPOLL_SEGMENT_NUM_PARAM","FIREBASE_LONGPOLL_SEGMENTS_IN_PACKET","FIREBASE_LONGPOLL_DATA_PARAM","FIREBASE_LONGPOLL_DISCONN_FRAME_REQUEST_PARAM","MAX_URL_DATA_SIZE","SEG_HEADER_SIZE","MAX_PAYLOAD_SIZE","KEEPALIVE_REQUEST_INTERVAL","LP_CONNECT_TIMEOUT","connId","applicationId","appCheckToken","authToken","transportSessionId","lastSessionId","log_","stats_","urlFn","BrowserPollConnection","onMessage","onDisconnect","curSegmentNum","onDisconnect_","myPacketOrderer","isClosed_","connectTimeoutTimer_","onClosed_","scriptTagHolder","FirebaseIFrameScriptHolder","args","_a","command","arg1","arg2","incrementIncomingBytes_","clearTimeout","everConnected_","password","sendNewPolls","closeAfter","pN","handleResponse","urlParams","random","uniqueCallbackIdentifier","hostname","connectURL","addTag","startLongPoll","addDisconnectPingFrame","forceAllow_","forceDisallow_","createElement","close","myDisconnFrame","removeChild","shutdown_","dataStr","bytesSent","incrementCounter","base64data","base64Encode","enqueueSegment","pw","src","style","display","appendChild","bytesReceived","commandCB","onMessageCB","Set","myIFrame","createIFrame_","script","currentDomain","domain","iframeContents","doc","open","write","iframe","contentWindow","contentDocument","alive","innerHTML","myID","myPW","newRequest_","outstandingRequests","size","pendingSegs","currentSerial","theURL","curDataString","nextSeg","d","theSeg","shift","seg","ts","addLongPollTag_","segnum","totalsegs","url","serial","add","doNewRequest","delete","keepaliveTimeout","readyStateCB","loadCB","doNodeLongPoll","newScript_1","async","onload","onreadystatechange","rstate","parentNode","onerror","WEBSOCKET_MAX_FRAME_SIZE","WEBSOCKET_KEEPALIVE_INTERVAL","WebSocketImpl","MozWebSocket","WebSocket","WebSocketConnection","connectionURL_","device","options","headers","process","platform","env","proxy","origin","mySock","onopen","onclose","onmessage","handleIncomingFrame","m","isOldAndroid","navigator","oldAndroidRegex","oldAndroidMatch","match","parseFloat","isInMemoryStorage","frames","totalFrames","fullMess","jsonMess","frameCount","isNaN","handleNewFrameCount_","mess","resetKeepAlive","appendFrame_","remainingData","extractFrameCount_","sendString_","String","keepaliveTimer","clearInterval","setInterval","send","initTransports_","TransportManager","isWebSocketsAvailable","isSkipPollConnection","previouslyFailed","transports_","transports","ALL_TRANSPORTS","transport","UPGRADE_TIMEOUT","DELAY_BEFORE_SENDING_EXTRA_REQUESTS","BYTES_SENT_HEALTHY_OVERRIDE","BYTES_RECEIVED_HEALTHY_OVERRIDE","MESSAGE_TYPE","MESSAGE_DATA","CONTROL_SHUTDOWN","CONTROL_RESET","CONTROL_ERROR","CONTROL_PONG","SWITCH_ACK","END_TRANSMISSION","PING","SERVER_HELLO","repoInfo_","applicationId_","appCheckToken_","authToken_","onReady_","onKill_","transportManager_","start_","Connection","conn","initialTransport","conn_","nextTransportId_","primaryResponsesRequired_","onMessageReceived","connReceiver_","onConnectionLost","disconnReceiver_","tx_","rx_","secondaryConn_","isHealthy_","healthyTimeoutMS","healthyTimeout_","markConnectionHealthy","connectionCount","onConnectionLost_","everConnected","onSecondaryConnectionLost_","state_","onPrimaryMessageReceived_","onSecondaryMessageReceived_","dataMsg","msg","t","sendData_","controlData","cmd","upgradeIfSecondaryHealthy_","secondaryResponsesRequired_","parsedData","layer","onSecondaryControl_","pendingDataMessages","proceedWithUpgrade_","start","tryCleanupConnection","onControl_","onDataMessage_","onPrimaryResponse_","payload","onHandshake_","onConnectionShutdown_","onReset_","sendPingOnPrimaryIfNecessary_","handshake","timestamp","h","sessionId","onConnectionEstablished_","tryStartUpgrade_","upgradeTransport","startUpgrade_","closeConnections_","ServerActions","pathString","onComplete","hash","token","stats","allowedEvents_","EventEmitter","eventType","listeners_","listeners","context","validateEventType_","eventData","getInitialEvent","splice","find","et","__extends","_super","isMobileCordova","online_","trigger","OnlineMonitor","MAX_PATH_DEPTH","MAX_PATH_LENGTH_BYTES","pathOrString","pieceNum","pieces_","split","copyTo","pieceNum_","Path","newEmptyPath","pathGetFront","path","pathGetLength","pathPopFront","pathGetBack","pathToUrlEncodedString","encodeURIComponent","pathSlice","begin","slice","pathParent","pieces","pathChild","childPathObj","childPieces","pathIsEmpty","newRelativePath","outerPath","innerPath","outer","inner","pathCompare","left","right","leftKeys","rightKeys","cmp","pathEquals","other","j","pathContains","errorPrefix_","parts_","byteLength_","max","stringLength","validationPathCheckValid","validationPathPush","validationPath","child","validationPathPop","last","pop","validationPathToErrorString","hidden","visibilityChange","visible_","visible","VisibilityMonitor","RECONNECT_MIN_DELAY","RECONNECT_MAX_DELAY_DEFAULT","GET_CONNECT_TIMEOUT","RECONNECT_MAX_DELAY_FOR_ADMINS","RECONNECT_DELAY_MULTIPLIER","RECONNECT_DELAY_RESET_TIMEOUT","SERVER_KILL_INTERRUPT_REASON","INVALID_TOKEN_THRESHOLD","onDataUpdate_","onConnectStatus_","onServerInfoUpdate_","authTokenProvider_","appCheckTokenProvider_","authOverride_","PersistentConnection","nextPersistentConnectionId_","Map","getInstance","on","onVisible_","onOnline_","action","onResponse","curReqNum","requestNumber_","r","connected_","realtime_","sendRequest","requestCBHash_","initConnection_","deferred","Deferred","request","p","q","_queryObject","outstandingGet","outstandingGets_","outstandingGetCount_","index","undefined","sendGet_","promise","currentHashFn","tag","queryId","_queryIdentifier","listens","has","_queryParams","isDefault","loadsAllData","listenSpec","hashFn","sendListen_","req","status","warnOnListenWarnings_","currentListenSpec","removeListen_","warnings","safeGet","indexSpec","getIndex","indexPath","tryAuth","reduceReconnectDelayIfAdminCredential_","credential","isFirebaseSecret","isAdmin","maxReconnectDelay_","tryAppCheck","token_1","authMethod","isValidFormat","requestData","cred","res","invalidAuthTokenCount_","onAuthRevoked_","invalidAppCheckTokenCount_","onAppCheckRevoked_","listen","sendUnlisten_","queryObj","sendOnDisconnect_","onDisconnectRequestQueue_","response","putInternal","outstandingPuts_","outstandingPutCount_","sendPut_","queued","result","errorReason","reqNum","onDataPush_","onListenRevoked_","onSecurityDebugPacket_","lastConnectionEstablishedTime_","Date","getTime","handleTimestamp_","firstConnection_","sendConnectStats_","restoreState_","establishConnectionTimer_","establishConnection_","scheduleConnect_","reconnectDelay_","online","cancelSentTransactions_","shouldReconnect_","lastConnectionAttemptTime_","timeSinceLastConnectSucceeded","timeSinceLastConnectAttempt","reconnectDelay","onDataMessage","onReady","onDisconnect_1","onRealtimeDisconnect_","nextConnectionId_","canceled_1","connection_1","closeFn","sendRequestFn","forceTokenRefresh_","all","_b","interrupt","error_1","interruptReasons_","isEmpty","delta","serverTimeOffset","put","map","normalizedPathString","statusCode","explanation","notifyForInvalidToken","securityDebugCallback_","console","replace","values","queries","clientName","isReactNative","reportStats","currentlyOnline","node","NamedNode","Index","compare","oldNode","newNode","oldWrapped","newWrapped","MIN","__EMPTY_NODE","KeyIndex","val","assertionError","indexValue","KEY_INDEX","startKey","comparator","isReverse_","resultGenerator_","nodeStack_","SortedMapIterator","color","LLRBNode","RED","SortedMap","EMPTY_NODE","count","inorderTraversal","reverseTraversal","min_","maxKey","n","copy","insert","fixUp_","isRed_","moveRedLeft_","removeMin_","smallest","rotateRight_","moveRedRight_","rotateLeft_","colorFlip_","nl","nr","blackDepth","check_","LLRBEmptyNode","comparator_","root_","BLACK","rightParent","minKey","resultGenerator","NAME_ONLY_COMPARATOR","NAME_COMPARATOR","MAX_NODE","setMaxNode","priorityHashText","priority","validatePriorityNode","priorityNode","isLeafNode","getPriority","__childrenNodeConstructor","value_","priorityNode_","LeafNode","newPriorityNode","childName","childNode","newChildNode","updatePriority","updateImmediateChild","front","updateChild","exportFormat","getValue","lazyHash_","toHash","compareToLeafNode_","otherLeaf","otherLeafType","thisLeafType","otherIndex","VALUE_TYPE_ORDER","thisIndex","equals","nodeFromJSON","setNodeFromJSON","PriorityIndex","aPriority","bPriority","indexCmp","compareTo","PRIORITY_INDEX","LOG_2","logBase2","num","bitMask","current_","mask","bits_","Base12Num","buildChildSet","childList","keyFn","mapSortFn","buildBalancedTree","low","high","namedNode","middle","buildFrom12Array","base12","root","buildPennant","chunkSize","childTree","attachPennant","pennant","isOne","nextBitIsOne","_defaultIndexMap","fallbackObject","indexes_","indexSet_","IndexMap","indexKey","sortedMap","indexDefinition","existingChildren","sawIndexedValue","iter","getIterator","Wrap","next","getNext","isDefinedOn","newIndex","getCompare","indexName","newIndexSet","newIndexes","indexedChildren","existingSnap","newChildren","children_","indexMap_","ChildrenNode","Default","getImmediateChild","getChild","newIndexMap","removeFromIndexes","addToIndexes","newPriority","newImmediateChild","numKeys","allIntegerKeys","forEachChild","array","toHash_1","childHash","idx","resolveIndex_","predecessor","getPredecessorKey","getFirstChildName","getLastChildName","wrappedNode","getIteratorFrom","minPost","startPost","iterator","peek","getReverseIteratorFrom","maxPost","endPost","hasIndex","addIndex","otherChildrenNode","thisIter","otherIter","thisCurrent","otherCurrent","MaxNode","defineProperties","MAX","setPriorityMaxNode","USE_HINZE","json","jsonLeaf","children_1","childrenHavePriority_1","hinzeJsonObj","childSet","sortedChildSet","node_1","childData","indexPath_","PathIndex","snap","aChild","extractChild","bChild","valueNode","ValueIndex","VALUE_INDEX","PUSH_CHARS","MIN_PUSH_CHAR","MAX_PUSH_CHAR","MAX_KEY_LEN","nextPushId","lastPushTime","lastRandChars","now","duplicateTime","timeStampChars","charAt","successor","keyAsInt","i_1","source","sourcePlusOne","repeat","changeValue","snapshotNode","changeChildAdded","changeChildRemoved","changeChildChanged","oldSnap","changeChildMoved","index_","IndexedFilter","newChild","affectedPath","optChangeAccumulator","isIndexed","oldChild","hasChild","trackChildChange","withIndex","newSnap","indexedFilter_","startPost_","RangedFilter","getStartPost_","endPost_","getEndPost_","getStartPost","getEndPost","matches","filtered","self","updateFullNode","hasStart","startName","getIndexStartName","makePost","getIndexStartValue","hasEnd","endName","getIndexEndName","getIndexEndValue","rangedFilter_","limit_","getLimit","reverse_","isViewFromLeft","LimitedFilter","numChildren","getIndexedFilter","fullLimitUpdateChild_","hasNext","inRange","getReverseIterator","indexCompare_1","foundStartPost","childKey","childSnap","changeAccumulator","indexCmp_1","oldEventCache","newChildNamedNode","windowBoundary","getFirstChild","getLastChild","oldChildSnap","nextChild","getChildAfterChild","compareNext","remainsInWindow","newEventCache","nextChildInRange","QueryParams","startSet_","startAfterSet_","endBeforeSet_","viewFrom_","indexStartValue_","startNameSet_","indexStartName_","endSet_","indexEndValue_","endNameSet_","indexEndName_","limitSet_","queryParamsGetNodeFilter","queryParams","hasLimit","queryParamsLimitToFirst","newLimit","newParams","queryParamsLimitToLast","queryParamsStartAt","queryParamsStartAfter","queryParamsEndAt","queryParamsEndBefore","queryParamsOrderBy","queryParamsToRestQueryStringParameters","qs","orderBy","queryParamsGetQueryObject","viewFrom","ReadonlyRestClient","listenId","getListenId_","thisListen","listens_","queryStringParameters","restRequest_","status_1","querystring","xhr","XMLHttpRequest","responseText","SnapshotHolder","rootNode_","newSnapshotNode","newSparseSnapshotTree","children","sparseSnapshotTreeRemember","sparseSnapshotTree","clear","sparseSnapshotTreeForget","tree","safeToRemove","sparseSnapshotTreeForEachTree","prefixPath","func","sparseSnapshotTreeForEachChild","forEach","collection_","StatsListener","newStats","last_","stat","FIRST_STATS_MIN_TIME","FIRST_STATS_MAX_TIME","REPORT_STATS_INTERVAL","collection","server_","statsListener_","reportStats_","StatsReporter","reportedStats","haveStatsToReport","statsToReport_","statsReporterIncludeStat","reporter","OperationType","newOperationSourceUser","fromUser","fromServer","tagged","newOperationSourceServer","newOperationSourceServerTaggedQuery","affectedTree","revert","ACK_USER_WRITE","AckUserWrite","subtree","LISTEN_COMPLETE","ListenComplete","OVERWRITE","Overwrite","MERGE","Merge","node_","fullyInitialized_","filtered_","CacheNode","isFullyInitialized","isCompleteForChild","query_","eventGeneratorGenerateEventsForChanges","eventGenerator","changes","eventCache","eventRegistrations","events","moves","change","indexedValueChanged","eventGeneratorGenerateEventsForType","registrations","filteredChanges","filter","materializedChange","eventGeneratorMaterializeSingleChange","registration","respondsTo","createEvent","prevName","getPredecessorChildName","eventGeneratorCompareChanges","aWrapped","bWrapped","newViewCache","serverCache","viewCacheUpdateEventSnap","viewCache","eventSnap","complete","viewCacheUpdateServerSnap","serverSnap","viewCacheGetCompleteEventSnap","getNode","viewCacheGetCompleteServerSnap","emptyChildrenSingleton","EmptyChildren","ImmutableTree","childPath","relativePath","predicate","childExistingPathAndValue","findRootMostMatchingPathAndValue","fullPath","toSet","newTree","setTree","fold_","pathSoFar","accum","findOnPath_","pathToFollow","foreachOnPath_","currentRelativePath","foreach_","writeTree_","CompoundWrite","compoundWriteAddWrite","compoundWrite","rootmost","findRootMostValueAndPath","rootMostPath","newWriteTree","compoundWriteAddWrites","updates","newWrite","compoundWriteRemoveWrite","empty","compoundWriteHasCompleteWrite","compoundWriteGetCompleteNode","compoundWriteGetCompleteChildren","compoundWriteChildCompoundWrite","shadowingNode","compoundWriteIsEmpty","compoundWriteApply","applySubtreeWrite","writeTree","priorityWrite_1","writeTreeChildWrites","newWriteTreeRef","writeTreeAddOverwrite","writeId","lastWriteId","allWrites","visibleWrites","writeTreeAddMerge","changedChildren","writeTreeGetWrite","record","writeTreeRemoveWrite","findIndex","writeToRemove","removedWriteWasVisible","removedWriteOverlapsWithOtherWrites","currentWrite","writeTreeRecordContainsPath_","writeTreeResetTree_","writeRecord","writeTreeLayerTree_","writeTreeDefaultFilter_","writes","treeRoot","writePath","deepNode","writeTreeCalcCompleteEventCache","treePath","completeServerCache","writeIdsToExclude","includeHiddenWrites","subMerge","layeredCache","merge","mergeAtPath","writeTreeCalcCompleteEventChildren","completeServerChildren","completeChildren","topLevelSet","merge_1","writeTreeCalcEventCacheAfterServerOverwrite","existingEventSnap","existingServerSnap","childMerge","writeTreeCalcCompleteChild","writeTreeShadowingWrite","writeTreeCalcIndexedSlice","completeServerData","toIterate","nodes","writeTreeRefCalcCompleteEventCache","writeTreeRef","writeTreeRefCalcCompleteEventChildren","writeTreeRefCalcEventCacheAfterServerOverwrite","writeTreeRefShadowingWrite","writeTreeRefCalcIndexedSlice","writeTreeRefCalcCompleteChild","existingServerCache","writeTreeRefChild","ChildChangeAccumulator","oldChange","changeMap","oldType","from","NoCompleteChildSource_","NO_COMPLETE_CHILD_SOURCE","writes_","viewCache_","optCompleteServerCache_","WriteTreeCompleteChildSource","serverNode","newViewProcessor","viewProcessorAssertIndexed","viewProcessor","viewProcessorApplyOperation","oldViewCache","operation","writesCache","completeCache","accumulator","filterServerNode","overwrite","viewProcessorApplyUserOverwrite","isFiltered","viewProcessorApplyServerOverwrite","viewProcessorApplyUserMerge","viewProcessorApplyServerMerge","ackUserWrite","viewProcessorAckUserWrite","viewProcessorRevertUserWrite","viewProcessorListenComplete","getChanges","viewProcessorMaybeAddValueEvent","isLeafOrEmpty","oldCompleteSnap","viewProcessorGenerateEventCacheAfterServerEvent","changePath","oldEventSnap","completeEventChildren","completeNode","oldEventNode","updatedPriority","childChangePath","newEventChild","eventChildUpdate","filtersNodes","changedSnap","oldServerSnap","newServerCache","serverFilter","newServerNode","isCompleteForPath","getCompleteChild","newEventSnap","viewProcessorCacheHasChild","curViewCache","foreach","viewProcessorApplyMerge","viewMergeTree","serverChild","childMergeTree","isUnknownDeepMerge","ackPath","changedChildren_1","changedChildren_2","mergePath","serverCachePath","oldServerNode","serverChildren","initialViewCache","indexFilter","processor_","initialServerCache","initialEventCache","eventGenerator_","EventGenerator","View","viewGetServerCache","view","viewGetCompleteNode","viewGetCompleteServerCache","cache","viewIsEmpty","eventRegistrations_","viewAddEventRegistration","eventRegistration","viewRemoveEventRegistration","cancelError","cancelEvents","path_1","maybeEvent","createCancelEvent","remaining","existing","hasAnyCallback","concat","viewApplyOperation","viewGenerateEventsForChanges_","viewGetInitialEvents","initialChanges","eventNode","referenceConstructor","syncPointSetReferenceConstructor","syncPointGetReferenceConstructor","syncPointIsEmpty","syncPoint","views","syncPointApplyOperation","optCompleteServerCache","syncPointGetView","serverCacheComplete","eventCacheComplete","syncPointAddEventRegistration","syncPointRemoveEventRegistration","removed","hadCompleteView","syncPointHasCompleteView","entries","viewQueryId","_repo","syncPointGetQueryViews","syncPointGetCompleteServerCache","syncPointViewForQuery","syncPointGetCompleteView","syncPointViewExistsForQuery","syncTreeSetReferenceConstructor","syncTreeGetReferenceConstructor","syncTreeNextQueryTag_","listenProvider_","syncTreeApplyUserOverwrite","syncTree","newData","pendingWriteTree_","syncTreeApplyOperationToSyncPoints_","syncTreeApplyUserMerge","changeTree","fromObject","syncTreeAckUserWrite","needToReevaluate","affectedTree_1","syncTreeApplyServerOverwrite","syncTreeApplyServerMerge","syncTreeApplyListenComplete","syncTreeApplyTaggedListenComplete","queryKey","syncTreeQueryKeyForTag_","syncTreeParseQueryKey_","queryPath","op","syncTreeApplyTaggedOperation_","syncTreeRemoveEventRegistration","maybeSyncPoint","syncPointTree_","removedAndEvents","removingDefault","covered","findOnPath","parentSyncPoint","newViews","syncTreeCollectDistinctViewsForSubTree_","newQuery","syncTreeCreateListenerForView_","startListening","syncTreeQueryForListening_","syncTreeTagForQuery_","defaultTag","stopListening","queryToRemove","tagToRemove","queryToTagMap","syncTreeMakeQueryKey_","syncTreeRemoveTags_","syncTreeApplyTaggedQueryOverwrite","syncTreeApplyTaggedQueryMerge","syncTreeAddEventRegistration","foundAncestorDefaultView","foreachOnPath","pathToSyncPoint","sp","SyncPoint","foreachChild","childSyncPoint","viewAlreadyExists","syncTreeGetNextQueryTag_","tagToQueryMap","syncTreeSetupListener_","syncTreeCalcCompleteEventCache","includeHiddenSets","syncTreeGetServerValue","serverCacheNode","syncTreeApplyOperationHelper_","syncPointTree","syncTreeApplyOperationDescendantsHelper_","childOperation","operationForChild","childServerCache","childWritesCache","splitIndex","fold","maybeChildSyncPoint","childMap","completeView","views_1","_key","childViews","removedQuery","removedQueryKey","removedQueryTag","queriesToStop","queries_1","childQueries","queryToStop","ExistingValueProvider","syncTree_","path_","DeferredValueProvider","generateWithValues","resolveDeferredLeafValue","existingVal","serverValues","resolveScalarDeferredValue","resolveComplexDeferredValue","JSON","unused","existingNode","leaf","resolveDeferredValueTree","resolveDeferredValue","resolveDeferredValueSnapshot","rawPri","leafNode","childrenNode","parent","childCount","treeSubTree","pathObj","Tree","treeGetValue","treeSetValue","treeUpdateParents","treeHasChildren","treeIsEmpty","treeForEachChild","treeForEachDescendant","includeSelf","childrenFirst","treeForEachAncestor","treeGetPath","treeUpdateChild","childEmpty","childExists","INVALID_KEY_REGEX_","INVALID_PATH_REGEX_","MAX_LEAF_SIZE_","isValidKey","isValidPathString","isValidRootPathString","isValidPriority","validateFirebaseDataArg","fnName","validateFirebaseData","errorPrefixFxn","errorPrefix","ValidationPath","hasDotValue_1","hasActualChild_1","validateFirebaseMergePaths","mergePaths","curPath","prevPath","validateFirebaseMergeDataArg","validatePriority","validateEventType","validateKey","argumentName","validatePathString","validateRootPathString","validateWritablePath","validateUrl","parsedUrl","validateBoolean","bool","eventQueueQueueEvents","eventQueue","eventDataList","currList","getPath","eventLists_","eventQueueRaiseEventsAtPath","eventQueueRaiseQueuedEventsMatchingPredicate","eventPath","eventQueueRaiseEventsForChangedPath","changedPath","recursionDepth_","sentAll","eventList","eventListRaise","eventFn","getEventRunner","INTERRUPT_REASON","MAX_TRANSACTION_RETRIES","forceRestClient_","appCheckProvider_","EventQueue","Repo","repoStart","repo","appId","authOverride","isMerge","repoOnDataUpdate","persistentConnection_","connectStatus","repoOnConnectStatus","repoOnServerInfoUpdate","addTokenChangeListener","refreshAuthToken","refreshAppCheckToken","statsReporter_","infoData_","infoSyncTree_","SyncTree","infoEvents","repoUpdateInfo","serverSyncTree_","eventQueue_","unlisten","repoServerTime","offsetNode","offset","repoGenerateServerValues","dataUpdateCount","interceptServerDataCallback_","taggedChildren","raw","taggedSnap","repoRerunTransactions","repoInterceptServerData","repoRunOnDisconnectEvents","updateSnapshot","repoGetNextWriteId","nextWriteId_","repoGetValue","cached","repoLog","err","repoSetWithPriority","newVal","newNodeUnresolved","success","clearEvents","repoCallOnCompleteCallback","repoAbortTransactions","repoUpdate","childrenToMerge","changedKey","changedValue","writeId_1","resolvedOnDisconnectTree","resolved","repoOnDisconnectCancel","onDisconnectCancel","repoOnDisconnectSet","onDisconnectPut","repoOnDisconnectSetWithPriority","repoOnDisconnectUpdate","onDisconnectMerge","repoAddEventCallbackForQuery","repoRemoveEventCallbackForQuery","repoInterrupt","repoResume","resume","repoStats","showDelta","longestName","reduce","previousValue","currentValue","paddedStat","repoStatsIncrementCounter","metric","repoStartTransaction","transactionUpdate","unwatcher","applyLocally","transaction","order","retryCount","abortReason","currentWriteId","currentInputSnapshot","currentOutputSnapshotRaw","currentOutputSnapshotResolved","currentState","repoGetLatestState","queueNode","transactionQueueTree_","nodeQueue","priorityForNode","currentNode","repoSendReadyTransactions","excludeSets","repoPruneCompletedTransactionsBelowNode","queue","repoBuildTransactionQueue","allRun","every","repoSendTransactionQueue","setsToIgnore","txn","latestState","snapToSend","latestHash","dataToSend","pathToSend","callbacks","rootMostTransactionNode","repoGetAncestorTransactionNode","repoRerunTransactionQueue","txnsToRerun","abortTransaction","newDataNode","hasExplicitPriority","oldWriteId","newNodeResolved","transactionNode","transactionQueue","repoAggregateTransactionQueuesForNode","to","repoAbortTransactionsOnNode","lastSent","decodePath","pathStringDecoded","piece","decodeURIComponent","decodeQuery","queryString","results","segment","kv","parseRepoInfo","dataURL","parseDatabaseURL","scheme","subdomain","port","colonInd","slashInd","questionMarkInd","hostWithoutPort","dotInd","snapshot","DataEvent","ref","exportVal","CancelEvent","snapshotCallback","cancelCallback","CallbackContext","expDataSnapshot","previousChildName","call","hasCancelCallback","userCallback","OnDisconnect","wrapCallback","_orderByCalled","QueryImpl","ReferenceImpl","getModularInstance","sameRepo","samePath","sameQueryIdentifier","validateNoPreviousOrderByCall","validateQueryEndpoints","startNode","endNode","tooManyArgsError","wrongArgTypeError","validateLimit","hasAnchoredLimit","parentPath","_node","_index","DataSnapshot","childRef","db","_checkNotDeleted","_root","refFromURL","parsedURL","thennablePushRef","pushRef","setPriority","setWithPriority","callbackContext","ValueEventRegistration","getEventType","onCancel","onValue","ChildEventRegistration","eventToCheck","cancelCallbackOrListenOptions","onlyOnce","userCallback_1","onceCallback","dataSnapshot","container","onChildAdded","onChildChanged","onChildMoved","onChildRemoved","off","expCallback","_value","QueryEndAtConstraint","QueryConstraint","endAt","QueryEndBeforeConstraint","endBefore","QueryStartAtConstraint","startAt","QueryStartAfterConstraint","startAfter","_limit","QueryLimitToFirstConstraint","limitToFirst","limit","QueryLimitToLastConstraint","limitToLast","QueryOrderByChildConstraint","parsedPath","orderByChild","QueryOrderByKeyConstraint","orderByKey","QueryOrderByPriorityConstraint","orderByPriority","QueryOrderByValueConstraint","orderByValue","QueryEqualToValueConstraint","_apply","equalTo","queryConstraints","queryImpl","constraint","FIREBASE_DATABASE_EMULATOR_HOST_VAR","repos","useRestClient","repoManagerApplyEmulatorSettings","tokenProvider","repoManagerDatabaseFromApp","app","authProvider","dbUrl","databaseURL","projectId","isEmulator","dbEmulatorHost","authTokenProvider","OWNER","repoManagerCreateRepo","Database","repoManagerDeleteRepo","appName","appRepos","repoManagerForceRestClient","forceRestClient","_repoInternal","_instanceStarted","_rootInternal","apiName","connectDatabaseEmulator","mockUserToken","createMockUserToken","goOffline","goOnline","SERVER_TIMESTAMP","serverTimestamp","increment","committed","TransactionResult","toJSON","runTransaction","promiseComplete","_delegate","validateArgCount","arguments","validateCallback","cancel","objectToMerge","newObjectToMerge","_database","exists","hasChildren","Reference","getRef","database","Query","cancelCallbackOrContext","ret","getCancelAndContextArgs_","valueCallback","expSnapshot","validateContextObject","failureCallbackOrContext","isEqual","cancelOrContext","_ReferenceImpl","_QueryImpl","transactionResult","expPromise","expRef","ExpOnDisconnect","getKey","getParent","getRoot","_delete","TIMESTAMP","forceLongPolling","forceDisallow","forceAllow","forceWebSockets","setSecurityDebugCallback","connection","statsIncrementCounter","interceptServerData","initStandalone","customAuthImpl","Provider","ComponentContainer","setComponent","Component","instance","_repoManagerDatabaseFromApp","DataConnection","prototype","simpleListen","echo","onEcho","RealTimeConnection","hijackHash","newHash","oldPut","ConnectionTarget","queryIdentifier","ServerValue","registerDatabase","INTERNAL","registerComponent","getProvider","setServiceProps","TEST_ACCESS","setMultipleInstances","registerVersion","module","exports","firebase"],"sources":["../src/core/version.ts","../src/core/storage/DOMStorageWrapper.ts","../src/core/storage/MemoryStorage.ts","../src/core/storage/storage.ts","../src/core/util/util.ts","../src/core/AppCheckTokenProvider.ts","../src/core/AuthTokenProvider.ts","../src/realtime/Constants.ts","../src/core/RepoInfo.ts","../src/core/stats/StatsCollection.ts","../src/core/stats/StatsManager.ts","../src/realtime/polling/PacketReceiver.ts","../src/realtime/BrowserPollConnection.ts","../src/realtime/WebSocketConnection.ts","../src/realtime/TransportManager.ts","../src/realtime/Connection.ts","../src/core/ServerActions.ts","../src/core/util/EventEmitter.ts","../src/core/util/OnlineMonitor.ts","../src/core/util/Path.ts","../src/core/util/VisibilityMonitor.ts","../src/core/PersistentConnection.ts","../src/core/snap/Node.ts","../src/core/snap/indexes/Index.ts","../src/core/snap/indexes/KeyIndex.ts","../src/core/util/SortedMap.ts","../src/core/snap/comparators.ts","../src/core/snap/snap.ts","../src/core/snap/LeafNode.ts","../src/core/snap/indexes/PriorityIndex.ts","../src/core/snap/childSet.ts","../src/core/snap/IndexMap.ts","../src/core/snap/ChildrenNode.ts","../src/core/snap/nodeFromJSON.ts","../src/core/snap/indexes/PathIndex.ts","../src/core/snap/indexes/ValueIndex.ts","../src/core/util/NextPushId.ts","../src/core/view/Change.ts","../src/core/view/filter/IndexedFilter.ts","../src/core/view/filter/RangedFilter.ts","../src/core/view/filter/LimitedFilter.ts","../src/core/view/QueryParams.ts","../src/core/ReadonlyRestClient.ts","../src/core/SnapshotHolder.ts","../src/core/SparseSnapshotTree.ts","../src/core/stats/StatsListener.ts","../src/core/stats/StatsReporter.ts","../src/core/operation/Operation.ts","../src/core/operation/AckUserWrite.ts","../src/core/operation/ListenComplete.ts","../src/core/operation/Overwrite.ts","../src/core/operation/Merge.ts","../src/core/view/CacheNode.ts","../src/core/view/EventGenerator.ts","../src/core/view/ViewCache.ts","../src/core/util/ImmutableTree.ts","../src/core/CompoundWrite.ts","../src/core/WriteTree.ts","../src/core/view/ChildChangeAccumulator.ts","../src/core/view/CompleteChildSource.ts","../src/core/view/ViewProcessor.ts","../src/core/view/View.ts","../src/core/SyncPoint.ts","../src/core/SyncTree.ts","../src/core/util/ServerValues.ts","../src/core/util/Tree.ts","../src/core/util/validation.ts","../src/core/view/EventQueue.ts","../src/core/Repo.ts","../src/core/util/libs/parser.ts","../src/core/view/Event.ts","../src/core/view/EventRegistration.ts","../src/exp/OnDisconnect.ts","../src/exp/Reference_impl.ts","../src/exp/Database.ts","../src/exp/ServerValue.ts","../src/exp/Transaction.ts","../src/api/onDisconnect.ts","../src/api/TransactionResult.ts","../src/api/Reference.ts","../src/api/Database.ts","../src/api/internal.ts","../src/api/test_access.ts","../index.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** The semver (www.semver.org) version of the SDK. */\nexport let SDK_VERSION = '';\n\n// SDK_VERSION should be set before any database instance is created\nexport function setSDKVersion(version: string): void {\n  SDK_VERSION = version;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { jsonEval, stringify } from '@firebase/util';\n\n/**\n * Wraps a DOM Storage object and:\n * - automatically encode objects as JSON strings before storing them to allow us to store arbitrary types.\n * - prefixes names with \"firebase:\" to avoid collisions with app data.\n *\n * We automatically (see storage.js) create two such wrappers, one for sessionStorage,\n * and one for localStorage.\n *\n */\nexport class DOMStorageWrapper {\n  // Use a prefix to avoid collisions with other stuff saved by the app.\n  private prefix_ = 'firebase:';\n\n  /**\n   * @param domStorage_ - The underlying storage object (e.g. localStorage or sessionStorage)\n   */\n  constructor(private domStorage_: Storage) {}\n\n  /**\n   * @param key - The key to save the value under\n   * @param value - The value being stored, or null to remove the key.\n   */\n  set(key: string, value: unknown | null) {\n    if (value == null) {\n      this.domStorage_.removeItem(this.prefixedName_(key));\n    } else {\n      this.domStorage_.setItem(this.prefixedName_(key), stringify(value));\n    }\n  }\n\n  /**\n   * @returns The value that was stored under this key, or null\n   */\n  get(key: string): unknown {\n    const storedVal = this.domStorage_.getItem(this.prefixedName_(key));\n    if (storedVal == null) {\n      return null;\n    } else {\n      return jsonEval(storedVal);\n    }\n  }\n\n  remove(key: string) {\n    this.domStorage_.removeItem(this.prefixedName_(key));\n  }\n\n  isInMemoryStorage: boolean;\n\n  prefixedName_(name: string): string {\n    return this.prefix_ + name;\n  }\n\n  toString(): string {\n    return this.domStorage_.toString();\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { contains } from '@firebase/util';\n\n/**\n * An in-memory storage implementation that matches the API of DOMStorageWrapper\n * (TODO: create interface for both to implement).\n */\nexport class MemoryStorage {\n  private cache_: { [k: string]: unknown } = {};\n\n  set(key: string, value: unknown | null) {\n    if (value == null) {\n      delete this.cache_[key];\n    } else {\n      this.cache_[key] = value;\n    }\n  }\n\n  get(key: string): unknown {\n    if (contains(this.cache_, key)) {\n      return this.cache_[key];\n    }\n    return null;\n  }\n\n  remove(key: string) {\n    delete this.cache_[key];\n  }\n\n  isInMemoryStorage = true;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DOMStorageWrapper } from './DOMStorageWrapper';\nimport { MemoryStorage } from './MemoryStorage';\n\ndeclare const window: Window;\n\n/**\n * Helper to create a DOMStorageWrapper or else fall back to MemoryStorage.\n * TODO: Once MemoryStorage and DOMStorageWrapper have a shared interface this method annotation should change\n * to reflect this type\n *\n * @param domStorageName - Name of the underlying storage object\n *   (e.g. 'localStorage' or 'sessionStorage').\n * @returns Turning off type information until a common interface is defined.\n */\nconst createStoragefor = function (\n  domStorageName: string\n): DOMStorageWrapper | MemoryStorage {\n  try {\n    // NOTE: just accessing \"localStorage\" or \"window['localStorage']\" may throw a security exception,\n    // so it must be inside the try/catch.\n    if (\n      typeof window !== 'undefined' &&\n      typeof window[domStorageName] !== 'undefined'\n    ) {\n      // Need to test cache. Just because it's here doesn't mean it works\n      const domStorage = window[domStorageName];\n      domStorage.setItem('firebase:sentinel', 'cache');\n      domStorage.removeItem('firebase:sentinel');\n      return new DOMStorageWrapper(domStorage);\n    }\n  } catch (e) {}\n\n  // Failed to create wrapper.  Just return in-memory storage.\n  // TODO: log?\n  return new MemoryStorage();\n};\n\n/** A storage object that lasts across sessions */\nexport const PersistentStorage = createStoragefor('localStorage');\n\n/** A storage object that only lasts one session */\nexport const SessionStorage = createStoragefor('sessionStorage');\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Logger, LogLevel } from '@firebase/logger';\nimport {\n  assert,\n  base64,\n  Sha1,\n  stringToByteArray,\n  stringify,\n  isNodeSdk\n} from '@firebase/util';\n\nimport { SessionStorage } from '../storage/storage';\n\n// TODO: revert to import { QueryContext } from '../view/EventRegistration'; once the modular SDK goes GA\n/**\n * This is part of a workaround for an issue in the no-modular '@firebase/database' where its typings\n * reference types from `@firebase/app-exp`.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ntype QueryContext = any;\ndeclare const window: Window;\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ndeclare const Windows: any;\n\nconst logClient = new Logger('@firebase/database');\n\n/**\n * Returns a locally-unique ID (generated by just incrementing up from 0 each time its called).\n */\nexport const LUIDGenerator: () => number = (function () {\n  let id = 1;\n  return function () {\n    return id++;\n  };\n})();\n\n/**\n * Sha1 hash of the input string\n * @param str - The string to hash\n * @returns {!string} The resulting hash\n */\nexport const sha1 = function (str: string): string {\n  const utf8Bytes = stringToByteArray(str);\n  const sha1 = new Sha1();\n  sha1.update(utf8Bytes);\n  const sha1Bytes = sha1.digest();\n  return base64.encodeByteArray(sha1Bytes);\n};\n\nconst buildLogMessage_ = function (...varArgs: unknown[]): string {\n  let message = '';\n  for (let i = 0; i < varArgs.length; i++) {\n    const arg = varArgs[i];\n    if (\n      Array.isArray(arg) ||\n      (arg &&\n        typeof arg === 'object' &&\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        typeof (arg as any).length === 'number')\n    ) {\n      message += buildLogMessage_.apply(null, arg);\n    } else if (typeof arg === 'object') {\n      message += stringify(arg);\n    } else {\n      message += arg;\n    }\n    message += ' ';\n  }\n\n  return message;\n};\n\n/**\n * Use this for all debug messages in Firebase.\n */\nexport let logger: ((a: string) => void) | null = null;\n\n/**\n * Flag to check for log availability on first log message\n */\nlet firstLog_ = true;\n\n/**\n * The implementation of Firebase.enableLogging (defined here to break dependencies)\n * @param logger_ - A flag to turn on logging, or a custom logger\n * @param persistent - Whether or not to persist logging settings across refreshes\n */\nexport const enableLogging = function (\n  logger_?: boolean | ((a: string) => void) | null,\n  persistent?: boolean\n) {\n  assert(\n    !persistent || logger_ === true || logger_ === false,\n    \"Can't turn on custom loggers persistently.\"\n  );\n  if (logger_ === true) {\n    logClient.logLevel = LogLevel.VERBOSE;\n    logger = logClient.log.bind(logClient);\n    if (persistent) {\n      SessionStorage.set('logging_enabled', true);\n    }\n  } else if (typeof logger_ === 'function') {\n    logger = logger_;\n  } else {\n    logger = null;\n    SessionStorage.remove('logging_enabled');\n  }\n};\n\nexport const log = function (...varArgs: unknown[]) {\n  if (firstLog_ === true) {\n    firstLog_ = false;\n    if (logger === null && SessionStorage.get('logging_enabled') === true) {\n      enableLogging(true);\n    }\n  }\n\n  if (logger) {\n    const message = buildLogMessage_.apply(null, varArgs);\n    logger(message);\n  }\n};\n\nexport const logWrapper = function (\n  prefix: string\n): (...varArgs: unknown[]) => void {\n  return function (...varArgs: unknown[]) {\n    log(prefix, ...varArgs);\n  };\n};\n\nexport const error = function (...varArgs: string[]) {\n  const message = 'FIREBASE INTERNAL ERROR: ' + buildLogMessage_(...varArgs);\n  logClient.error(message);\n};\n\nexport const fatal = function (...varArgs: string[]) {\n  const message = `FIREBASE FATAL ERROR: ${buildLogMessage_(...varArgs)}`;\n  logClient.error(message);\n  throw new Error(message);\n};\n\nexport const warn = function (...varArgs: unknown[]) {\n  const message = 'FIREBASE WARNING: ' + buildLogMessage_(...varArgs);\n  logClient.warn(message);\n};\n\n/**\n * Logs a warning if the containing page uses https. Called when a call to new Firebase\n * does not use https.\n */\nexport const warnIfPageIsSecure = function () {\n  // Be very careful accessing browser globals. Who knows what may or may not exist.\n  if (\n    typeof window !== 'undefined' &&\n    window.location &&\n    window.location.protocol &&\n    window.location.protocol.indexOf('https:') !== -1\n  ) {\n    warn(\n      'Insecure Firebase access from a secure page. ' +\n        'Please use https in calls to new Firebase().'\n    );\n  }\n};\n\nexport const warnAboutUnsupportedMethod = function (methodName: string) {\n  warn(\n    methodName +\n      ' is unsupported and will likely change soon.  ' +\n      'Please do not use.'\n  );\n};\n\n/**\n * Returns true if data is NaN, or +/- Infinity.\n */\nexport const isInvalidJSONNumber = function (data: unknown): boolean {\n  return (\n    typeof data === 'number' &&\n    (data !== data || // NaN\n      data === Number.POSITIVE_INFINITY ||\n      data === Number.NEGATIVE_INFINITY)\n  );\n};\n\nexport const executeWhenDOMReady = function (fn: () => void) {\n  if (isNodeSdk() || document.readyState === 'complete') {\n    fn();\n  } else {\n    // Modeled after jQuery. Try DOMContentLoaded and onreadystatechange (which\n    // fire before onload), but fall back to onload.\n\n    let called = false;\n    const wrappedFn = function () {\n      if (!document.body) {\n        setTimeout(wrappedFn, Math.floor(10));\n        return;\n      }\n\n      if (!called) {\n        called = true;\n        fn();\n      }\n    };\n\n    if (document.addEventListener) {\n      document.addEventListener('DOMContentLoaded', wrappedFn, false);\n      // fallback to onload.\n      window.addEventListener('load', wrappedFn, false);\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    } else if ((document as any).attachEvent) {\n      // IE.\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      (document as any).attachEvent('onreadystatechange', () => {\n        if (document.readyState === 'complete') {\n          wrappedFn();\n        }\n      });\n      // fallback to onload.\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      (window as any).attachEvent('onload', wrappedFn);\n\n      // jQuery has an extra hack for IE that we could employ (based on\n      // http://javascript.nwbox.com/IEContentLoaded/) But it looks really old.\n      // I'm hoping we don't need it.\n    }\n  }\n};\n\n/**\n * Minimum key name. Invalid for actual data, used as a marker to sort before any valid names\n */\nexport const MIN_NAME = '[MIN_NAME]';\n\n/**\n * Maximum key name. Invalid for actual data, used as a marker to sort above any valid names\n */\nexport const MAX_NAME = '[MAX_NAME]';\n\n/**\n * Compares valid Firebase key names, plus min and max name\n */\nexport const nameCompare = function (a: string, b: string): number {\n  if (a === b) {\n    return 0;\n  } else if (a === MIN_NAME || b === MAX_NAME) {\n    return -1;\n  } else if (b === MIN_NAME || a === MAX_NAME) {\n    return 1;\n  } else {\n    const aAsInt = tryParseInt(a),\n      bAsInt = tryParseInt(b);\n\n    if (aAsInt !== null) {\n      if (bAsInt !== null) {\n        return aAsInt - bAsInt === 0 ? a.length - b.length : aAsInt - bAsInt;\n      } else {\n        return -1;\n      }\n    } else if (bAsInt !== null) {\n      return 1;\n    } else {\n      return a < b ? -1 : 1;\n    }\n  }\n};\n\n/**\n * @returns {!number} comparison result.\n */\nexport const stringCompare = function (a: string, b: string): number {\n  if (a === b) {\n    return 0;\n  } else if (a < b) {\n    return -1;\n  } else {\n    return 1;\n  }\n};\n\nexport const requireKey = function (\n  key: string,\n  obj: { [k: string]: unknown }\n): unknown {\n  if (obj && key in obj) {\n    return obj[key];\n  } else {\n    throw new Error(\n      'Missing required key (' + key + ') in object: ' + stringify(obj)\n    );\n  }\n};\n\nexport const ObjectToUniqueKey = function (obj: unknown): string {\n  if (typeof obj !== 'object' || obj === null) {\n    return stringify(obj);\n  }\n\n  const keys = [];\n  // eslint-disable-next-line guard-for-in\n  for (const k in obj) {\n    keys.push(k);\n  }\n\n  // Export as json, but with the keys sorted.\n  keys.sort();\n  let key = '{';\n  for (let i = 0; i < keys.length; i++) {\n    if (i !== 0) {\n      key += ',';\n    }\n    key += stringify(keys[i]);\n    key += ':';\n    key += ObjectToUniqueKey(obj[keys[i]]);\n  }\n\n  key += '}';\n  return key;\n};\n\n/**\n * Splits a string into a number of smaller segments of maximum size\n * @param str - The string\n * @param segsize - The maximum number of chars in the string.\n * @returns The string, split into appropriately-sized chunks\n */\nexport const splitStringBySize = function (\n  str: string,\n  segsize: number\n): string[] {\n  const len = str.length;\n\n  if (len <= segsize) {\n    return [str];\n  }\n\n  const dataSegs = [];\n  for (let c = 0; c < len; c += segsize) {\n    if (c + segsize > len) {\n      dataSegs.push(str.substring(c, len));\n    } else {\n      dataSegs.push(str.substring(c, c + segsize));\n    }\n  }\n  return dataSegs;\n};\n\n/**\n * Apply a function to each (key, value) pair in an object or\n * apply a function to each (index, value) pair in an array\n * @param obj - The object or array to iterate over\n * @param fn - The function to apply\n */\nexport function each(obj: object, fn: (k: string, v: unknown) => void) {\n  for (const key in obj) {\n    if (obj.hasOwnProperty(key)) {\n      fn(key, obj[key]);\n    }\n  }\n}\n\n/**\n * Like goog.bind, but doesn't bother to create a closure if opt_context is null/undefined.\n * @param callback - Callback function.\n * @param context - Optional context to bind to.\n *\n */\nexport const bindCallback = function (\n  callback: (a: unknown) => void,\n  context?: object | null\n): (a: unknown) => void {\n  return context ? callback.bind(context) : callback;\n};\n\n/**\n * Borrowed from http://hg.secondlife.com/llsd/src/tip/js/typedarray.js (MIT License)\n * I made one modification at the end and removed the NaN / Infinity\n * handling (since it seemed broken [caused an overflow] and we don't need it).  See MJL comments.\n * @param v - A double\n *\n */\nexport const doubleToIEEE754String = function (v: number): string {\n  assert(!isInvalidJSONNumber(v), 'Invalid JSON number'); // MJL\n\n  const ebits = 11,\n    fbits = 52;\n  const bias = (1 << (ebits - 1)) - 1;\n  let s, e, f, ln, i;\n\n  // Compute sign, exponent, fraction\n  // Skip NaN / Infinity handling --MJL.\n  if (v === 0) {\n    e = 0;\n    f = 0;\n    s = 1 / v === -Infinity ? 1 : 0;\n  } else {\n    s = v < 0;\n    v = Math.abs(v);\n\n    if (v >= Math.pow(2, 1 - bias)) {\n      // Normalized\n      ln = Math.min(Math.floor(Math.log(v) / Math.LN2), bias);\n      e = ln + bias;\n      f = Math.round(v * Math.pow(2, fbits - ln) - Math.pow(2, fbits));\n    } else {\n      // Denormalized\n      e = 0;\n      f = Math.round(v / Math.pow(2, 1 - bias - fbits));\n    }\n  }\n\n  // Pack sign, exponent, fraction\n  const bits = [];\n  for (i = fbits; i; i -= 1) {\n    bits.push(f % 2 ? 1 : 0);\n    f = Math.floor(f / 2);\n  }\n  for (i = ebits; i; i -= 1) {\n    bits.push(e % 2 ? 1 : 0);\n    e = Math.floor(e / 2);\n  }\n  bits.push(s ? 1 : 0);\n  bits.reverse();\n  const str = bits.join('');\n\n  // Return the data as a hex string. --MJL\n  let hexByteString = '';\n  for (i = 0; i < 64; i += 8) {\n    let hexByte = parseInt(str.substr(i, 8), 2).toString(16);\n    if (hexByte.length === 1) {\n      hexByte = '0' + hexByte;\n    }\n    hexByteString = hexByteString + hexByte;\n  }\n  return hexByteString.toLowerCase();\n};\n\n/**\n * Used to detect if we're in a Chrome content script (which executes in an\n * isolated environment where long-polling doesn't work).\n */\nexport const isChromeExtensionContentScript = function (): boolean {\n  return !!(\n    typeof window === 'object' &&\n    window['chrome'] &&\n    window['chrome']['extension'] &&\n    !/^chrome/.test(window.location.href)\n  );\n};\n\n/**\n * Used to detect if we're in a Windows 8 Store app.\n */\nexport const isWindowsStoreApp = function (): boolean {\n  // Check for the presence of a couple WinRT globals\n  return typeof Windows === 'object' && typeof Windows.UI === 'object';\n};\n\n/**\n * Converts a server error code to a Javascript Error\n */\nexport function errorForServerCode(code: string, query: QueryContext): Error {\n  let reason = 'Unknown Error';\n  if (code === 'too_big') {\n    reason =\n      'The data requested exceeds the maximum size ' +\n      'that can be accessed with a single request.';\n  } else if (code === 'permission_denied') {\n    reason = \"Client doesn't have permission to access the desired data.\";\n  } else if (code === 'unavailable') {\n    reason = 'The service is unavailable';\n  }\n\n  const error = new Error(\n    code + ' at ' + query._path.toString() + ': ' + reason\n  );\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  (error as any).code = code.toUpperCase();\n  return error;\n}\n\n/**\n * Used to test for integer-looking strings\n */\nexport const INTEGER_REGEXP_ = new RegExp('^-?(0*)\\\\d{1,10}$');\n\n/**\n * For use in keys, the minimum possible 32-bit integer.\n */\nexport const INTEGER_32_MIN = -2147483648;\n\n/**\n * For use in kyes, the maximum possible 32-bit integer.\n */\nexport const INTEGER_32_MAX = 2147483647;\n\n/**\n * If the string contains a 32-bit integer, return it.  Else return null.\n */\nexport const tryParseInt = function (str: string): number | null {\n  if (INTEGER_REGEXP_.test(str)) {\n    const intVal = Number(str);\n    if (intVal >= INTEGER_32_MIN && intVal <= INTEGER_32_MAX) {\n      return intVal;\n    }\n  }\n  return null;\n};\n\n/**\n * Helper to run some code but catch any exceptions and re-throw them later.\n * Useful for preventing user callbacks from breaking internal code.\n *\n * Re-throwing the exception from a setTimeout is a little evil, but it's very\n * convenient (we don't have to try to figure out when is a safe point to\n * re-throw it), and the behavior seems reasonable:\n *\n * * If you aren't pausing on exceptions, you get an error in the console with\n *   the correct stack trace.\n * * If you're pausing on all exceptions, the debugger will pause on your\n *   exception and then again when we rethrow it.\n * * If you're only pausing on uncaught exceptions, the debugger will only pause\n *   on us re-throwing it.\n *\n * @param fn - The code to guard.\n */\nexport const exceptionGuard = function (fn: () => void) {\n  try {\n    fn();\n  } catch (e) {\n    // Re-throw exception when it's safe.\n    setTimeout(() => {\n      // It used to be that \"throw e\" would result in a good console error with\n      // relevant context, but as of Chrome 39, you just get the firebase.js\n      // file/line number where we re-throw it, which is useless. So we log\n      // e.stack explicitly.\n      const stack = e.stack || '';\n      warn('Exception was thrown by user callback.', stack);\n      throw e;\n    }, Math.floor(0));\n  }\n};\n\n/**\n * Helper function to safely call opt_callback with the specified arguments.  It:\n * 1. Turns into a no-op if opt_callback is null or undefined.\n * 2. Wraps the call inside exceptionGuard to prevent exceptions from breaking our state.\n *\n * @param callback - Optional onComplete callback.\n * @param varArgs - Arbitrary args to be passed to opt_onComplete\n */\nexport const callUserCallback = function (\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  callback?: Function | null,\n  ...varArgs: unknown[]\n) {\n  if (typeof callback === 'function') {\n    exceptionGuard(() => {\n      callback(...varArgs);\n    });\n  }\n};\n\n/**\n * @returns {boolean} true if we think we're currently being crawled.\n */\nexport const beingCrawled = function (): boolean {\n  const userAgent =\n    (typeof window === 'object' &&\n      window['navigator'] &&\n      window['navigator']['userAgent']) ||\n    '';\n\n  // For now we whitelist the most popular crawlers.  We should refine this to be the set of crawlers we\n  // believe to support JavaScript/AJAX rendering.\n  // NOTE: Google Webmaster Tools doesn't really belong, but their \"This is how a visitor to your website\n  // would have seen the page\" is flaky if we don't treat it as a crawler.\n  return (\n    userAgent.search(\n      /googlebot|google webmaster tools|bingbot|yahoo! slurp|baiduspider|yandexbot|duckduckbot/i\n    ) >= 0\n  );\n};\n\n/**\n * Export a property of an object using a getter function.\n */\nexport const exportPropGetter = function (\n  object: object,\n  name: string,\n  fnGet: () => unknown\n) {\n  Object.defineProperty(object, name, { get: fnGet });\n};\n\n/**\n * Same as setTimeout() except on Node.JS it will /not/ prevent the process from exiting.\n *\n * It is removed with clearTimeout() as normal.\n *\n * @param fn - Function to run.\n * @param time - Milliseconds to wait before running.\n * @returns The setTimeout() return value.\n */\nexport const setTimeoutNonBlocking = function (\n  fn: () => void,\n  time: number\n): number | object {\n  const timeout: number | object = setTimeout(fn, time);\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  if (typeof timeout === 'object' && (timeout as any)['unref']) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    (timeout as any)['unref']();\n  }\n  return timeout;\n};\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  AppCheckInternalComponentName,\n  AppCheckTokenListener,\n  AppCheckTokenResult,\n  FirebaseAppCheckInternal\n} from '@firebase/app-check-interop-types';\nimport { Provider } from '@firebase/component';\n\nimport { warn } from './util/util';\n\n/**\n * Abstraction around AppCheck's token fetching capabilities.\n */\nexport class AppCheckTokenProvider {\n  private appCheck?: FirebaseAppCheckInternal;\n  constructor(\n    private appName_: string,\n    private appCheckProvider?: Provider<AppCheckInternalComponentName>\n  ) {\n    this.appCheck = appCheckProvider?.getImmediate({ optional: true });\n    if (!this.appCheck) {\n      appCheckProvider?.get().then(appCheck => (this.appCheck = appCheck));\n    }\n  }\n\n  getToken(forceRefresh?: boolean): Promise<AppCheckTokenResult> {\n    if (!this.appCheck) {\n      return new Promise<AppCheckTokenResult>((resolve, reject) => {\n        // Support delayed initialization of FirebaseAppCheck. This allows our\n        // customers to initialize the RTDB SDK before initializing Firebase\n        // AppCheck and ensures that all requests are authenticated if a token\n        // becomes available before the timoeout below expires.\n        setTimeout(() => {\n          if (this.appCheck) {\n            this.getToken(forceRefresh).then(resolve, reject);\n          } else {\n            resolve(null);\n          }\n        }, 0);\n      });\n    }\n    return this.appCheck.getToken(forceRefresh);\n  }\n\n  addTokenChangeListener(listener: AppCheckTokenListener) {\n    this.appCheckProvider\n      ?.get()\n      .then(appCheck => appCheck.addTokenListener(listener));\n  }\n\n  notifyForInvalidToken(): void {\n    warn(\n      `Provided AppCheck credentials for the app named \"${this.appName_}\" ` +\n        'are invalid. This usually indicates your app was not initialized correctly.'\n    );\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseAuthTokenData } from '@firebase/app-types/private';\nimport {\n  FirebaseAuthInternal,\n  FirebaseAuthInternalName\n} from '@firebase/auth-interop-types';\nimport { Provider } from '@firebase/component';\n\nimport { log, warn } from './util/util';\n\nexport interface AuthTokenProvider {\n  getToken(forceRefresh: boolean): Promise<FirebaseAuthTokenData>;\n  addTokenChangeListener(listener: (token: string | null) => void): void;\n  removeTokenChangeListener(listener: (token: string | null) => void): void;\n  notifyForInvalidToken(): void;\n}\n\n/**\n * Abstraction around FirebaseApp's token fetching capabilities.\n */\nexport class FirebaseAuthTokenProvider implements AuthTokenProvider {\n  private auth_: FirebaseAuthInternal | null = null;\n\n  constructor(\n    private appName_: string,\n    private firebaseOptions_: object,\n    private authProvider_: Provider<FirebaseAuthInternalName>\n  ) {\n    this.auth_ = authProvider_.getImmediate({ optional: true });\n    if (!this.auth_) {\n      authProvider_.onInit(auth => (this.auth_ = auth));\n    }\n  }\n\n  getToken(forceRefresh: boolean): Promise<FirebaseAuthTokenData> {\n    if (!this.auth_) {\n      return new Promise<FirebaseAuthTokenData>((resolve, reject) => {\n        // Support delayed initialization of FirebaseAuth. This allows our\n        // customers to initialize the RTDB SDK before initializing Firebase\n        // Auth and ensures that all requests are authenticated if a token\n        // becomes available before the timoeout below expires.\n        setTimeout(() => {\n          if (this.auth_) {\n            this.getToken(forceRefresh).then(resolve, reject);\n          } else {\n            resolve(null);\n          }\n        }, 0);\n      });\n    }\n\n    return this.auth_.getToken(forceRefresh).catch(error => {\n      // TODO: Need to figure out all the cases this is raised and whether\n      // this makes sense.\n      if (error && error.code === 'auth/token-not-initialized') {\n        log('Got auth/token-not-initialized error.  Treating as null token.');\n        return null;\n      } else {\n        return Promise.reject(error);\n      }\n    });\n  }\n\n  addTokenChangeListener(listener: (token: string | null) => void): void {\n    // TODO: We might want to wrap the listener and call it with no args to\n    // avoid a leaky abstraction, but that makes removing the listener harder.\n    if (this.auth_) {\n      this.auth_.addAuthTokenListener(listener);\n    } else {\n      this.authProvider_\n        .get()\n        .then(auth => auth.addAuthTokenListener(listener));\n    }\n  }\n\n  removeTokenChangeListener(listener: (token: string | null) => void): void {\n    this.authProvider_\n      .get()\n      .then(auth => auth.removeAuthTokenListener(listener));\n  }\n\n  notifyForInvalidToken(): void {\n    let errorMessage =\n      'Provided authentication credentials for the app named \"' +\n      this.appName_ +\n      '\" are invalid. This usually indicates your app was not ' +\n      'initialized correctly. ';\n    if ('credential' in this.firebaseOptions_) {\n      errorMessage +=\n        'Make sure the \"credential\" property provided to initializeApp() ' +\n        'is authorized to access the specified \"databaseURL\" and is from the correct ' +\n        'project.';\n    } else if ('serviceAccount' in this.firebaseOptions_) {\n      errorMessage +=\n        'Make sure the \"serviceAccount\" property provided to initializeApp() ' +\n        'is authorized to access the specified \"databaseURL\" and is from the correct ' +\n        'project.';\n    } else {\n      errorMessage +=\n        'Make sure the \"apiKey\" and \"databaseURL\" properties provided to ' +\n        'initializeApp() match the values provided for your app at ' +\n        'https://console.firebase.google.com/.';\n    }\n    warn(errorMessage);\n  }\n}\n\n/* AuthTokenProvider that supplies a constant token. Used by Admin SDK or mockUserToken with emulators. */\nexport class EmulatorTokenProvider implements AuthTokenProvider {\n  /** A string that is treated as an admin access token by the RTDB emulator. Used by Admin SDK. */\n  static OWNER = 'owner';\n\n  constructor(private accessToken: string) {}\n\n  getToken(forceRefresh: boolean): Promise<FirebaseAuthTokenData> {\n    return Promise.resolve({\n      accessToken: this.accessToken\n    });\n  }\n\n  addTokenChangeListener(listener: (token: string | null) => void): void {\n    // Invoke the listener immediately to match the behavior in Firebase Auth\n    // (see packages/auth/src/auth.js#L1807)\n    listener(this.accessToken);\n  }\n\n  removeTokenChangeListener(listener: (token: string | null) => void): void {}\n\n  notifyForInvalidToken(): void {}\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport const PROTOCOL_VERSION = '5';\n\nexport const VERSION_PARAM = 'v';\n\nexport const TRANSPORT_SESSION_PARAM = 's';\n\nexport const REFERER_PARAM = 'r';\n\nexport const FORGE_REF = 'f';\n\n// Matches console.firebase.google.com, firebase-console-*.corp.google.com and\n// firebase.corp.google.com\nexport const FORGE_DOMAIN_RE = /(console\\.firebase|firebase-console-\\w+\\.corp|firebase\\.corp)\\.google\\.com/;\n\nexport const LAST_SESSION_PARAM = 'ls';\n\nexport const APPLICATION_ID_PARAM = 'p';\n\nexport const APP_CHECK_TOKEN_PARAM = 'ac';\n\nexport const WEBSOCKET = 'websocket';\n\nexport const LONG_POLLING = 'long_polling';\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { LONG_POLLING, WEBSOCKET } from '../realtime/Constants';\n\nimport { PersistentStorage } from './storage/storage';\nimport { each } from './util/util';\n\n/**\n * A class that holds metadata about a Repo object\n */\nexport class RepoInfo {\n  private _host: string;\n  private _domain: string;\n  internalHost: string;\n\n  /**\n   * @param host - Hostname portion of the url for the repo\n   * @param secure - Whether or not this repo is accessed over ssl\n   * @param namespace - The namespace represented by the repo\n   * @param webSocketOnly - Whether to prefer websockets over all other transports (used by Nest).\n   * @param nodeAdmin - Whether this instance uses Admin SDK credentials\n   * @param persistenceKey - Override the default session persistence storage key\n   */\n  constructor(\n    host: string,\n    public readonly secure: boolean,\n    public readonly namespace: string,\n    public readonly webSocketOnly: boolean,\n    public readonly nodeAdmin: boolean = false,\n    public readonly persistenceKey: string = '',\n    public readonly includeNamespaceInQueryParams: boolean = false\n  ) {\n    this._host = host.toLowerCase();\n    this._domain = this._host.substr(this._host.indexOf('.') + 1);\n    this.internalHost =\n      (PersistentStorage.get('host:' + host) as string) || this._host;\n  }\n\n  isCacheableHost(): boolean {\n    return this.internalHost.substr(0, 2) === 's-';\n  }\n\n  isCustomHost() {\n    return (\n      this._domain !== 'firebaseio.com' &&\n      this._domain !== 'firebaseio-demo.com'\n    );\n  }\n\n  get host() {\n    return this._host;\n  }\n\n  set host(newHost: string) {\n    if (newHost !== this.internalHost) {\n      this.internalHost = newHost;\n      if (this.isCacheableHost()) {\n        PersistentStorage.set('host:' + this._host, this.internalHost);\n      }\n    }\n  }\n\n  toString(): string {\n    let str = this.toURLString();\n    if (this.persistenceKey) {\n      str += '<' + this.persistenceKey + '>';\n    }\n    return str;\n  }\n\n  toURLString(): string {\n    const protocol = this.secure ? 'https://' : 'http://';\n    const query = this.includeNamespaceInQueryParams\n      ? `?ns=${this.namespace}`\n      : '';\n    return `${protocol}${this.host}/${query}`;\n  }\n}\n\nfunction repoInfoNeedsQueryParam(repoInfo: RepoInfo): boolean {\n  return (\n    repoInfo.host !== repoInfo.internalHost ||\n    repoInfo.isCustomHost() ||\n    repoInfo.includeNamespaceInQueryParams\n  );\n}\n\n/**\n * Returns the websocket URL for this repo\n * @param repoInfo - RepoInfo object\n * @param type - of connection\n * @param params - list\n * @returns The URL for this repo\n */\nexport function repoInfoConnectionURL(\n  repoInfo: RepoInfo,\n  type: string,\n  params: { [k: string]: string }\n): string {\n  assert(typeof type === 'string', 'typeof type must == string');\n  assert(typeof params === 'object', 'typeof params must == object');\n\n  let connURL: string;\n  if (type === WEBSOCKET) {\n    connURL =\n      (repoInfo.secure ? 'wss://' : 'ws://') + repoInfo.internalHost + '/.ws?';\n  } else if (type === LONG_POLLING) {\n    connURL =\n      (repoInfo.secure ? 'https://' : 'http://') +\n      repoInfo.internalHost +\n      '/.lp?';\n  } else {\n    throw new Error('Unknown connection type: ' + type);\n  }\n  if (repoInfoNeedsQueryParam(repoInfo)) {\n    params['ns'] = repoInfo.namespace;\n  }\n\n  const pairs: string[] = [];\n\n  each(params, (key: string, value: string) => {\n    pairs.push(key + '=' + value);\n  });\n\n  return connURL + pairs.join('&');\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { deepCopy, contains } from '@firebase/util';\n\n/**\n * Tracks a collection of stats.\n */\nexport class StatsCollection {\n  private counters_: { [k: string]: number } = {};\n\n  incrementCounter(name: string, amount: number = 1) {\n    if (!contains(this.counters_, name)) {\n      this.counters_[name] = 0;\n    }\n\n    this.counters_[name] += amount;\n  }\n\n  get() {\n    return deepCopy(this.counters_);\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { RepoInfo } from '../RepoInfo';\n\nimport { StatsCollection } from './StatsCollection';\n\nconst collections: { [k: string]: StatsCollection } = {};\nconst reporters: { [k: string]: unknown } = {};\n\nexport function statsManagerGetCollection(repoInfo: RepoInfo): StatsCollection {\n  const hashString = repoInfo.toString();\n\n  if (!collections[hashString]) {\n    collections[hashString] = new StatsCollection();\n  }\n\n  return collections[hashString];\n}\n\nexport function statsManagerGetOrCreateReporter<T>(\n  repoInfo: RepoInfo,\n  creatorFunction: () => T\n): T {\n  const hashString = repoInfo.toString();\n\n  if (!reporters[hashString]) {\n    reporters[hashString] = creatorFunction();\n  }\n\n  return reporters[hashString] as T;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { exceptionGuard } from '../../core/util/util';\n\n/**\n * This class ensures the packets from the server arrive in order\n * This class takes data from the server and ensures it gets passed into the callbacks in order.\n */\nexport class PacketReceiver {\n  pendingResponses: unknown[] = [];\n  currentResponseNum = 0;\n  closeAfterResponse = -1;\n  onClose: (() => void) | null = null;\n\n  /**\n   * @param onMessage_\n   */\n  constructor(private onMessage_: (a: {}) => void) {}\n\n  closeAfter(responseNum: number, callback: () => void) {\n    this.closeAfterResponse = responseNum;\n    this.onClose = callback;\n    if (this.closeAfterResponse < this.currentResponseNum) {\n      this.onClose();\n      this.onClose = null;\n    }\n  }\n\n  /**\n   * Each message from the server comes with a response number, and an array of data. The responseNumber\n   * allows us to ensure that we process them in the right order, since we can't be guaranteed that all\n   * browsers will respond in the same order as the requests we sent\n   */\n  handleResponse(requestNum: number, data: unknown[]) {\n    this.pendingResponses[requestNum] = data;\n    while (this.pendingResponses[this.currentResponseNum]) {\n      const toProcess = this.pendingResponses[\n        this.currentResponseNum\n      ] as unknown[];\n      delete this.pendingResponses[this.currentResponseNum];\n      for (let i = 0; i < toProcess.length; ++i) {\n        if (toProcess[i]) {\n          exceptionGuard(() => {\n            this.onMessage_(toProcess[i]);\n          });\n        }\n      }\n      if (this.currentResponseNum === this.closeAfterResponse) {\n        if (this.onClose) {\n          this.onClose();\n          this.onClose = null;\n        }\n        break;\n      }\n      this.currentResponseNum++;\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { base64Encode, isNodeSdk, stringify } from '@firebase/util';\n\nimport { RepoInfo, repoInfoConnectionURL } from '../core/RepoInfo';\nimport { StatsCollection } from '../core/stats/StatsCollection';\nimport { statsManagerGetCollection } from '../core/stats/StatsManager';\nimport {\n  executeWhenDOMReady,\n  isChromeExtensionContentScript,\n  isWindowsStoreApp,\n  log,\n  logWrapper,\n  LUIDGenerator,\n  splitStringBySize\n} from '../core/util/util';\n\nimport {\n  APP_CHECK_TOKEN_PARAM,\n  APPLICATION_ID_PARAM,\n  FORGE_DOMAIN_RE,\n  FORGE_REF,\n  LAST_SESSION_PARAM,\n  LONG_POLLING,\n  PROTOCOL_VERSION,\n  REFERER_PARAM,\n  TRANSPORT_SESSION_PARAM,\n  VERSION_PARAM\n} from './Constants';\nimport { PacketReceiver } from './polling/PacketReceiver';\nimport { Transport } from './Transport';\n\n// URL query parameters associated with longpolling\nexport const FIREBASE_LONGPOLL_START_PARAM = 'start';\nexport const FIREBASE_LONGPOLL_CLOSE_COMMAND = 'close';\nexport const FIREBASE_LONGPOLL_COMMAND_CB_NAME = 'pLPCommand';\nexport const FIREBASE_LONGPOLL_DATA_CB_NAME = 'pRTLPCB';\nexport const FIREBASE_LONGPOLL_ID_PARAM = 'id';\nexport const FIREBASE_LONGPOLL_PW_PARAM = 'pw';\nexport const FIREBASE_LONGPOLL_SERIAL_PARAM = 'ser';\nexport const FIREBASE_LONGPOLL_CALLBACK_ID_PARAM = 'cb';\nexport const FIREBASE_LONGPOLL_SEGMENT_NUM_PARAM = 'seg';\nexport const FIREBASE_LONGPOLL_SEGMENTS_IN_PACKET = 'ts';\nexport const FIREBASE_LONGPOLL_DATA_PARAM = 'd';\nexport const FIREBASE_LONGPOLL_DISCONN_FRAME_PARAM = 'disconn';\nexport const FIREBASE_LONGPOLL_DISCONN_FRAME_REQUEST_PARAM = 'dframe';\n\n//Data size constants.\n//TODO: Perf: the maximum length actually differs from browser to browser.\n// We should check what browser we're on and set accordingly.\nconst MAX_URL_DATA_SIZE = 1870;\nconst SEG_HEADER_SIZE = 30; //ie: &seg=8299234&ts=982389123&d=\nconst MAX_PAYLOAD_SIZE = MAX_URL_DATA_SIZE - SEG_HEADER_SIZE;\n\n/**\n * Keepalive period\n * send a fresh request at minimum every 25 seconds. Opera has a maximum request\n * length of 30 seconds that we can't exceed.\n */\nconst KEEPALIVE_REQUEST_INTERVAL = 25000;\n\n/**\n * How long to wait before aborting a long-polling connection attempt.\n */\nconst LP_CONNECT_TIMEOUT = 30000;\n\n/**\n * This class manages a single long-polling connection.\n */\nexport class BrowserPollConnection implements Transport {\n  bytesSent = 0;\n  bytesReceived = 0;\n  urlFn: (params: object) => string;\n  scriptTagHolder: FirebaseIFrameScriptHolder;\n  myDisconnFrame: HTMLIFrameElement;\n  curSegmentNum: number;\n  myPacketOrderer: PacketReceiver;\n  id: string;\n  password: string;\n  private log_: (...a: unknown[]) => void;\n  private stats_: StatsCollection;\n  private everConnected_ = false;\n  private isClosed_: boolean;\n  private connectTimeoutTimer_: number | null;\n  private onDisconnect_: ((a?: boolean) => void) | null;\n\n  /**\n   * @param connId An identifier for this connection, used for logging\n   * @param repoInfo The info for the endpoint to send data to.\n   * @param applicationId The Firebase App ID for this project.\n   * @param appCheckToken The AppCheck token for this client.\n   * @param authToken The AuthToken to use for this connection.\n   * @param transportSessionId Optional transportSessionid if we are\n   * reconnecting for an existing transport session\n   * @param lastSessionId Optional lastSessionId if the PersistentConnection has\n   * already created a connection previously\n   */\n  constructor(\n    public connId: string,\n    public repoInfo: RepoInfo,\n    private applicationId?: string,\n    private appCheckToken?: string,\n    private authToken?: string,\n    public transportSessionId?: string,\n    public lastSessionId?: string\n  ) {\n    this.log_ = logWrapper(connId);\n    this.stats_ = statsManagerGetCollection(repoInfo);\n    this.urlFn = (params: { [k: string]: string }) => {\n      // Always add the token if we have one.\n      if (this.appCheckToken) {\n        params[APP_CHECK_TOKEN_PARAM] = this.appCheckToken;\n      }\n      return repoInfoConnectionURL(repoInfo, LONG_POLLING, params);\n    };\n  }\n\n  /**\n   * @param onMessage - Callback when messages arrive\n   * @param onDisconnect - Callback with connection lost.\n   */\n  open(onMessage: (msg: {}) => void, onDisconnect: (a?: boolean) => void) {\n    this.curSegmentNum = 0;\n    this.onDisconnect_ = onDisconnect;\n    this.myPacketOrderer = new PacketReceiver(onMessage);\n    this.isClosed_ = false;\n\n    this.connectTimeoutTimer_ = setTimeout(() => {\n      this.log_('Timed out trying to connect.');\n      // Make sure we clear the host cache\n      this.onClosed_();\n      this.connectTimeoutTimer_ = null;\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    }, Math.floor(LP_CONNECT_TIMEOUT)) as any;\n\n    // Ensure we delay the creation of the iframe until the DOM is loaded.\n    executeWhenDOMReady(() => {\n      if (this.isClosed_) {\n        return;\n      }\n\n      //Set up a callback that gets triggered once a connection is set up.\n      this.scriptTagHolder = new FirebaseIFrameScriptHolder(\n        (...args) => {\n          const [command, arg1, arg2, arg3, arg4] = args;\n          this.incrementIncomingBytes_(args);\n          if (!this.scriptTagHolder) {\n            return; // we closed the connection.\n          }\n\n          if (this.connectTimeoutTimer_) {\n            clearTimeout(this.connectTimeoutTimer_);\n            this.connectTimeoutTimer_ = null;\n          }\n          this.everConnected_ = true;\n          if (command === FIREBASE_LONGPOLL_START_PARAM) {\n            this.id = arg1 as string;\n            this.password = arg2 as string;\n          } else if (command === FIREBASE_LONGPOLL_CLOSE_COMMAND) {\n            // Don't clear the host cache. We got a response from the server, so we know it's reachable\n            if (arg1) {\n              // We aren't expecting any more data (other than what the server's already in the process of sending us\n              // through our already open polls), so don't send any more.\n              this.scriptTagHolder.sendNewPolls = false;\n\n              // arg1 in this case is the last response number sent by the server. We should try to receive\n              // all of the responses up to this one before closing\n              this.myPacketOrderer.closeAfter(arg1 as number, () => {\n                this.onClosed_();\n              });\n            } else {\n              this.onClosed_();\n            }\n          } else {\n            throw new Error('Unrecognized command received: ' + command);\n          }\n        },\n        (...args) => {\n          const [pN, data] = args;\n          this.incrementIncomingBytes_(args);\n          this.myPacketOrderer.handleResponse(pN as number, data as unknown[]);\n        },\n        () => {\n          this.onClosed_();\n        },\n        this.urlFn\n      );\n\n      //Send the initial request to connect. The serial number is simply to keep the browser from pulling previous results\n      //from cache.\n      const urlParams: { [k: string]: string | number } = {};\n      urlParams[FIREBASE_LONGPOLL_START_PARAM] = 't';\n      urlParams[FIREBASE_LONGPOLL_SERIAL_PARAM] = Math.floor(\n        Math.random() * 100000000\n      );\n      if (this.scriptTagHolder.uniqueCallbackIdentifier) {\n        urlParams[\n          FIREBASE_LONGPOLL_CALLBACK_ID_PARAM\n        ] = this.scriptTagHolder.uniqueCallbackIdentifier;\n      }\n      urlParams[VERSION_PARAM] = PROTOCOL_VERSION;\n      if (this.transportSessionId) {\n        urlParams[TRANSPORT_SESSION_PARAM] = this.transportSessionId;\n      }\n      if (this.lastSessionId) {\n        urlParams[LAST_SESSION_PARAM] = this.lastSessionId;\n      }\n      if (this.applicationId) {\n        urlParams[APPLICATION_ID_PARAM] = this.applicationId;\n      }\n      if (this.appCheckToken) {\n        urlParams[APP_CHECK_TOKEN_PARAM] = this.appCheckToken;\n      }\n      if (\n        typeof location !== 'undefined' &&\n        location.hostname &&\n        FORGE_DOMAIN_RE.test(location.hostname)\n      ) {\n        urlParams[REFERER_PARAM] = FORGE_REF;\n      }\n      const connectURL = this.urlFn(urlParams);\n      this.log_('Connecting via long-poll to ' + connectURL);\n      this.scriptTagHolder.addTag(connectURL, () => {\n        /* do nothing */\n      });\n    });\n  }\n\n  /**\n   * Call this when a handshake has completed successfully and we want to consider the connection established\n   */\n  start() {\n    this.scriptTagHolder.startLongPoll(this.id, this.password);\n    this.addDisconnectPingFrame(this.id, this.password);\n  }\n\n  private static forceAllow_: boolean;\n\n  /**\n   * Forces long polling to be considered as a potential transport\n   */\n  static forceAllow() {\n    BrowserPollConnection.forceAllow_ = true;\n  }\n\n  private static forceDisallow_: boolean;\n\n  /**\n   * Forces longpolling to not be considered as a potential transport\n   */\n  static forceDisallow() {\n    BrowserPollConnection.forceDisallow_ = true;\n  }\n\n  // Static method, use string literal so it can be accessed in a generic way\n  static isAvailable() {\n    if (isNodeSdk()) {\n      return false;\n    } else if (BrowserPollConnection.forceAllow_) {\n      return true;\n    } else {\n      // NOTE: In React-Native there's normally no 'document', but if you debug a React-Native app in\n      // the Chrome debugger, 'document' is defined, but document.createElement is null (2015/06/08).\n      return (\n        !BrowserPollConnection.forceDisallow_ &&\n        typeof document !== 'undefined' &&\n        document.createElement != null &&\n        !isChromeExtensionContentScript() &&\n        !isWindowsStoreApp()\n      );\n    }\n  }\n\n  /**\n   * No-op for polling\n   */\n  markConnectionHealthy() {}\n\n  /**\n   * Stops polling and cleans up the iframe\n   */\n  private shutdown_() {\n    this.isClosed_ = true;\n\n    if (this.scriptTagHolder) {\n      this.scriptTagHolder.close();\n      this.scriptTagHolder = null;\n    }\n\n    //remove the disconnect frame, which will trigger an XHR call to the server to tell it we're leaving.\n    if (this.myDisconnFrame) {\n      document.body.removeChild(this.myDisconnFrame);\n      this.myDisconnFrame = null;\n    }\n\n    if (this.connectTimeoutTimer_) {\n      clearTimeout(this.connectTimeoutTimer_);\n      this.connectTimeoutTimer_ = null;\n    }\n  }\n\n  /**\n   * Triggered when this transport is closed\n   */\n  private onClosed_() {\n    if (!this.isClosed_) {\n      this.log_('Longpoll is closing itself');\n      this.shutdown_();\n\n      if (this.onDisconnect_) {\n        this.onDisconnect_(this.everConnected_);\n        this.onDisconnect_ = null;\n      }\n    }\n  }\n\n  /**\n   * External-facing close handler. RealTime has requested we shut down. Kill our connection and tell the server\n   * that we've left.\n   */\n  close() {\n    if (!this.isClosed_) {\n      this.log_('Longpoll is being closed.');\n      this.shutdown_();\n    }\n  }\n\n  /**\n   * Send the JSON object down to the server. It will need to be stringified, base64 encoded, and then\n   * broken into chunks (since URLs have a small maximum length).\n   * @param data - The JSON data to transmit.\n   */\n  send(data: {}) {\n    const dataStr = stringify(data);\n    this.bytesSent += dataStr.length;\n    this.stats_.incrementCounter('bytes_sent', dataStr.length);\n\n    //first, lets get the base64-encoded data\n    const base64data = base64Encode(dataStr);\n\n    //We can only fit a certain amount in each URL, so we need to split this request\n    //up into multiple pieces if it doesn't fit in one request.\n    const dataSegs = splitStringBySize(base64data, MAX_PAYLOAD_SIZE);\n\n    //Enqueue each segment for transmission. We assign each chunk a sequential ID and a total number\n    //of segments so that we can reassemble the packet on the server.\n    for (let i = 0; i < dataSegs.length; i++) {\n      this.scriptTagHolder.enqueueSegment(\n        this.curSegmentNum,\n        dataSegs.length,\n        dataSegs[i]\n      );\n      this.curSegmentNum++;\n    }\n  }\n\n  /**\n   * This is how we notify the server that we're leaving.\n   * We aren't able to send requests with DHTML on a window close event, but we can\n   * trigger XHR requests in some browsers (everything but Opera basically).\n   */\n  addDisconnectPingFrame(id: string, pw: string) {\n    if (isNodeSdk()) {\n      return;\n    }\n    this.myDisconnFrame = document.createElement('iframe');\n    const urlParams: { [k: string]: string } = {};\n    urlParams[FIREBASE_LONGPOLL_DISCONN_FRAME_REQUEST_PARAM] = 't';\n    urlParams[FIREBASE_LONGPOLL_ID_PARAM] = id;\n    urlParams[FIREBASE_LONGPOLL_PW_PARAM] = pw;\n    this.myDisconnFrame.src = this.urlFn(urlParams);\n    this.myDisconnFrame.style.display = 'none';\n\n    document.body.appendChild(this.myDisconnFrame);\n  }\n\n  /**\n   * Used to track the bytes received by this client\n   */\n  private incrementIncomingBytes_(args: unknown) {\n    // TODO: This is an annoying perf hit just to track the number of incoming bytes.  Maybe it should be opt-in.\n    const bytesReceived = stringify(args).length;\n    this.bytesReceived += bytesReceived;\n    this.stats_.incrementCounter('bytes_received', bytesReceived);\n  }\n}\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport interface IFrameElement extends HTMLIFrameElement {\n  doc: Document;\n}\n\n/*********************************************************************************************\n * A wrapper around an iframe that is used as a long-polling script holder.\n *********************************************************************************************/\nexport class FirebaseIFrameScriptHolder {\n  //We maintain a count of all of the outstanding requests, because if we have too many active at once it can cause\n  //problems in some browsers.\n  outstandingRequests = new Set<number>();\n\n  //A queue of the pending segments waiting for transmission to the server.\n  pendingSegs: Array<{ seg: number; ts: number; d: unknown }> = [];\n\n  //A serial number. We use this for two things:\n  // 1) A way to ensure the browser doesn't cache responses to polls\n  // 2) A way to make the server aware when long-polls arrive in a different order than we started them. The\n  //    server needs to release both polls in this case or it will cause problems in Opera since Opera can only execute\n  //    JSONP code in the order it was added to the iframe.\n  currentSerial = Math.floor(Math.random() * 100000000);\n\n  // This gets set to false when we're \"closing down\" the connection (e.g. we're switching transports but there's still\n  // incoming data from the server that we're waiting for).\n  sendNewPolls = true;\n\n  uniqueCallbackIdentifier: number;\n  myIFrame: IFrameElement;\n  alive: boolean;\n  myID: string;\n  myPW: string;\n  commandCB: (command: string, ...args: unknown[]) => void;\n  onMessageCB: (...args: unknown[]) => void;\n\n  /**\n   * @param commandCB - The callback to be called when control commands are recevied from the server.\n   * @param onMessageCB - The callback to be triggered when responses arrive from the server.\n   * @param onDisconnect - The callback to be triggered when this tag holder is closed\n   * @param urlFn - A function that provides the URL of the endpoint to send data to.\n   */\n  constructor(\n    commandCB: (command: string, ...args: unknown[]) => void,\n    onMessageCB: (...args: unknown[]) => void,\n    public onDisconnect: () => void,\n    public urlFn: (a: object) => string\n  ) {\n    if (!isNodeSdk()) {\n      //Each script holder registers a couple of uniquely named callbacks with the window. These are called from the\n      //iframes where we put the long-polling script tags. We have two callbacks:\n      //   1) Command Callback - Triggered for control issues, like starting a connection.\n      //   2) Message Callback - Triggered when new data arrives.\n      this.uniqueCallbackIdentifier = LUIDGenerator();\n      window[\n        FIREBASE_LONGPOLL_COMMAND_CB_NAME + this.uniqueCallbackIdentifier\n      ] = commandCB;\n      window[\n        FIREBASE_LONGPOLL_DATA_CB_NAME + this.uniqueCallbackIdentifier\n      ] = onMessageCB;\n\n      //Create an iframe for us to add script tags to.\n      this.myIFrame = FirebaseIFrameScriptHolder.createIFrame_();\n\n      // Set the iframe's contents.\n      let script = '';\n      // if we set a javascript url, it's IE and we need to set the document domain. The javascript url is sufficient\n      // for ie9, but ie8 needs to do it again in the document itself.\n      if (\n        this.myIFrame.src &&\n        this.myIFrame.src.substr(0, 'javascript:'.length) === 'javascript:'\n      ) {\n        const currentDomain = document.domain;\n        script = '<script>document.domain=\"' + currentDomain + '\";</script>';\n      }\n      const iframeContents = '<html><body>' + script + '</body></html>';\n      try {\n        this.myIFrame.doc.open();\n        this.myIFrame.doc.write(iframeContents);\n        this.myIFrame.doc.close();\n      } catch (e) {\n        log('frame writing exception');\n        if (e.stack) {\n          log(e.stack);\n        }\n        log(e);\n      }\n    } else {\n      this.commandCB = commandCB;\n      this.onMessageCB = onMessageCB;\n    }\n  }\n\n  /**\n   * Each browser has its own funny way to handle iframes. Here we mush them all together into one object that I can\n   * actually use.\n   */\n  private static createIFrame_(): IFrameElement {\n    const iframe = document.createElement('iframe') as IFrameElement;\n    iframe.style.display = 'none';\n\n    // This is necessary in order to initialize the document inside the iframe\n    if (document.body) {\n      document.body.appendChild(iframe);\n      try {\n        // If document.domain has been modified in IE, this will throw an error, and we need to set the\n        // domain of the iframe's document manually. We can do this via a javascript: url as the src attribute\n        // Also note that we must do this *after* the iframe has been appended to the page. Otherwise it doesn't work.\n        const a = iframe.contentWindow.document;\n        if (!a) {\n          // Apologies for the log-spam, I need to do something to keep closure from optimizing out the assignment above.\n          log('No IE domain setting required');\n        }\n      } catch (e) {\n        const domain = document.domain;\n        iframe.src =\n          \"javascript:void((function(){document.open();document.domain='\" +\n          domain +\n          \"';document.close();})())\";\n      }\n    } else {\n      // LongPollConnection attempts to delay initialization until the document is ready, so hopefully this\n      // never gets hit.\n      throw 'Document body has not initialized. Wait to initialize Firebase until after the document is ready.';\n    }\n\n    // Get the document of the iframe in a browser-specific way.\n    if (iframe.contentDocument) {\n      iframe.doc = iframe.contentDocument; // Firefox, Opera, Safari\n    } else if (iframe.contentWindow) {\n      iframe.doc = iframe.contentWindow.document; // Internet Explorer\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    } else if ((iframe as any).document) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      iframe.doc = (iframe as any).document; //others?\n    }\n\n    return iframe;\n  }\n\n  /**\n   * Cancel all outstanding queries and remove the frame.\n   */\n  close() {\n    //Mark this iframe as dead, so no new requests are sent.\n    this.alive = false;\n\n    if (this.myIFrame) {\n      //We have to actually remove all of the html inside this iframe before removing it from the\n      //window, or IE will continue loading and executing the script tags we've already added, which\n      //can lead to some errors being thrown. Setting innerHTML seems to be the easiest way to do this.\n      this.myIFrame.doc.body.innerHTML = '';\n      setTimeout(() => {\n        if (this.myIFrame !== null) {\n          document.body.removeChild(this.myIFrame);\n          this.myIFrame = null;\n        }\n      }, Math.floor(0));\n    }\n\n    // Protect from being called recursively.\n    const onDisconnect = this.onDisconnect;\n    if (onDisconnect) {\n      this.onDisconnect = null;\n      onDisconnect();\n    }\n  }\n\n  /**\n   * Actually start the long-polling session by adding the first script tag(s) to the iframe.\n   * @param id - The ID of this connection\n   * @param pw - The password for this connection\n   */\n  startLongPoll(id: string, pw: string) {\n    this.myID = id;\n    this.myPW = pw;\n    this.alive = true;\n\n    //send the initial request. If there are requests queued, make sure that we transmit as many as we are currently able to.\n    while (this.newRequest_()) {}\n  }\n\n  /**\n   * This is called any time someone might want a script tag to be added. It adds a script tag when there aren't\n   * too many outstanding requests and we are still alive.\n   *\n   * If there are outstanding packet segments to send, it sends one. If there aren't, it sends a long-poll anyways if\n   * needed.\n   */\n  private newRequest_() {\n    // We keep one outstanding request open all the time to receive data, but if we need to send data\n    // (pendingSegs.length > 0) then we create a new request to send the data.  The server will automatically\n    // close the old request.\n    if (\n      this.alive &&\n      this.sendNewPolls &&\n      this.outstandingRequests.size < (this.pendingSegs.length > 0 ? 2 : 1)\n    ) {\n      //construct our url\n      this.currentSerial++;\n      const urlParams: { [k: string]: string | number } = {};\n      urlParams[FIREBASE_LONGPOLL_ID_PARAM] = this.myID;\n      urlParams[FIREBASE_LONGPOLL_PW_PARAM] = this.myPW;\n      urlParams[FIREBASE_LONGPOLL_SERIAL_PARAM] = this.currentSerial;\n      let theURL = this.urlFn(urlParams);\n      //Now add as much data as we can.\n      let curDataString = '';\n      let i = 0;\n\n      while (this.pendingSegs.length > 0) {\n        //first, lets see if the next segment will fit.\n        const nextSeg = this.pendingSegs[0];\n        if (\n          (nextSeg.d as unknown[]).length +\n            SEG_HEADER_SIZE +\n            curDataString.length <=\n          MAX_URL_DATA_SIZE\n        ) {\n          //great, the segment will fit. Lets append it.\n          const theSeg = this.pendingSegs.shift();\n          curDataString =\n            curDataString +\n            '&' +\n            FIREBASE_LONGPOLL_SEGMENT_NUM_PARAM +\n            i +\n            '=' +\n            theSeg.seg +\n            '&' +\n            FIREBASE_LONGPOLL_SEGMENTS_IN_PACKET +\n            i +\n            '=' +\n            theSeg.ts +\n            '&' +\n            FIREBASE_LONGPOLL_DATA_PARAM +\n            i +\n            '=' +\n            theSeg.d;\n          i++;\n        } else {\n          break;\n        }\n      }\n\n      theURL = theURL + curDataString;\n      this.addLongPollTag_(theURL, this.currentSerial);\n\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  /**\n   * Queue a packet for transmission to the server.\n   * @param segnum - A sequential id for this packet segment used for reassembly\n   * @param totalsegs - The total number of segments in this packet\n   * @param data - The data for this segment.\n   */\n  enqueueSegment(segnum: number, totalsegs: number, data: unknown) {\n    //add this to the queue of segments to send.\n    this.pendingSegs.push({ seg: segnum, ts: totalsegs, d: data });\n\n    //send the data immediately if there isn't already data being transmitted, unless\n    //startLongPoll hasn't been called yet.\n    if (this.alive) {\n      this.newRequest_();\n    }\n  }\n\n  /**\n   * Add a script tag for a regular long-poll request.\n   * @param url - The URL of the script tag.\n   * @param serial - The serial number of the request.\n   */\n  private addLongPollTag_(url: string, serial: number) {\n    //remember that we sent this request.\n    this.outstandingRequests.add(serial);\n\n    const doNewRequest = () => {\n      this.outstandingRequests.delete(serial);\n      this.newRequest_();\n    };\n\n    // If this request doesn't return on its own accord (by the server sending us some data), we'll\n    // create a new one after the KEEPALIVE interval to make sure we always keep a fresh request open.\n    const keepaliveTimeout = setTimeout(\n      doNewRequest,\n      Math.floor(KEEPALIVE_REQUEST_INTERVAL)\n    );\n\n    const readyStateCB = () => {\n      // Request completed.  Cancel the keepalive.\n      clearTimeout(keepaliveTimeout);\n\n      // Trigger a new request so we can continue receiving data.\n      doNewRequest();\n    };\n\n    this.addTag(url, readyStateCB);\n  }\n\n  /**\n   * Add an arbitrary script tag to the iframe.\n   * @param url - The URL for the script tag source.\n   * @param loadCB - A callback to be triggered once the script has loaded.\n   */\n  addTag(url: string, loadCB: () => void) {\n    if (isNodeSdk()) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      (this as any).doNodeLongPoll(url, loadCB);\n    } else {\n      setTimeout(() => {\n        try {\n          // if we're already closed, don't add this poll\n          if (!this.sendNewPolls) {\n            return;\n          }\n          const newScript = this.myIFrame.doc.createElement('script');\n          newScript.type = 'text/javascript';\n          newScript.async = true;\n          newScript.src = url;\n          // eslint-disable-next-line @typescript-eslint/no-explicit-any\n          newScript.onload = (newScript as any).onreadystatechange = function () {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            const rstate = (newScript as any).readyState;\n            if (!rstate || rstate === 'loaded' || rstate === 'complete') {\n              // eslint-disable-next-line @typescript-eslint/no-explicit-any\n              newScript.onload = (newScript as any).onreadystatechange = null;\n              if (newScript.parentNode) {\n                newScript.parentNode.removeChild(newScript);\n              }\n              loadCB();\n            }\n          };\n          newScript.onerror = () => {\n            log('Long-poll script failed to load: ' + url);\n            this.sendNewPolls = false;\n            this.close();\n          };\n          this.myIFrame.doc.body.appendChild(newScript);\n        } catch (e) {\n          // TODO: we should make this error visible somehow\n        }\n      }, Math.floor(1));\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, isNodeSdk, jsonEval, stringify } from '@firebase/util';\n\nimport { RepoInfo, repoInfoConnectionURL } from '../core/RepoInfo';\nimport { StatsCollection } from '../core/stats/StatsCollection';\nimport { statsManagerGetCollection } from '../core/stats/StatsManager';\nimport { PersistentStorage } from '../core/storage/storage';\nimport { logWrapper, splitStringBySize } from '../core/util/util';\nimport { SDK_VERSION } from '../core/version';\n\nimport {\n  APP_CHECK_TOKEN_PARAM,\n  FORGE_DOMAIN_RE,\n  FORGE_REF,\n  LAST_SESSION_PARAM,\n  PROTOCOL_VERSION,\n  REFERER_PARAM,\n  TRANSPORT_SESSION_PARAM,\n  VERSION_PARAM,\n  WEBSOCKET\n} from './Constants';\nimport { Transport } from './Transport';\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ndeclare const MozWebSocket: any;\n\nconst WEBSOCKET_MAX_FRAME_SIZE = 16384;\nconst WEBSOCKET_KEEPALIVE_INTERVAL = 45000;\n\nlet WebSocketImpl = null;\nif (typeof MozWebSocket !== 'undefined') {\n  WebSocketImpl = MozWebSocket;\n} else if (typeof WebSocket !== 'undefined') {\n  WebSocketImpl = WebSocket;\n}\n\nexport function setWebSocketImpl(impl) {\n  WebSocketImpl = impl;\n}\n\n/**\n * Create a new websocket connection with the given callbacks.\n */\nexport class WebSocketConnection implements Transport {\n  keepaliveTimer: number | null = null;\n  frames: string[] | null = null;\n  totalFrames = 0;\n  bytesSent = 0;\n  bytesReceived = 0;\n  connURL: string;\n  onDisconnect: (a?: boolean) => void;\n  onMessage: (msg: {}) => void;\n  mySock: WebSocket | null;\n  private log_: (...a: unknown[]) => void;\n  private stats_: StatsCollection;\n  private everConnected_: boolean;\n  private isClosed_: boolean;\n  private nodeAdmin: boolean;\n\n  /**\n   * @param connId identifier for this transport\n   * @param repoInfo The info for the websocket endpoint.\n   * @param applicationId The Firebase App ID for this project.\n   * @param appCheckToken The App Check Token for this client.\n   * @param authToken The Auth Token for this client.\n   * @param transportSessionId Optional transportSessionId if this is connecting\n   * to an existing transport session\n   * @param lastSessionId Optional lastSessionId if there was a previous\n   * connection\n   */\n  constructor(\n    public connId: string,\n    repoInfo: RepoInfo,\n    private applicationId?: string,\n    private appCheckToken?: string,\n    private authToken?: string,\n    transportSessionId?: string,\n    lastSessionId?: string\n  ) {\n    this.log_ = logWrapper(this.connId);\n    this.stats_ = statsManagerGetCollection(repoInfo);\n    this.connURL = WebSocketConnection.connectionURL_(\n      repoInfo,\n      transportSessionId,\n      lastSessionId,\n      appCheckToken\n    );\n    this.nodeAdmin = repoInfo.nodeAdmin;\n  }\n\n  /**\n   * @param repoInfo - The info for the websocket endpoint.\n   * @param transportSessionId - Optional transportSessionId if this is connecting to an existing transport\n   *                                         session\n   * @param lastSessionId - Optional lastSessionId if there was a previous connection\n   * @returns connection url\n   */\n  private static connectionURL_(\n    repoInfo: RepoInfo,\n    transportSessionId?: string,\n    lastSessionId?: string,\n    appCheckToken?: string\n  ): string {\n    const urlParams: { [k: string]: string } = {};\n    urlParams[VERSION_PARAM] = PROTOCOL_VERSION;\n\n    if (\n      !isNodeSdk() &&\n      typeof location !== 'undefined' &&\n      location.hostname &&\n      FORGE_DOMAIN_RE.test(location.hostname)\n    ) {\n      urlParams[REFERER_PARAM] = FORGE_REF;\n    }\n    if (transportSessionId) {\n      urlParams[TRANSPORT_SESSION_PARAM] = transportSessionId;\n    }\n    if (lastSessionId) {\n      urlParams[LAST_SESSION_PARAM] = lastSessionId;\n    }\n    if (appCheckToken) {\n      urlParams[APP_CHECK_TOKEN_PARAM] = appCheckToken;\n    }\n\n    return repoInfoConnectionURL(repoInfo, WEBSOCKET, urlParams);\n  }\n\n  /**\n   * @param onMessage - Callback when messages arrive\n   * @param onDisconnect - Callback with connection lost.\n   */\n  open(onMessage: (msg: {}) => void, onDisconnect: (a?: boolean) => void) {\n    this.onDisconnect = onDisconnect;\n    this.onMessage = onMessage;\n\n    this.log_('Websocket connecting to ' + this.connURL);\n\n    this.everConnected_ = false;\n    // Assume failure until proven otherwise.\n    PersistentStorage.set('previous_websocket_failure', true);\n\n    try {\n      if (isNodeSdk()) {\n        const device = this.nodeAdmin ? 'AdminNode' : 'Node';\n        // UA Format: Firebase/<wire_protocol>/<sdk_version>/<platform>/<device>\n        const options: { [k: string]: object } = {\n          headers: {\n            'User-Agent': `Firebase/${PROTOCOL_VERSION}/${SDK_VERSION}/${process.platform}/${device}`,\n            'X-Firebase-GMPID': this.applicationId || ''\n          }\n        };\n\n        // If using Node with admin creds, AppCheck-related checks are unnecessary.\n        // Note that we send the credentials here even if they aren't admin credentials, which is\n        // not a problem.\n        // Note that this header is just used to bypass appcheck, and the token should still be sent\n        // through the websocket connection once it is established.\n        if (this.authToken) {\n          options.headers['Authorization'] = `Bearer ${this.authToken}`;\n        }\n        if (this.appCheckToken) {\n          options.headers['X-Firebase-AppCheck'] = this.appCheckToken;\n        }\n\n        // Plumb appropriate http_proxy environment variable into faye-websocket if it exists.\n        const env = process['env'];\n        const proxy =\n          this.connURL.indexOf('wss://') === 0\n            ? env['HTTPS_PROXY'] || env['https_proxy']\n            : env['HTTP_PROXY'] || env['http_proxy'];\n\n        if (proxy) {\n          options['proxy'] = { origin: proxy };\n        }\n\n        this.mySock = new WebSocketImpl(this.connURL, [], options);\n      } else {\n        const options: { [k: string]: object } = {\n          headers: {\n            'X-Firebase-GMPID': this.applicationId || '',\n            'X-Firebase-AppCheck': this.appCheckToken || ''\n          }\n        };\n        this.mySock = new WebSocketImpl(this.connURL, [], options);\n      }\n    } catch (e) {\n      this.log_('Error instantiating WebSocket.');\n      const error = e.message || e.data;\n      if (error) {\n        this.log_(error);\n      }\n      this.onClosed_();\n      return;\n    }\n\n    this.mySock.onopen = () => {\n      this.log_('Websocket connected.');\n      this.everConnected_ = true;\n    };\n\n    this.mySock.onclose = () => {\n      this.log_('Websocket connection was disconnected.');\n      this.mySock = null;\n      this.onClosed_();\n    };\n\n    this.mySock.onmessage = m => {\n      this.handleIncomingFrame(m as {});\n    };\n\n    this.mySock.onerror = e => {\n      this.log_('WebSocket error.  Closing connection.');\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      const error = (e as any).message || (e as any).data;\n      if (error) {\n        this.log_(error);\n      }\n      this.onClosed_();\n    };\n  }\n\n  /**\n   * No-op for websockets, we don't need to do anything once the connection is confirmed as open\n   */\n  start() {}\n\n  static forceDisallow_: boolean;\n\n  static forceDisallow() {\n    WebSocketConnection.forceDisallow_ = true;\n  }\n\n  static isAvailable(): boolean {\n    let isOldAndroid = false;\n    if (typeof navigator !== 'undefined' && navigator.userAgent) {\n      const oldAndroidRegex = /Android ([0-9]{0,}\\.[0-9]{0,})/;\n      const oldAndroidMatch = navigator.userAgent.match(oldAndroidRegex);\n      if (oldAndroidMatch && oldAndroidMatch.length > 1) {\n        if (parseFloat(oldAndroidMatch[1]) < 4.4) {\n          isOldAndroid = true;\n        }\n      }\n    }\n\n    return (\n      !isOldAndroid &&\n      WebSocketImpl !== null &&\n      !WebSocketConnection.forceDisallow_\n    );\n  }\n\n  /**\n   * Number of response before we consider the connection \"healthy.\"\n   */\n  static responsesRequiredToBeHealthy = 2;\n\n  /**\n   * Time to wait for the connection te become healthy before giving up.\n   */\n  static healthyTimeout = 30000;\n\n  /**\n   * Returns true if we previously failed to connect with this transport.\n   */\n  static previouslyFailed(): boolean {\n    // If our persistent storage is actually only in-memory storage,\n    // we default to assuming that it previously failed to be safe.\n    return (\n      PersistentStorage.isInMemoryStorage ||\n      PersistentStorage.get('previous_websocket_failure') === true\n    );\n  }\n\n  markConnectionHealthy() {\n    PersistentStorage.remove('previous_websocket_failure');\n  }\n\n  private appendFrame_(data: string) {\n    this.frames.push(data);\n    if (this.frames.length === this.totalFrames) {\n      const fullMess = this.frames.join('');\n      this.frames = null;\n      const jsonMess = jsonEval(fullMess) as object;\n\n      //handle the message\n      this.onMessage(jsonMess);\n    }\n  }\n\n  /**\n   * @param frameCount - The number of frames we are expecting from the server\n   */\n  private handleNewFrameCount_(frameCount: number) {\n    this.totalFrames = frameCount;\n    this.frames = [];\n  }\n\n  /**\n   * Attempts to parse a frame count out of some text. If it can't, assumes a value of 1\n   * @returns Any remaining data to be process, or null if there is none\n   */\n  private extractFrameCount_(data: string): string | null {\n    assert(this.frames === null, 'We already have a frame buffer');\n    // TODO: The server is only supposed to send up to 9999 frames (i.e. length <= 4), but that isn't being enforced\n    // currently.  So allowing larger frame counts (length <= 6).  See https://app.asana.com/0/search/8688598998380/8237608042508\n    if (data.length <= 6) {\n      const frameCount = Number(data);\n      if (!isNaN(frameCount)) {\n        this.handleNewFrameCount_(frameCount);\n        return null;\n      }\n    }\n    this.handleNewFrameCount_(1);\n    return data;\n  }\n\n  /**\n   * Process a websocket frame that has arrived from the server.\n   * @param mess - The frame data\n   */\n  handleIncomingFrame(mess: { [k: string]: unknown }) {\n    if (this.mySock === null) {\n      return; // Chrome apparently delivers incoming packets even after we .close() the connection sometimes.\n    }\n    const data = mess['data'] as string;\n    this.bytesReceived += data.length;\n    this.stats_.incrementCounter('bytes_received', data.length);\n\n    this.resetKeepAlive();\n\n    if (this.frames !== null) {\n      // we're buffering\n      this.appendFrame_(data);\n    } else {\n      // try to parse out a frame count, otherwise, assume 1 and process it\n      const remainingData = this.extractFrameCount_(data);\n      if (remainingData !== null) {\n        this.appendFrame_(remainingData);\n      }\n    }\n  }\n\n  /**\n   * Send a message to the server\n   * @param data - The JSON object to transmit\n   */\n  send(data: {}) {\n    this.resetKeepAlive();\n\n    const dataStr = stringify(data);\n    this.bytesSent += dataStr.length;\n    this.stats_.incrementCounter('bytes_sent', dataStr.length);\n\n    //We can only fit a certain amount in each websocket frame, so we need to split this request\n    //up into multiple pieces if it doesn't fit in one request.\n\n    const dataSegs = splitStringBySize(dataStr, WEBSOCKET_MAX_FRAME_SIZE);\n\n    //Send the length header\n    if (dataSegs.length > 1) {\n      this.sendString_(String(dataSegs.length));\n    }\n\n    //Send the actual data in segments.\n    for (let i = 0; i < dataSegs.length; i++) {\n      this.sendString_(dataSegs[i]);\n    }\n  }\n\n  private shutdown_() {\n    this.isClosed_ = true;\n    if (this.keepaliveTimer) {\n      clearInterval(this.keepaliveTimer);\n      this.keepaliveTimer = null;\n    }\n\n    if (this.mySock) {\n      this.mySock.close();\n      this.mySock = null;\n    }\n  }\n\n  private onClosed_() {\n    if (!this.isClosed_) {\n      this.log_('WebSocket is closing itself');\n      this.shutdown_();\n\n      // since this is an internal close, trigger the close listener\n      if (this.onDisconnect) {\n        this.onDisconnect(this.everConnected_);\n        this.onDisconnect = null;\n      }\n    }\n  }\n\n  /**\n   * External-facing close handler.\n   * Close the websocket and kill the connection.\n   */\n  close() {\n    if (!this.isClosed_) {\n      this.log_('WebSocket is being closed');\n      this.shutdown_();\n    }\n  }\n\n  /**\n   * Kill the current keepalive timer and start a new one, to ensure that it always fires N seconds after\n   * the last activity.\n   */\n  resetKeepAlive() {\n    clearInterval(this.keepaliveTimer);\n    this.keepaliveTimer = setInterval(() => {\n      //If there has been no websocket activity for a while, send a no-op\n      if (this.mySock) {\n        this.sendString_('0');\n      }\n      this.resetKeepAlive();\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    }, Math.floor(WEBSOCKET_KEEPALIVE_INTERVAL)) as any;\n  }\n\n  /**\n   * Send a string over the websocket.\n   *\n   * @param str - String to send.\n   */\n  private sendString_(str: string) {\n    // Firefox seems to sometimes throw exceptions (NS_ERROR_UNEXPECTED) from websocket .send()\n    // calls for some unknown reason.  We treat these as an error and disconnect.\n    // See https://app.asana.com/0/58926111402292/68021340250410\n    try {\n      this.mySock.send(str);\n    } catch (e) {\n      this.log_(\n        'Exception thrown from WebSocket.send():',\n        e.message || e.data,\n        'Closing connection.'\n      );\n      setTimeout(this.onClosed_.bind(this), 0);\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { RepoInfo } from '../core/RepoInfo';\nimport { warn } from '../core/util/util';\n\nimport { BrowserPollConnection } from './BrowserPollConnection';\nimport { TransportConstructor } from './Transport';\nimport { WebSocketConnection } from './WebSocketConnection';\n\n/**\n * Currently simplistic, this class manages what transport a Connection should use at various stages of its\n * lifecycle.\n *\n * It starts with longpolling in a browser, and httppolling on node. It then upgrades to websockets if\n * they are available.\n */\nexport class TransportManager {\n  private transports_: TransportConstructor[];\n\n  static get ALL_TRANSPORTS() {\n    return [BrowserPollConnection, WebSocketConnection];\n  }\n\n  /**\n   * @param repoInfo - Metadata around the namespace we're connecting to\n   */\n  constructor(repoInfo: RepoInfo) {\n    this.initTransports_(repoInfo);\n  }\n\n  private initTransports_(repoInfo: RepoInfo) {\n    const isWebSocketsAvailable: boolean =\n      WebSocketConnection && WebSocketConnection['isAvailable']();\n    let isSkipPollConnection =\n      isWebSocketsAvailable && !WebSocketConnection.previouslyFailed();\n\n    if (repoInfo.webSocketOnly) {\n      if (!isWebSocketsAvailable) {\n        warn(\n          \"wss:// URL used, but browser isn't known to support websockets.  Trying anyway.\"\n        );\n      }\n\n      isSkipPollConnection = true;\n    }\n\n    if (isSkipPollConnection) {\n      this.transports_ = [WebSocketConnection];\n    } else {\n      const transports = (this.transports_ = [] as TransportConstructor[]);\n      for (const transport of TransportManager.ALL_TRANSPORTS) {\n        if (transport && transport['isAvailable']()) {\n          transports.push(transport);\n        }\n      }\n    }\n  }\n\n  /**\n   * @returns The constructor for the initial transport to use\n   */\n  initialTransport(): TransportConstructor {\n    if (this.transports_.length > 0) {\n      return this.transports_[0];\n    } else {\n      throw new Error('No transports available');\n    }\n  }\n\n  /**\n   * @returns The constructor for the next transport, or null\n   */\n  upgradeTransport(): TransportConstructor | null {\n    if (this.transports_.length > 1) {\n      return this.transports_[1];\n    } else {\n      return null;\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { RepoInfo } from '../core/RepoInfo';\nimport { PersistentStorage } from '../core/storage/storage';\nimport { Indexable } from '../core/util/misc';\nimport {\n  error,\n  logWrapper,\n  requireKey,\n  setTimeoutNonBlocking,\n  warn\n} from '../core/util/util';\n\nimport { PROTOCOL_VERSION } from './Constants';\nimport { Transport, TransportConstructor } from './Transport';\nimport { TransportManager } from './TransportManager';\n\n// Abort upgrade attempt if it takes longer than 60s.\nconst UPGRADE_TIMEOUT = 60000;\n\n// For some transports (WebSockets), we need to \"validate\" the transport by exchanging a few requests and responses.\n// If we haven't sent enough requests within 5s, we'll start sending noop ping requests.\nconst DELAY_BEFORE_SENDING_EXTRA_REQUESTS = 5000;\n\n// If the initial data sent triggers a lot of bandwidth (i.e. it's a large put or a listen for a large amount of data)\n// then we may not be able to exchange our ping/pong requests within the healthy timeout.  So if we reach the timeout\n// but we've sent/received enough bytes, we don't cancel the connection.\nconst BYTES_SENT_HEALTHY_OVERRIDE = 10 * 1024;\nconst BYTES_RECEIVED_HEALTHY_OVERRIDE = 100 * 1024;\n\nconst enum RealtimeState {\n  CONNECTING,\n  CONNECTED,\n  DISCONNECTED\n}\n\nconst MESSAGE_TYPE = 't';\nconst MESSAGE_DATA = 'd';\nconst CONTROL_SHUTDOWN = 's';\nconst CONTROL_RESET = 'r';\nconst CONTROL_ERROR = 'e';\nconst CONTROL_PONG = 'o';\nconst SWITCH_ACK = 'a';\nconst END_TRANSMISSION = 'n';\nconst PING = 'p';\n\nconst SERVER_HELLO = 'h';\n\n/**\n * Creates a new real-time connection to the server using whichever method works\n * best in the current browser.\n */\nexport class Connection {\n  connectionCount = 0;\n  pendingDataMessages: unknown[] = [];\n  sessionId: string;\n\n  private conn_: Transport;\n  private healthyTimeout_: number;\n  private isHealthy_: boolean;\n  private log_: (...args: unknown[]) => void;\n  private primaryResponsesRequired_: number;\n  private rx_: Transport;\n  private secondaryConn_: Transport;\n  private secondaryResponsesRequired_: number;\n  private state_ = RealtimeState.CONNECTING;\n  private transportManager_: TransportManager;\n  private tx_: Transport;\n\n  /**\n   * @param id - an id for this connection\n   * @param repoInfo_ - the info for the endpoint to connect to\n   * @param applicationId_ - the Firebase App ID for this project\n   * @param appCheckToken_ - The App Check Token for this device.\n   * @param authToken_ - The auth token for this session.\n   * @param onMessage_ - the callback to be triggered when a server-push message arrives\n   * @param onReady_ - the callback to be triggered when this connection is ready to send messages.\n   * @param onDisconnect_ - the callback to be triggered when a connection was lost\n   * @param onKill_ - the callback to be triggered when this connection has permanently shut down.\n   * @param lastSessionId - last session id in persistent connection. is used to clean up old session in real-time server\n   */\n  constructor(\n    public id: string,\n    private repoInfo_: RepoInfo,\n    private applicationId_: string | undefined,\n    private appCheckToken_: string | undefined,\n    private authToken_: string | undefined,\n    private onMessage_: (a: {}) => void,\n    private onReady_: (a: number, b: string) => void,\n    private onDisconnect_: () => void,\n    private onKill_: (a: string) => void,\n    public lastSessionId?: string\n  ) {\n    this.log_ = logWrapper('c:' + this.id + ':');\n    this.transportManager_ = new TransportManager(repoInfo_);\n    this.log_('Connection created');\n    this.start_();\n  }\n\n  /**\n   * Starts a connection attempt\n   */\n  private start_(): void {\n    const conn = this.transportManager_.initialTransport();\n    this.conn_ = new conn(\n      this.nextTransportId_(),\n      this.repoInfo_,\n      this.applicationId_,\n      this.appCheckToken_,\n      this.authToken_,\n      null,\n      this.lastSessionId\n    );\n\n    // For certain transports (WebSockets), we need to send and receive several messages back and forth before we\n    // can consider the transport healthy.\n    this.primaryResponsesRequired_ = conn['responsesRequiredToBeHealthy'] || 0;\n\n    const onMessageReceived = this.connReceiver_(this.conn_);\n    const onConnectionLost = this.disconnReceiver_(this.conn_);\n    this.tx_ = this.conn_;\n    this.rx_ = this.conn_;\n    this.secondaryConn_ = null;\n    this.isHealthy_ = false;\n\n    /*\n     * Firefox doesn't like when code from one iframe tries to create another iframe by way of the parent frame.\n     * This can occur in the case of a redirect, i.e. we guessed wrong on what server to connect to and received a reset.\n     * Somehow, setTimeout seems to make this ok. That doesn't make sense from a security perspective, since you should\n     * still have the context of your originating frame.\n     */\n    setTimeout(() => {\n      // this.conn_ gets set to null in some of the tests. Check to make sure it still exists before using it\n      this.conn_ && this.conn_.open(onMessageReceived, onConnectionLost);\n    }, Math.floor(0));\n\n    const healthyTimeoutMS = conn['healthyTimeout'] || 0;\n    if (healthyTimeoutMS > 0) {\n      this.healthyTimeout_ = setTimeoutNonBlocking(() => {\n        this.healthyTimeout_ = null;\n        if (!this.isHealthy_) {\n          if (\n            this.conn_ &&\n            this.conn_.bytesReceived > BYTES_RECEIVED_HEALTHY_OVERRIDE\n          ) {\n            this.log_(\n              'Connection exceeded healthy timeout but has received ' +\n                this.conn_.bytesReceived +\n                ' bytes.  Marking connection healthy.'\n            );\n            this.isHealthy_ = true;\n            this.conn_.markConnectionHealthy();\n          } else if (\n            this.conn_ &&\n            this.conn_.bytesSent > BYTES_SENT_HEALTHY_OVERRIDE\n          ) {\n            this.log_(\n              'Connection exceeded healthy timeout but has sent ' +\n                this.conn_.bytesSent +\n                ' bytes.  Leaving connection alive.'\n            );\n            // NOTE: We don't want to mark it healthy, since we have no guarantee that the bytes have made it to\n            // the server.\n          } else {\n            this.log_('Closing unhealthy connection after timeout.');\n            this.close();\n          }\n        }\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      }, Math.floor(healthyTimeoutMS)) as any;\n    }\n  }\n\n  private nextTransportId_(): string {\n    return 'c:' + this.id + ':' + this.connectionCount++;\n  }\n\n  private disconnReceiver_(conn) {\n    return everConnected => {\n      if (conn === this.conn_) {\n        this.onConnectionLost_(everConnected);\n      } else if (conn === this.secondaryConn_) {\n        this.log_('Secondary connection lost.');\n        this.onSecondaryConnectionLost_();\n      } else {\n        this.log_('closing an old connection');\n      }\n    };\n  }\n\n  private connReceiver_(conn: Transport) {\n    return (message: Indexable) => {\n      if (this.state_ !== RealtimeState.DISCONNECTED) {\n        if (conn === this.rx_) {\n          this.onPrimaryMessageReceived_(message);\n        } else if (conn === this.secondaryConn_) {\n          this.onSecondaryMessageReceived_(message);\n        } else {\n          this.log_('message on old connection');\n        }\n      }\n    };\n  }\n\n  /**\n   * @param dataMsg - An arbitrary data message to be sent to the server\n   */\n  sendRequest(dataMsg: object) {\n    // wrap in a data message envelope and send it on\n    const msg = { t: 'd', d: dataMsg };\n    this.sendData_(msg);\n  }\n\n  tryCleanupConnection() {\n    if (this.tx_ === this.secondaryConn_ && this.rx_ === this.secondaryConn_) {\n      this.log_(\n        'cleaning up and promoting a connection: ' + this.secondaryConn_.connId\n      );\n      this.conn_ = this.secondaryConn_;\n      this.secondaryConn_ = null;\n      // the server will shutdown the old connection\n    }\n  }\n\n  private onSecondaryControl_(controlData: { [k: string]: unknown }) {\n    if (MESSAGE_TYPE in controlData) {\n      const cmd = controlData[MESSAGE_TYPE] as string;\n      if (cmd === SWITCH_ACK) {\n        this.upgradeIfSecondaryHealthy_();\n      } else if (cmd === CONTROL_RESET) {\n        // Most likely the session wasn't valid. Abandon the switch attempt\n        this.log_('Got a reset on secondary, closing it');\n        this.secondaryConn_.close();\n        // If we were already using this connection for something, than we need to fully close\n        if (\n          this.tx_ === this.secondaryConn_ ||\n          this.rx_ === this.secondaryConn_\n        ) {\n          this.close();\n        }\n      } else if (cmd === CONTROL_PONG) {\n        this.log_('got pong on secondary.');\n        this.secondaryResponsesRequired_--;\n        this.upgradeIfSecondaryHealthy_();\n      }\n    }\n  }\n\n  private onSecondaryMessageReceived_(parsedData: Indexable) {\n    const layer: string = requireKey('t', parsedData) as string;\n    const data: unknown = requireKey('d', parsedData);\n    if (layer === 'c') {\n      this.onSecondaryControl_(data as Indexable);\n    } else if (layer === 'd') {\n      // got a data message, but we're still second connection. Need to buffer it up\n      this.pendingDataMessages.push(data);\n    } else {\n      throw new Error('Unknown protocol layer: ' + layer);\n    }\n  }\n\n  private upgradeIfSecondaryHealthy_() {\n    if (this.secondaryResponsesRequired_ <= 0) {\n      this.log_('Secondary connection is healthy.');\n      this.isHealthy_ = true;\n      this.secondaryConn_.markConnectionHealthy();\n      this.proceedWithUpgrade_();\n    } else {\n      // Send a ping to make sure the connection is healthy.\n      this.log_('sending ping on secondary.');\n      this.secondaryConn_.send({ t: 'c', d: { t: PING, d: {} } });\n    }\n  }\n\n  private proceedWithUpgrade_() {\n    // tell this connection to consider itself open\n    this.secondaryConn_.start();\n    // send ack\n    this.log_('sending client ack on secondary');\n    this.secondaryConn_.send({ t: 'c', d: { t: SWITCH_ACK, d: {} } });\n\n    // send end packet on primary transport, switch to sending on this one\n    // can receive on this one, buffer responses until end received on primary transport\n    this.log_('Ending transmission on primary');\n    this.conn_.send({ t: 'c', d: { t: END_TRANSMISSION, d: {} } });\n    this.tx_ = this.secondaryConn_;\n\n    this.tryCleanupConnection();\n  }\n\n  private onPrimaryMessageReceived_(parsedData: { [k: string]: unknown }) {\n    // Must refer to parsedData properties in quotes, so closure doesn't touch them.\n    const layer: string = requireKey('t', parsedData) as string;\n    const data: unknown = requireKey('d', parsedData);\n    if (layer === 'c') {\n      this.onControl_(data as { [k: string]: unknown });\n    } else if (layer === 'd') {\n      this.onDataMessage_(data);\n    }\n  }\n\n  private onDataMessage_(message: unknown) {\n    this.onPrimaryResponse_();\n\n    // We don't do anything with data messages, just kick them up a level\n    this.onMessage_(message);\n  }\n\n  private onPrimaryResponse_() {\n    if (!this.isHealthy_) {\n      this.primaryResponsesRequired_--;\n      if (this.primaryResponsesRequired_ <= 0) {\n        this.log_('Primary connection is healthy.');\n        this.isHealthy_ = true;\n        this.conn_.markConnectionHealthy();\n      }\n    }\n  }\n\n  private onControl_(controlData: { [k: string]: unknown }) {\n    const cmd: string = requireKey(MESSAGE_TYPE, controlData) as string;\n    if (MESSAGE_DATA in controlData) {\n      const payload = controlData[MESSAGE_DATA];\n      if (cmd === SERVER_HELLO) {\n        this.onHandshake_(\n          payload as {\n            ts: number;\n            v: string;\n            h: string;\n            s: string;\n          }\n        );\n      } else if (cmd === END_TRANSMISSION) {\n        this.log_('recvd end transmission on primary');\n        this.rx_ = this.secondaryConn_;\n        for (let i = 0; i < this.pendingDataMessages.length; ++i) {\n          this.onDataMessage_(this.pendingDataMessages[i]);\n        }\n        this.pendingDataMessages = [];\n        this.tryCleanupConnection();\n      } else if (cmd === CONTROL_SHUTDOWN) {\n        // This was previously the 'onKill' callback passed to the lower-level connection\n        // payload in this case is the reason for the shutdown. Generally a human-readable error\n        this.onConnectionShutdown_(payload as string);\n      } else if (cmd === CONTROL_RESET) {\n        // payload in this case is the host we should contact\n        this.onReset_(payload as string);\n      } else if (cmd === CONTROL_ERROR) {\n        error('Server Error: ' + payload);\n      } else if (cmd === CONTROL_PONG) {\n        this.log_('got pong on primary.');\n        this.onPrimaryResponse_();\n        this.sendPingOnPrimaryIfNecessary_();\n      } else {\n        error('Unknown control packet command: ' + cmd);\n      }\n    }\n  }\n\n  /**\n   * @param handshake - The handshake data returned from the server\n   */\n  private onHandshake_(handshake: {\n    ts: number;\n    v: string;\n    h: string;\n    s: string;\n  }): void {\n    const timestamp = handshake.ts;\n    const version = handshake.v;\n    const host = handshake.h;\n    this.sessionId = handshake.s;\n    this.repoInfo_.host = host;\n    // if we've already closed the connection, then don't bother trying to progress further\n    if (this.state_ === RealtimeState.CONNECTING) {\n      this.conn_.start();\n      this.onConnectionEstablished_(this.conn_, timestamp);\n      if (PROTOCOL_VERSION !== version) {\n        warn('Protocol version mismatch detected');\n      }\n      // TODO: do we want to upgrade? when? maybe a delay?\n      this.tryStartUpgrade_();\n    }\n  }\n\n  private tryStartUpgrade_() {\n    const conn = this.transportManager_.upgradeTransport();\n    if (conn) {\n      this.startUpgrade_(conn);\n    }\n  }\n\n  private startUpgrade_(conn: TransportConstructor) {\n    this.secondaryConn_ = new conn(\n      this.nextTransportId_(),\n      this.repoInfo_,\n      this.applicationId_,\n      this.appCheckToken_,\n      this.authToken_,\n      this.sessionId\n    );\n    // For certain transports (WebSockets), we need to send and receive several messages back and forth before we\n    // can consider the transport healthy.\n    this.secondaryResponsesRequired_ =\n      conn['responsesRequiredToBeHealthy'] || 0;\n\n    const onMessage = this.connReceiver_(this.secondaryConn_);\n    const onDisconnect = this.disconnReceiver_(this.secondaryConn_);\n    this.secondaryConn_.open(onMessage, onDisconnect);\n\n    // If we haven't successfully upgraded after UPGRADE_TIMEOUT, give up and kill the secondary.\n    setTimeoutNonBlocking(() => {\n      if (this.secondaryConn_) {\n        this.log_('Timed out trying to upgrade.');\n        this.secondaryConn_.close();\n      }\n    }, Math.floor(UPGRADE_TIMEOUT));\n  }\n\n  private onReset_(host: string) {\n    this.log_('Reset packet received.  New host: ' + host);\n    this.repoInfo_.host = host;\n    // TODO: if we're already \"connected\", we need to trigger a disconnect at the next layer up.\n    // We don't currently support resets after the connection has already been established\n    if (this.state_ === RealtimeState.CONNECTED) {\n      this.close();\n    } else {\n      // Close whatever connections we have open and start again.\n      this.closeConnections_();\n      this.start_();\n    }\n  }\n\n  private onConnectionEstablished_(conn: Transport, timestamp: number) {\n    this.log_('Realtime connection established.');\n    this.conn_ = conn;\n    this.state_ = RealtimeState.CONNECTED;\n\n    if (this.onReady_) {\n      this.onReady_(timestamp, this.sessionId);\n      this.onReady_ = null;\n    }\n\n    // If after 5 seconds we haven't sent enough requests to the server to get the connection healthy,\n    // send some pings.\n    if (this.primaryResponsesRequired_ === 0) {\n      this.log_('Primary connection is healthy.');\n      this.isHealthy_ = true;\n    } else {\n      setTimeoutNonBlocking(() => {\n        this.sendPingOnPrimaryIfNecessary_();\n      }, Math.floor(DELAY_BEFORE_SENDING_EXTRA_REQUESTS));\n    }\n  }\n\n  private sendPingOnPrimaryIfNecessary_() {\n    // If the connection isn't considered healthy yet, we'll send a noop ping packet request.\n    if (!this.isHealthy_ && this.state_ === RealtimeState.CONNECTED) {\n      this.log_('sending ping on primary.');\n      this.sendData_({ t: 'c', d: { t: PING, d: {} } });\n    }\n  }\n\n  private onSecondaryConnectionLost_() {\n    const conn = this.secondaryConn_;\n    this.secondaryConn_ = null;\n    if (this.tx_ === conn || this.rx_ === conn) {\n      // we are relying on this connection already in some capacity. Therefore, a failure is real\n      this.close();\n    }\n  }\n\n  /**\n   * @param everConnected - Whether or not the connection ever reached a server. Used to determine if\n   * we should flush the host cache\n   */\n  private onConnectionLost_(everConnected: boolean) {\n    this.conn_ = null;\n\n    // NOTE: IF you're seeing a Firefox error for this line, I think it might be because it's getting\n    // called on window close and RealtimeState.CONNECTING is no longer defined.  Just a guess.\n    if (!everConnected && this.state_ === RealtimeState.CONNECTING) {\n      this.log_('Realtime connection failed.');\n      // Since we failed to connect at all, clear any cached entry for this namespace in case the machine went away\n      if (this.repoInfo_.isCacheableHost()) {\n        PersistentStorage.remove('host:' + this.repoInfo_.host);\n        // reset the internal host to what we would show the user, i.e. <ns>.firebaseio.com\n        this.repoInfo_.internalHost = this.repoInfo_.host;\n      }\n    } else if (this.state_ === RealtimeState.CONNECTED) {\n      this.log_('Realtime connection lost.');\n    }\n\n    this.close();\n  }\n\n  private onConnectionShutdown_(reason: string) {\n    this.log_('Connection shutdown command received. Shutting down...');\n\n    if (this.onKill_) {\n      this.onKill_(reason);\n      this.onKill_ = null;\n    }\n\n    // We intentionally don't want to fire onDisconnect (kill is a different case),\n    // so clear the callback.\n    this.onDisconnect_ = null;\n\n    this.close();\n  }\n\n  private sendData_(data: object) {\n    if (this.state_ !== RealtimeState.CONNECTED) {\n      throw 'Connection is not connected';\n    } else {\n      this.tx_.send(data);\n    }\n  }\n\n  /**\n   * Cleans up this connection, calling the appropriate callbacks\n   */\n  close() {\n    if (this.state_ !== RealtimeState.DISCONNECTED) {\n      this.log_('Closing realtime connection.');\n      this.state_ = RealtimeState.DISCONNECTED;\n\n      this.closeConnections_();\n\n      if (this.onDisconnect_) {\n        this.onDisconnect_();\n        this.onDisconnect_ = null;\n      }\n    }\n  }\n\n  private closeConnections_() {\n    this.log_('Shutting down all connections');\n    if (this.conn_) {\n      this.conn_.close();\n      this.conn_ = null;\n    }\n\n    if (this.secondaryConn_) {\n      this.secondaryConn_.close();\n      this.secondaryConn_ = null;\n    }\n\n    if (this.healthyTimeout_) {\n      clearTimeout(this.healthyTimeout_);\n      this.healthyTimeout_ = null;\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { QueryContext } from './view/EventRegistration';\n\n/**\n * Interface defining the set of actions that can be performed against the Firebase server\n * (basically corresponds to our wire protocol).\n *\n * @interface\n */\nexport abstract class ServerActions {\n  abstract listen(\n    query: QueryContext,\n    currentHashFn: () => string,\n    tag: number | null,\n    onComplete: (a: string, b: unknown) => void\n  ): void;\n\n  /**\n   * Remove a listen.\n   */\n  abstract unlisten(query: QueryContext, tag: number | null): void;\n\n  /**\n   * Get the server value satisfying this query.\n   */\n  abstract get(query: QueryContext): Promise<string>;\n\n  put(\n    pathString: string,\n    data: unknown,\n    onComplete?: (a: string, b: string) => void,\n    hash?: string\n  ) {}\n\n  merge(\n    pathString: string,\n    data: unknown,\n    onComplete: (a: string, b: string | null) => void,\n    hash?: string\n  ) {}\n\n  /**\n   * Refreshes the auth token for the current connection.\n   * @param token - The authentication token\n   */\n  refreshAuthToken(token: string) {}\n\n  /**\n   * Refreshes the app check token for the current connection.\n   * @param token The app check token\n   */\n  refreshAppCheckToken(token: string) {}\n\n  onDisconnectPut(\n    pathString: string,\n    data: unknown,\n    onComplete?: (a: string, b: string) => void\n  ) {}\n\n  onDisconnectMerge(\n    pathString: string,\n    data: unknown,\n    onComplete?: (a: string, b: string) => void\n  ) {}\n\n  onDisconnectCancel(\n    pathString: string,\n    onComplete?: (a: string, b: string) => void\n  ) {}\n\n  reportStats(stats: { [k: string]: unknown }) {}\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\n/**\n * Base class to be used if you want to emit events. Call the constructor with\n * the set of allowed event names.\n */\nexport abstract class EventEmitter {\n  private listeners_: {\n    [eventType: string]: Array<{\n      callback(...args: unknown[]): void;\n      context: unknown;\n    }>;\n  } = {};\n\n  constructor(private allowedEvents_: string[]) {\n    assert(\n      Array.isArray(allowedEvents_) && allowedEvents_.length > 0,\n      'Requires a non-empty array'\n    );\n  }\n\n  /**\n   * To be overridden by derived classes in order to fire an initial event when\n   * somebody subscribes for data.\n   *\n   * @returns {Array.<*>} Array of parameters to trigger initial event with.\n   */\n  abstract getInitialEvent(eventType: string): unknown[];\n\n  /**\n   * To be called by derived classes to trigger events.\n   */\n  protected trigger(eventType: string, ...varArgs: unknown[]) {\n    if (Array.isArray(this.listeners_[eventType])) {\n      // Clone the list, since callbacks could add/remove listeners.\n      const listeners = [...this.listeners_[eventType]];\n\n      for (let i = 0; i < listeners.length; i++) {\n        listeners[i].callback.apply(listeners[i].context, varArgs);\n      }\n    }\n  }\n\n  on(eventType: string, callback: (a: unknown) => void, context: unknown) {\n    this.validateEventType_(eventType);\n    this.listeners_[eventType] = this.listeners_[eventType] || [];\n    this.listeners_[eventType].push({ callback, context });\n\n    const eventData = this.getInitialEvent(eventType);\n    if (eventData) {\n      callback.apply(context, eventData);\n    }\n  }\n\n  off(eventType: string, callback: (a: unknown) => void, context: unknown) {\n    this.validateEventType_(eventType);\n    const listeners = this.listeners_[eventType] || [];\n    for (let i = 0; i < listeners.length; i++) {\n      if (\n        listeners[i].callback === callback &&\n        (!context || context === listeners[i].context)\n      ) {\n        listeners.splice(i, 1);\n        return;\n      }\n    }\n  }\n\n  private validateEventType_(eventType: string) {\n    assert(\n      this.allowedEvents_.find(et => {\n        return et === eventType;\n      }),\n      'Unknown event: ' + eventType\n    );\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, isMobileCordova } from '@firebase/util';\n\nimport { EventEmitter } from './EventEmitter';\n\n/**\n * Monitors online state (as reported by window.online/offline events).\n *\n * The expectation is that this could have many false positives (thinks we are online\n * when we're not), but no false negatives.  So we can safely use it to determine when\n * we definitely cannot reach the internet.\n */\nexport class OnlineMonitor extends EventEmitter {\n  private online_ = true;\n\n  static getInstance() {\n    return new OnlineMonitor();\n  }\n\n  constructor() {\n    super(['online']);\n\n    // We've had repeated complaints that Cordova apps can get stuck \"offline\", e.g.\n    // https://forum.ionicframework.com/t/firebase-connection-is-lost-and-never-come-back/43810\n    // It would seem that the 'online' event does not always fire consistently. So we disable it\n    // for Cordova.\n    if (\n      typeof window !== 'undefined' &&\n      typeof window.addEventListener !== 'undefined' &&\n      !isMobileCordova()\n    ) {\n      window.addEventListener(\n        'online',\n        () => {\n          if (!this.online_) {\n            this.online_ = true;\n            this.trigger('online', true);\n          }\n        },\n        false\n      );\n\n      window.addEventListener(\n        'offline',\n        () => {\n          if (this.online_) {\n            this.online_ = false;\n            this.trigger('online', false);\n          }\n        },\n        false\n      );\n    }\n  }\n\n  getInitialEvent(eventType: string): boolean[] {\n    assert(eventType === 'online', 'Unknown event type: ' + eventType);\n    return [this.online_];\n  }\n\n  currentlyOnline(): boolean {\n    return this.online_;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { stringLength } from '@firebase/util';\n\nimport { nameCompare } from './util';\n\n/** Maximum key depth. */\nconst MAX_PATH_DEPTH = 32;\n\n/** Maximum number of (UTF8) bytes in a Firebase path. */\nconst MAX_PATH_LENGTH_BYTES = 768;\n\n/**\n * An immutable object representing a parsed path.  It's immutable so that you\n * can pass them around to other functions without worrying about them changing\n * it.\n */\n\nexport class Path {\n  pieces_: string[];\n  pieceNum_: number;\n\n  /**\n   * @param pathOrString - Path string to parse, or another path, or the raw\n   * tokens array\n   */\n  constructor(pathOrString: string | string[], pieceNum?: number) {\n    if (pieceNum === void 0) {\n      this.pieces_ = (pathOrString as string).split('/');\n\n      // Remove empty pieces.\n      let copyTo = 0;\n      for (let i = 0; i < this.pieces_.length; i++) {\n        if (this.pieces_[i].length > 0) {\n          this.pieces_[copyTo] = this.pieces_[i];\n          copyTo++;\n        }\n      }\n      this.pieces_.length = copyTo;\n\n      this.pieceNum_ = 0;\n    } else {\n      this.pieces_ = pathOrString as string[];\n      this.pieceNum_ = pieceNum;\n    }\n  }\n\n  toString(): string {\n    let pathString = '';\n    for (let i = this.pieceNum_; i < this.pieces_.length; i++) {\n      if (this.pieces_[i] !== '') {\n        pathString += '/' + this.pieces_[i];\n      }\n    }\n\n    return pathString || '/';\n  }\n}\n\nexport function newEmptyPath(): Path {\n  return new Path('');\n}\n\nexport function pathGetFront(path: Path): string | null {\n  if (path.pieceNum_ >= path.pieces_.length) {\n    return null;\n  }\n\n  return path.pieces_[path.pieceNum_];\n}\n\n/**\n * @returns The number of segments in this path\n */\nexport function pathGetLength(path: Path): number {\n  return path.pieces_.length - path.pieceNum_;\n}\n\nexport function pathPopFront(path: Path): Path {\n  let pieceNum = path.pieceNum_;\n  if (pieceNum < path.pieces_.length) {\n    pieceNum++;\n  }\n  return new Path(path.pieces_, pieceNum);\n}\n\nexport function pathGetBack(path: Path): string | null {\n  if (path.pieceNum_ < path.pieces_.length) {\n    return path.pieces_[path.pieces_.length - 1];\n  }\n\n  return null;\n}\n\nexport function pathToUrlEncodedString(path: Path): string {\n  let pathString = '';\n  for (let i = path.pieceNum_; i < path.pieces_.length; i++) {\n    if (path.pieces_[i] !== '') {\n      pathString += '/' + encodeURIComponent(String(path.pieces_[i]));\n    }\n  }\n\n  return pathString || '/';\n}\n\n/**\n * Shallow copy of the parts of the path.\n *\n */\nexport function pathSlice(path: Path, begin: number = 0): string[] {\n  return path.pieces_.slice(path.pieceNum_ + begin);\n}\n\nexport function pathParent(path: Path): Path | null {\n  if (path.pieceNum_ >= path.pieces_.length) {\n    return null;\n  }\n\n  const pieces = [];\n  for (let i = path.pieceNum_; i < path.pieces_.length - 1; i++) {\n    pieces.push(path.pieces_[i]);\n  }\n\n  return new Path(pieces, 0);\n}\n\nexport function pathChild(path: Path, childPathObj: string | Path): Path {\n  const pieces = [];\n  for (let i = path.pieceNum_; i < path.pieces_.length; i++) {\n    pieces.push(path.pieces_[i]);\n  }\n\n  if (childPathObj instanceof Path) {\n    for (let i = childPathObj.pieceNum_; i < childPathObj.pieces_.length; i++) {\n      pieces.push(childPathObj.pieces_[i]);\n    }\n  } else {\n    const childPieces = childPathObj.split('/');\n    for (let i = 0; i < childPieces.length; i++) {\n      if (childPieces[i].length > 0) {\n        pieces.push(childPieces[i]);\n      }\n    }\n  }\n\n  return new Path(pieces, 0);\n}\n\n/**\n * @returns True if there are no segments in this path\n */\nexport function pathIsEmpty(path: Path): boolean {\n  return path.pieceNum_ >= path.pieces_.length;\n}\n\n/**\n * @returns The path from outerPath to innerPath\n */\nexport function newRelativePath(outerPath: Path, innerPath: Path): Path {\n  const outer = pathGetFront(outerPath),\n    inner = pathGetFront(innerPath);\n  if (outer === null) {\n    return innerPath;\n  } else if (outer === inner) {\n    return newRelativePath(pathPopFront(outerPath), pathPopFront(innerPath));\n  } else {\n    throw new Error(\n      'INTERNAL ERROR: innerPath (' +\n        innerPath +\n        ') is not within ' +\n        'outerPath (' +\n        outerPath +\n        ')'\n    );\n  }\n}\n\n/**\n * @returns -1, 0, 1 if left is less, equal, or greater than the right.\n */\nexport function pathCompare(left: Path, right: Path): number {\n  const leftKeys = pathSlice(left, 0);\n  const rightKeys = pathSlice(right, 0);\n  for (let i = 0; i < leftKeys.length && i < rightKeys.length; i++) {\n    const cmp = nameCompare(leftKeys[i], rightKeys[i]);\n    if (cmp !== 0) {\n      return cmp;\n    }\n  }\n  if (leftKeys.length === rightKeys.length) {\n    return 0;\n  }\n  return leftKeys.length < rightKeys.length ? -1 : 1;\n}\n\n/**\n * @returns true if paths are the same.\n */\nexport function pathEquals(path: Path, other: Path): boolean {\n  if (pathGetLength(path) !== pathGetLength(other)) {\n    return false;\n  }\n\n  for (\n    let i = path.pieceNum_, j = other.pieceNum_;\n    i <= path.pieces_.length;\n    i++, j++\n  ) {\n    if (path.pieces_[i] !== other.pieces_[j]) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * @returns True if this path is a parent (or the same as) other\n */\nexport function pathContains(path: Path, other: Path): boolean {\n  let i = path.pieceNum_;\n  let j = other.pieceNum_;\n  if (pathGetLength(path) > pathGetLength(other)) {\n    return false;\n  }\n  while (i < path.pieces_.length) {\n    if (path.pieces_[i] !== other.pieces_[j]) {\n      return false;\n    }\n    ++i;\n    ++j;\n  }\n  return true;\n}\n\n/**\n * Dynamic (mutable) path used to count path lengths.\n *\n * This class is used to efficiently check paths for valid\n * length (in UTF8 bytes) and depth (used in path validation).\n *\n * Throws Error exception if path is ever invalid.\n *\n * The definition of a path always begins with '/'.\n */\nexport class ValidationPath {\n  parts_: string[];\n  /** Initialize to number of '/' chars needed in path. */\n  byteLength_: number;\n\n  /**\n   * @param path - Initial Path.\n   * @param errorPrefix_ - Prefix for any error messages.\n   */\n  constructor(path: Path, public errorPrefix_: string) {\n    this.parts_ = pathSlice(path, 0);\n    /** Initialize to number of '/' chars needed in path. */\n    this.byteLength_ = Math.max(1, this.parts_.length);\n\n    for (let i = 0; i < this.parts_.length; i++) {\n      this.byteLength_ += stringLength(this.parts_[i]);\n    }\n    validationPathCheckValid(this);\n  }\n}\n\nexport function validationPathPush(\n  validationPath: ValidationPath,\n  child: string\n): void {\n  // Count the needed '/'\n  if (validationPath.parts_.length > 0) {\n    validationPath.byteLength_ += 1;\n  }\n  validationPath.parts_.push(child);\n  validationPath.byteLength_ += stringLength(child);\n  validationPathCheckValid(validationPath);\n}\n\nexport function validationPathPop(validationPath: ValidationPath): void {\n  const last = validationPath.parts_.pop();\n  validationPath.byteLength_ -= stringLength(last);\n  // Un-count the previous '/'\n  if (validationPath.parts_.length > 0) {\n    validationPath.byteLength_ -= 1;\n  }\n}\n\nfunction validationPathCheckValid(validationPath: ValidationPath): void {\n  if (validationPath.byteLength_ > MAX_PATH_LENGTH_BYTES) {\n    throw new Error(\n      validationPath.errorPrefix_ +\n        'has a key path longer than ' +\n        MAX_PATH_LENGTH_BYTES +\n        ' bytes (' +\n        validationPath.byteLength_ +\n        ').'\n    );\n  }\n  if (validationPath.parts_.length > MAX_PATH_DEPTH) {\n    throw new Error(\n      validationPath.errorPrefix_ +\n        'path specified exceeds the maximum depth that can be written (' +\n        MAX_PATH_DEPTH +\n        ') or object contains a cycle ' +\n        validationPathToErrorString(validationPath)\n    );\n  }\n}\n\n/**\n * String for use in error messages - uses '.' notation for path.\n */\nexport function validationPathToErrorString(\n  validationPath: ValidationPath\n): string {\n  if (validationPath.parts_.length === 0) {\n    return '';\n  }\n  return \"in property '\" + validationPath.parts_.join('.') + \"'\";\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { EventEmitter } from './EventEmitter';\n\ndeclare const document: Document;\n\nexport class VisibilityMonitor extends EventEmitter {\n  private visible_: boolean;\n\n  static getInstance() {\n    return new VisibilityMonitor();\n  }\n\n  constructor() {\n    super(['visible']);\n    let hidden: string;\n    let visibilityChange: string;\n    if (\n      typeof document !== 'undefined' &&\n      typeof document.addEventListener !== 'undefined'\n    ) {\n      if (typeof document['hidden'] !== 'undefined') {\n        // Opera 12.10 and Firefox 18 and later support\n        visibilityChange = 'visibilitychange';\n        hidden = 'hidden';\n      } else if (typeof document['mozHidden'] !== 'undefined') {\n        visibilityChange = 'mozvisibilitychange';\n        hidden = 'mozHidden';\n      } else if (typeof document['msHidden'] !== 'undefined') {\n        visibilityChange = 'msvisibilitychange';\n        hidden = 'msHidden';\n      } else if (typeof document['webkitHidden'] !== 'undefined') {\n        visibilityChange = 'webkitvisibilitychange';\n        hidden = 'webkitHidden';\n      }\n    }\n\n    // Initially, we always assume we are visible. This ensures that in browsers\n    // without page visibility support or in cases where we are never visible\n    // (e.g. chrome extension), we act as if we are visible, i.e. don't delay\n    // reconnects\n    this.visible_ = true;\n\n    if (visibilityChange) {\n      document.addEventListener(\n        visibilityChange,\n        () => {\n          const visible = !document[hidden];\n          if (visible !== this.visible_) {\n            this.visible_ = visible;\n            this.trigger('visible', visible);\n          }\n        },\n        false\n      );\n    }\n  }\n\n  getInitialEvent(eventType: string): boolean[] {\n    assert(eventType === 'visible', 'Unknown event type: ' + eventType);\n    return [this.visible_];\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  assert,\n  contains,\n  Deferred,\n  isEmpty,\n  isMobileCordova,\n  isNodeSdk,\n  isReactNative,\n  isValidFormat,\n  safeGet,\n  stringify,\n  isAdmin\n} from '@firebase/util';\n\nimport { Connection } from '../realtime/Connection';\n\nimport { AppCheckTokenProvider } from './AppCheckTokenProvider';\nimport { AuthTokenProvider } from './AuthTokenProvider';\nimport { RepoInfo } from './RepoInfo';\nimport { ServerActions } from './ServerActions';\nimport { OnlineMonitor } from './util/OnlineMonitor';\nimport { Path } from './util/Path';\nimport { error, log, logWrapper, warn, ObjectToUniqueKey } from './util/util';\nimport { VisibilityMonitor } from './util/VisibilityMonitor';\nimport { SDK_VERSION } from './version';\nimport { QueryContext } from './view/EventRegistration';\n\nconst RECONNECT_MIN_DELAY = 1000;\nconst RECONNECT_MAX_DELAY_DEFAULT = 60 * 5 * 1000; // 5 minutes in milliseconds (Case: 1858)\nconst GET_CONNECT_TIMEOUT = 3 * 1000;\nconst RECONNECT_MAX_DELAY_FOR_ADMINS = 30 * 1000; // 30 seconds for admin clients (likely to be a backend server)\nconst RECONNECT_DELAY_MULTIPLIER = 1.3;\nconst RECONNECT_DELAY_RESET_TIMEOUT = 30000; // Reset delay back to MIN_DELAY after being connected for 30sec.\nconst SERVER_KILL_INTERRUPT_REASON = 'server_kill';\n\n// If auth fails repeatedly, we'll assume something is wrong and log a warning / back off.\nconst INVALID_TOKEN_THRESHOLD = 3;\n\ninterface ListenSpec {\n  onComplete(s: string, p?: unknown): void;\n\n  hashFn(): string;\n\n  query: QueryContext;\n  tag: number | null;\n}\n\ninterface OnDisconnectRequest {\n  pathString: string;\n  action: string;\n  data: unknown;\n  onComplete?: (a: string, b: string) => void;\n}\n\ninterface OutstandingPut {\n  action: string;\n  request: object;\n  queued?: boolean;\n  onComplete: (a: string, b?: string) => void;\n}\n\ninterface OutstandingGet {\n  request: object;\n  onComplete: (response: { [k: string]: unknown }) => void;\n}\n\n/**\n * Firebase connection.  Abstracts wire protocol and handles reconnecting.\n *\n * NOTE: All JSON objects sent to the realtime connection must have property names enclosed\n * in quotes to make sure the closure compiler does not minify them.\n */\nexport class PersistentConnection extends ServerActions {\n  // Used for diagnostic logging.\n  id = PersistentConnection.nextPersistentConnectionId_++;\n  private log_ = logWrapper('p:' + this.id + ':');\n\n  private interruptReasons_: { [reason: string]: boolean } = {};\n  private readonly listens: Map<\n    /* path */ string,\n    Map</* queryId */ string, ListenSpec>\n  > = new Map();\n  private outstandingPuts_: OutstandingPut[] = [];\n  private outstandingGets_: OutstandingGet[] = [];\n  private outstandingPutCount_ = 0;\n  private outstandingGetCount_ = 0;\n  private onDisconnectRequestQueue_: OnDisconnectRequest[] = [];\n  private connected_ = false;\n  private reconnectDelay_ = RECONNECT_MIN_DELAY;\n  private maxReconnectDelay_ = RECONNECT_MAX_DELAY_DEFAULT;\n  private securityDebugCallback_: ((a: object) => void) | null = null;\n  lastSessionId: string | null = null;\n\n  private establishConnectionTimer_: number | null = null;\n\n  private visible_: boolean = false;\n\n  // Before we get connected, we keep a queue of pending messages to send.\n  private requestCBHash_: { [k: number]: (a: unknown) => void } = {};\n  private requestNumber_ = 0;\n\n  private realtime_: {\n    sendRequest(a: object): void;\n    close(): void;\n  } | null = null;\n\n  private authToken_: string | null = null;\n  private appCheckToken_: string | null = null;\n  private forceTokenRefresh_ = false;\n  private invalidAuthTokenCount_ = 0;\n  private invalidAppCheckTokenCount_ = 0;\n\n  private firstConnection_ = true;\n  private lastConnectionAttemptTime_: number | null = null;\n  private lastConnectionEstablishedTime_: number | null = null;\n\n  private static nextPersistentConnectionId_ = 0;\n\n  /**\n   * Counter for number of connections created. Mainly used for tagging in the logs\n   */\n  private static nextConnectionId_ = 0;\n\n  /**\n   * @param repoInfo_ - Data about the namespace we are connecting to\n   * @param applicationId_ - The Firebase App ID for this project\n   * @param onDataUpdate_ - A callback for new data from the server\n   */\n  constructor(\n    private repoInfo_: RepoInfo,\n    private applicationId_: string,\n    private onDataUpdate_: (\n      a: string,\n      b: unknown,\n      c: boolean,\n      d: number | null\n    ) => void,\n    private onConnectStatus_: (a: boolean) => void,\n    private onServerInfoUpdate_: (a: unknown) => void,\n    private authTokenProvider_: AuthTokenProvider,\n    private appCheckTokenProvider_: AppCheckTokenProvider,\n    private authOverride_?: object | null\n  ) {\n    super();\n\n    if (authOverride_ && !isNodeSdk()) {\n      throw new Error(\n        'Auth override specified in options, but not supported on non Node.js platforms'\n      );\n    }\n\n    VisibilityMonitor.getInstance().on('visible', this.onVisible_, this);\n\n    if (repoInfo_.host.indexOf('fblocal') === -1) {\n      OnlineMonitor.getInstance().on('online', this.onOnline_, this);\n    }\n  }\n\n  protected sendRequest(\n    action: string,\n    body: unknown,\n    onResponse?: (a: unknown) => void\n  ) {\n    const curReqNum = ++this.requestNumber_;\n\n    const msg = { r: curReqNum, a: action, b: body };\n    this.log_(stringify(msg));\n    assert(\n      this.connected_,\n      \"sendRequest call when we're not connected not allowed.\"\n    );\n    this.realtime_.sendRequest(msg);\n    if (onResponse) {\n      this.requestCBHash_[curReqNum] = onResponse;\n    }\n  }\n\n  get(query: QueryContext): Promise<string> {\n    this.initConnection_();\n\n    const deferred = new Deferred<string>();\n    const request = {\n      p: query._path.toString(),\n      q: query._queryObject\n    };\n    const outstandingGet = {\n      action: 'g',\n      request,\n      onComplete: (message: { [k: string]: unknown }) => {\n        const payload = message['d'] as string;\n        if (message['s'] === 'ok') {\n          this.onDataUpdate_(\n            request['p'],\n            payload,\n            /*isMerge*/ false,\n            /*tag*/ null\n          );\n          deferred.resolve(payload);\n        } else {\n          deferred.reject(payload);\n        }\n      }\n    };\n    this.outstandingGets_.push(outstandingGet);\n    this.outstandingGetCount_++;\n    const index = this.outstandingGets_.length - 1;\n\n    if (!this.connected_) {\n      setTimeout(() => {\n        const get = this.outstandingGets_[index];\n        if (get === undefined || outstandingGet !== get) {\n          return;\n        }\n        delete this.outstandingGets_[index];\n        this.outstandingGetCount_--;\n        if (this.outstandingGetCount_ === 0) {\n          this.outstandingGets_ = [];\n        }\n        this.log_('get ' + index + ' timed out on connection');\n        deferred.reject(new Error('Client is offline.'));\n      }, GET_CONNECT_TIMEOUT);\n    }\n\n    if (this.connected_) {\n      this.sendGet_(index);\n    }\n\n    return deferred.promise;\n  }\n\n  listen(\n    query: QueryContext,\n    currentHashFn: () => string,\n    tag: number | null,\n    onComplete: (a: string, b: unknown) => void\n  ) {\n    this.initConnection_();\n\n    const queryId = query._queryIdentifier;\n    const pathString = query._path.toString();\n    this.log_('Listen called for ' + pathString + ' ' + queryId);\n    if (!this.listens.has(pathString)) {\n      this.listens.set(pathString, new Map());\n    }\n    assert(\n      query._queryParams.isDefault() || !query._queryParams.loadsAllData(),\n      'listen() called for non-default but complete query'\n    );\n    assert(\n      !this.listens.get(pathString)!.has(queryId),\n      'listen() called twice for same path/queryId.'\n    );\n    const listenSpec: ListenSpec = {\n      onComplete,\n      hashFn: currentHashFn,\n      query,\n      tag\n    };\n    this.listens.get(pathString)!.set(queryId, listenSpec);\n\n    if (this.connected_) {\n      this.sendListen_(listenSpec);\n    }\n  }\n\n  private sendGet_(index: number) {\n    const get = this.outstandingGets_[index];\n    this.sendRequest('g', get.request, (message: { [k: string]: unknown }) => {\n      delete this.outstandingGets_[index];\n      this.outstandingGetCount_--;\n      if (this.outstandingGetCount_ === 0) {\n        this.outstandingGets_ = [];\n      }\n      if (get.onComplete) {\n        get.onComplete(message);\n      }\n    });\n  }\n\n  private sendListen_(listenSpec: ListenSpec) {\n    const query = listenSpec.query;\n    const pathString = query._path.toString();\n    const queryId = query._queryIdentifier;\n    this.log_('Listen on ' + pathString + ' for ' + queryId);\n    const req: { [k: string]: unknown } = { /*path*/ p: pathString };\n\n    const action = 'q';\n\n    // Only bother to send query if it's non-default.\n    if (listenSpec.tag) {\n      req['q'] = query._queryObject;\n      req['t'] = listenSpec.tag;\n    }\n\n    req[/*hash*/ 'h'] = listenSpec.hashFn();\n\n    this.sendRequest(action, req, (message: { [k: string]: unknown }) => {\n      const payload: unknown = message[/*data*/ 'd'];\n      const status = message[/*status*/ 's'] as string;\n\n      // print warnings in any case...\n      PersistentConnection.warnOnListenWarnings_(payload, query);\n\n      const currentListenSpec =\n        this.listens.get(pathString) &&\n        this.listens.get(pathString)!.get(queryId);\n      // only trigger actions if the listen hasn't been removed and readded\n      if (currentListenSpec === listenSpec) {\n        this.log_('listen response', message);\n\n        if (status !== 'ok') {\n          this.removeListen_(pathString, queryId);\n        }\n\n        if (listenSpec.onComplete) {\n          listenSpec.onComplete(status, payload);\n        }\n      }\n    });\n  }\n\n  private static warnOnListenWarnings_(payload: unknown, query: QueryContext) {\n    if (payload && typeof payload === 'object' && contains(payload, 'w')) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      const warnings = safeGet(payload as any, 'w');\n      if (Array.isArray(warnings) && ~warnings.indexOf('no_index')) {\n        const indexSpec =\n          '\".indexOn\": \"' + query._queryParams.getIndex().toString() + '\"';\n        const indexPath = query._path.toString();\n        warn(\n          `Using an unspecified index. Your data will be downloaded and ` +\n            `filtered on the client. Consider adding ${indexSpec} at ` +\n            `${indexPath} to your security rules for better performance.`\n        );\n      }\n    }\n  }\n\n  refreshAuthToken(token: string) {\n    this.authToken_ = token;\n    this.log_('Auth token refreshed');\n    if (this.authToken_) {\n      this.tryAuth();\n    } else {\n      //If we're connected we want to let the server know to unauthenticate us. If we're not connected, simply delete\n      //the credential so we dont become authenticated next time we connect.\n      if (this.connected_) {\n        this.sendRequest('unauth', {}, () => {});\n      }\n    }\n\n    this.reduceReconnectDelayIfAdminCredential_(token);\n  }\n\n  private reduceReconnectDelayIfAdminCredential_(credential: string) {\n    // NOTE: This isn't intended to be bulletproof (a malicious developer can always just modify the client).\n    // Additionally, we don't bother resetting the max delay back to the default if auth fails / expires.\n    const isFirebaseSecret = credential && credential.length === 40;\n    if (isFirebaseSecret || isAdmin(credential)) {\n      this.log_(\n        'Admin auth credential detected.  Reducing max reconnect time.'\n      );\n      this.maxReconnectDelay_ = RECONNECT_MAX_DELAY_FOR_ADMINS;\n    }\n  }\n\n  refreshAppCheckToken(token: string | null) {\n    this.appCheckToken_ = token;\n    this.log_('App check token refreshed');\n    if (this.appCheckToken_) {\n      this.tryAppCheck();\n    } else {\n      //If we're connected we want to let the server know to unauthenticate us.\n      //If we're not connected, simply delete the credential so we dont become\n      // authenticated next time we connect.\n      if (this.connected_) {\n        this.sendRequest('unappeck', {}, () => {});\n      }\n    }\n  }\n\n  /**\n   * Attempts to authenticate with the given credentials. If the authentication attempt fails, it's triggered like\n   * a auth revoked (the connection is closed).\n   */\n  tryAuth() {\n    if (this.connected_ && this.authToken_) {\n      const token = this.authToken_;\n      const authMethod = isValidFormat(token) ? 'auth' : 'gauth';\n      const requestData: { [k: string]: unknown } = { cred: token };\n      if (this.authOverride_ === null) {\n        requestData['noauth'] = true;\n      } else if (typeof this.authOverride_ === 'object') {\n        requestData['authvar'] = this.authOverride_;\n      }\n      this.sendRequest(\n        authMethod,\n        requestData,\n        (res: { [k: string]: unknown }) => {\n          const status = res[/*status*/ 's'] as string;\n          const data = (res[/*data*/ 'd'] as string) || 'error';\n\n          if (this.authToken_ === token) {\n            if (status === 'ok') {\n              this.invalidAuthTokenCount_ = 0;\n            } else {\n              // Triggers reconnect and force refresh for auth token\n              this.onAuthRevoked_(status, data);\n            }\n          }\n        }\n      );\n    }\n  }\n\n  /**\n   * Attempts to authenticate with the given token. If the authentication\n   * attempt fails, it's triggered like the token was revoked (the connection is\n   * closed).\n   */\n  tryAppCheck() {\n    if (this.connected_ && this.appCheckToken_) {\n      this.sendRequest(\n        'appcheck',\n        { 'token': this.appCheckToken_ },\n        (res: { [k: string]: unknown }) => {\n          const status = res[/*status*/ 's'] as string;\n          const data = (res[/*data*/ 'd'] as string) || 'error';\n          if (status === 'ok') {\n            this.invalidAppCheckTokenCount_ = 0;\n          } else {\n            this.onAppCheckRevoked_(status, data);\n          }\n        }\n      );\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  unlisten(query: QueryContext, tag: number | null) {\n    const pathString = query._path.toString();\n    const queryId = query._queryIdentifier;\n\n    this.log_('Unlisten called for ' + pathString + ' ' + queryId);\n\n    assert(\n      query._queryParams.isDefault() || !query._queryParams.loadsAllData(),\n      'unlisten() called for non-default but complete query'\n    );\n    const listen = this.removeListen_(pathString, queryId);\n    if (listen && this.connected_) {\n      this.sendUnlisten_(pathString, queryId, query._queryObject, tag);\n    }\n  }\n\n  private sendUnlisten_(\n    pathString: string,\n    queryId: string,\n    queryObj: object,\n    tag: number | null\n  ) {\n    this.log_('Unlisten on ' + pathString + ' for ' + queryId);\n\n    const req: { [k: string]: unknown } = { /*path*/ p: pathString };\n    const action = 'n';\n    // Only bother sending queryId if it's non-default.\n    if (tag) {\n      req['q'] = queryObj;\n      req['t'] = tag;\n    }\n\n    this.sendRequest(action, req);\n  }\n\n  onDisconnectPut(\n    pathString: string,\n    data: unknown,\n    onComplete?: (a: string, b: string) => void\n  ) {\n    this.initConnection_();\n\n    if (this.connected_) {\n      this.sendOnDisconnect_('o', pathString, data, onComplete);\n    } else {\n      this.onDisconnectRequestQueue_.push({\n        pathString,\n        action: 'o',\n        data,\n        onComplete\n      });\n    }\n  }\n\n  onDisconnectMerge(\n    pathString: string,\n    data: unknown,\n    onComplete?: (a: string, b: string) => void\n  ) {\n    this.initConnection_();\n\n    if (this.connected_) {\n      this.sendOnDisconnect_('om', pathString, data, onComplete);\n    } else {\n      this.onDisconnectRequestQueue_.push({\n        pathString,\n        action: 'om',\n        data,\n        onComplete\n      });\n    }\n  }\n\n  onDisconnectCancel(\n    pathString: string,\n    onComplete?: (a: string, b: string) => void\n  ) {\n    this.initConnection_();\n\n    if (this.connected_) {\n      this.sendOnDisconnect_('oc', pathString, null, onComplete);\n    } else {\n      this.onDisconnectRequestQueue_.push({\n        pathString,\n        action: 'oc',\n        data: null,\n        onComplete\n      });\n    }\n  }\n\n  private sendOnDisconnect_(\n    action: string,\n    pathString: string,\n    data: unknown,\n    onComplete: (a: string, b: string) => void\n  ) {\n    const request = { /*path*/ p: pathString, /*data*/ d: data };\n    this.log_('onDisconnect ' + action, request);\n    this.sendRequest(action, request, (response: { [k: string]: unknown }) => {\n      if (onComplete) {\n        setTimeout(() => {\n          onComplete(\n            response[/*status*/ 's'] as string,\n            response[/* data */ 'd'] as string\n          );\n        }, Math.floor(0));\n      }\n    });\n  }\n\n  put(\n    pathString: string,\n    data: unknown,\n    onComplete?: (a: string, b: string) => void,\n    hash?: string\n  ) {\n    this.putInternal('p', pathString, data, onComplete, hash);\n  }\n\n  merge(\n    pathString: string,\n    data: unknown,\n    onComplete: (a: string, b: string | null) => void,\n    hash?: string\n  ) {\n    this.putInternal('m', pathString, data, onComplete, hash);\n  }\n\n  putInternal(\n    action: string,\n    pathString: string,\n    data: unknown,\n    onComplete: (a: string, b: string | null) => void,\n    hash?: string\n  ) {\n    this.initConnection_();\n\n    const request: { [k: string]: unknown } = {\n      /*path*/ p: pathString,\n      /*data*/ d: data\n    };\n\n    if (hash !== undefined) {\n      request[/*hash*/ 'h'] = hash;\n    }\n\n    // TODO: Only keep track of the most recent put for a given path?\n    this.outstandingPuts_.push({\n      action,\n      request,\n      onComplete\n    });\n\n    this.outstandingPutCount_++;\n    const index = this.outstandingPuts_.length - 1;\n\n    if (this.connected_) {\n      this.sendPut_(index);\n    } else {\n      this.log_('Buffering put: ' + pathString);\n    }\n  }\n\n  private sendPut_(index: number) {\n    const action = this.outstandingPuts_[index].action;\n    const request = this.outstandingPuts_[index].request;\n    const onComplete = this.outstandingPuts_[index].onComplete;\n    this.outstandingPuts_[index].queued = this.connected_;\n\n    this.sendRequest(action, request, (message: { [k: string]: unknown }) => {\n      this.log_(action + ' response', message);\n\n      delete this.outstandingPuts_[index];\n      this.outstandingPutCount_--;\n\n      // Clean up array occasionally.\n      if (this.outstandingPutCount_ === 0) {\n        this.outstandingPuts_ = [];\n      }\n\n      if (onComplete) {\n        onComplete(\n          message[/*status*/ 's'] as string,\n          message[/* data */ 'd'] as string\n        );\n      }\n    });\n  }\n\n  reportStats(stats: { [k: string]: unknown }) {\n    // If we're not connected, we just drop the stats.\n    if (this.connected_) {\n      const request = { /*counters*/ c: stats };\n      this.log_('reportStats', request);\n\n      this.sendRequest(/*stats*/ 's', request, result => {\n        const status = result[/*status*/ 's'];\n        if (status !== 'ok') {\n          const errorReason = result[/* data */ 'd'];\n          this.log_('reportStats', 'Error sending stats: ' + errorReason);\n        }\n      });\n    }\n  }\n\n  private onDataMessage_(message: { [k: string]: unknown }) {\n    if ('r' in message) {\n      // this is a response\n      this.log_('from server: ' + stringify(message));\n      const reqNum = message['r'] as string;\n      const onResponse = this.requestCBHash_[reqNum];\n      if (onResponse) {\n        delete this.requestCBHash_[reqNum];\n        onResponse(message[/*body*/ 'b']);\n      }\n    } else if ('error' in message) {\n      throw 'A server-side error has occurred: ' + message['error'];\n    } else if ('a' in message) {\n      // a and b are action and body, respectively\n      this.onDataPush_(message['a'] as string, message['b'] as {});\n    }\n  }\n\n  private onDataPush_(action: string, body: { [k: string]: unknown }) {\n    this.log_('handleServerMessage', action, body);\n    if (action === 'd') {\n      this.onDataUpdate_(\n        body[/*path*/ 'p'] as string,\n        body[/*data*/ 'd'],\n        /*isMerge*/ false,\n        body['t'] as number\n      );\n    } else if (action === 'm') {\n      this.onDataUpdate_(\n        body[/*path*/ 'p'] as string,\n        body[/*data*/ 'd'],\n        /*isMerge=*/ true,\n        body['t'] as number\n      );\n    } else if (action === 'c') {\n      this.onListenRevoked_(\n        body[/*path*/ 'p'] as string,\n        body[/*query*/ 'q'] as unknown[]\n      );\n    } else if (action === 'ac') {\n      this.onAuthRevoked_(\n        body[/*status code*/ 's'] as string,\n        body[/* explanation */ 'd'] as string\n      );\n    } else if (action === 'apc') {\n      this.onAppCheckRevoked_(\n        body[/*status code*/ 's'] as string,\n        body[/* explanation */ 'd'] as string\n      );\n    } else if (action === 'sd') {\n      this.onSecurityDebugPacket_(body);\n    } else {\n      error(\n        'Unrecognized action received from server: ' +\n          stringify(action) +\n          '\\nAre you using the latest client?'\n      );\n    }\n  }\n\n  private onReady_(timestamp: number, sessionId: string) {\n    this.log_('connection ready');\n    this.connected_ = true;\n    this.lastConnectionEstablishedTime_ = new Date().getTime();\n    this.handleTimestamp_(timestamp);\n    this.lastSessionId = sessionId;\n    if (this.firstConnection_) {\n      this.sendConnectStats_();\n    }\n    this.restoreState_();\n    this.firstConnection_ = false;\n    this.onConnectStatus_(true);\n  }\n\n  private scheduleConnect_(timeout: number) {\n    assert(\n      !this.realtime_,\n      \"Scheduling a connect when we're already connected/ing?\"\n    );\n\n    if (this.establishConnectionTimer_) {\n      clearTimeout(this.establishConnectionTimer_);\n    }\n\n    // NOTE: Even when timeout is 0, it's important to do a setTimeout to work around an infuriating \"Security Error\" in\n    // Firefox when trying to write to our long-polling iframe in some scenarios (e.g. Forge or our unit tests).\n\n    this.establishConnectionTimer_ = setTimeout(() => {\n      this.establishConnectionTimer_ = null;\n      this.establishConnection_();\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    }, Math.floor(timeout)) as any;\n  }\n\n  private initConnection_() {\n    if (!this.realtime_ && this.firstConnection_) {\n      this.scheduleConnect_(0);\n    }\n  }\n\n  private onVisible_(visible: boolean) {\n    // NOTE: Tabbing away and back to a window will defeat our reconnect backoff, but I think that's fine.\n    if (\n      visible &&\n      !this.visible_ &&\n      this.reconnectDelay_ === this.maxReconnectDelay_\n    ) {\n      this.log_('Window became visible.  Reducing delay.');\n      this.reconnectDelay_ = RECONNECT_MIN_DELAY;\n\n      if (!this.realtime_) {\n        this.scheduleConnect_(0);\n      }\n    }\n    this.visible_ = visible;\n  }\n\n  private onOnline_(online: boolean) {\n    if (online) {\n      this.log_('Browser went online.');\n      this.reconnectDelay_ = RECONNECT_MIN_DELAY;\n      if (!this.realtime_) {\n        this.scheduleConnect_(0);\n      }\n    } else {\n      this.log_('Browser went offline.  Killing connection.');\n      if (this.realtime_) {\n        this.realtime_.close();\n      }\n    }\n  }\n\n  private onRealtimeDisconnect_() {\n    this.log_('data client disconnected');\n    this.connected_ = false;\n    this.realtime_ = null;\n\n    // Since we don't know if our sent transactions succeeded or not, we need to cancel them.\n    this.cancelSentTransactions_();\n\n    // Clear out the pending requests.\n    this.requestCBHash_ = {};\n\n    if (this.shouldReconnect_()) {\n      if (!this.visible_) {\n        this.log_(\"Window isn't visible.  Delaying reconnect.\");\n        this.reconnectDelay_ = this.maxReconnectDelay_;\n        this.lastConnectionAttemptTime_ = new Date().getTime();\n      } else if (this.lastConnectionEstablishedTime_) {\n        // If we've been connected long enough, reset reconnect delay to minimum.\n        const timeSinceLastConnectSucceeded =\n          new Date().getTime() - this.lastConnectionEstablishedTime_;\n        if (timeSinceLastConnectSucceeded > RECONNECT_DELAY_RESET_TIMEOUT) {\n          this.reconnectDelay_ = RECONNECT_MIN_DELAY;\n        }\n        this.lastConnectionEstablishedTime_ = null;\n      }\n\n      const timeSinceLastConnectAttempt =\n        new Date().getTime() - this.lastConnectionAttemptTime_;\n      let reconnectDelay = Math.max(\n        0,\n        this.reconnectDelay_ - timeSinceLastConnectAttempt\n      );\n      reconnectDelay = Math.random() * reconnectDelay;\n\n      this.log_('Trying to reconnect in ' + reconnectDelay + 'ms');\n      this.scheduleConnect_(reconnectDelay);\n\n      // Adjust reconnect delay for next time.\n      this.reconnectDelay_ = Math.min(\n        this.maxReconnectDelay_,\n        this.reconnectDelay_ * RECONNECT_DELAY_MULTIPLIER\n      );\n    }\n    this.onConnectStatus_(false);\n  }\n\n  private async establishConnection_() {\n    if (this.shouldReconnect_()) {\n      this.log_('Making a connection attempt');\n      this.lastConnectionAttemptTime_ = new Date().getTime();\n      this.lastConnectionEstablishedTime_ = null;\n      const onDataMessage = this.onDataMessage_.bind(this);\n      const onReady = this.onReady_.bind(this);\n      const onDisconnect = this.onRealtimeDisconnect_.bind(this);\n      const connId = this.id + ':' + PersistentConnection.nextConnectionId_++;\n      const lastSessionId = this.lastSessionId;\n      let canceled = false;\n      let connection: Connection | null = null;\n      const closeFn = function () {\n        if (connection) {\n          connection.close();\n        } else {\n          canceled = true;\n          onDisconnect();\n        }\n      };\n      const sendRequestFn = function (msg: object) {\n        assert(\n          connection,\n          \"sendRequest call when we're not connected not allowed.\"\n        );\n        connection.sendRequest(msg);\n      };\n\n      this.realtime_ = {\n        close: closeFn,\n        sendRequest: sendRequestFn\n      };\n\n      const forceRefresh = this.forceTokenRefresh_;\n      this.forceTokenRefresh_ = false;\n\n      try {\n        // First fetch auth and app check token, and establish connection after\n        // fetching the token was successful\n        const [authToken, appCheckToken] = await Promise.all([\n          this.authTokenProvider_.getToken(forceRefresh),\n          this.appCheckTokenProvider_.getToken(forceRefresh)\n        ]);\n\n        if (!canceled) {\n          log('getToken() completed. Creating connection.');\n          this.authToken_ = authToken && authToken.accessToken;\n          this.appCheckToken_ = appCheckToken && appCheckToken.token;\n          connection = new Connection(\n            connId,\n            this.repoInfo_,\n            this.applicationId_,\n            this.appCheckToken_,\n            this.authToken_,\n            onDataMessage,\n            onReady,\n            onDisconnect,\n            /* onKill= */ reason => {\n              warn(reason + ' (' + this.repoInfo_.toString() + ')');\n              this.interrupt(SERVER_KILL_INTERRUPT_REASON);\n            },\n            lastSessionId\n          );\n        } else {\n          log('getToken() completed but was canceled');\n        }\n      } catch (error) {\n        this.log_('Failed to get token: ' + error);\n        if (!canceled) {\n          if (this.repoInfo_.nodeAdmin) {\n            // This may be a critical error for the Admin Node.js SDK, so log a warning.\n            // But getToken() may also just have temporarily failed, so we still want to\n            // continue retrying.\n            warn(error);\n          }\n          closeFn();\n        }\n      }\n    }\n  }\n\n  interrupt(reason: string) {\n    log('Interrupting connection for reason: ' + reason);\n    this.interruptReasons_[reason] = true;\n    if (this.realtime_) {\n      this.realtime_.close();\n    } else {\n      if (this.establishConnectionTimer_) {\n        clearTimeout(this.establishConnectionTimer_);\n        this.establishConnectionTimer_ = null;\n      }\n      if (this.connected_) {\n        this.onRealtimeDisconnect_();\n      }\n    }\n  }\n\n  resume(reason: string) {\n    log('Resuming connection for reason: ' + reason);\n    delete this.interruptReasons_[reason];\n    if (isEmpty(this.interruptReasons_)) {\n      this.reconnectDelay_ = RECONNECT_MIN_DELAY;\n      if (!this.realtime_) {\n        this.scheduleConnect_(0);\n      }\n    }\n  }\n\n  private handleTimestamp_(timestamp: number) {\n    const delta = timestamp - new Date().getTime();\n    this.onServerInfoUpdate_({ serverTimeOffset: delta });\n  }\n\n  private cancelSentTransactions_() {\n    for (let i = 0; i < this.outstandingPuts_.length; i++) {\n      const put = this.outstandingPuts_[i];\n      if (put && /*hash*/ 'h' in put.request && put.queued) {\n        if (put.onComplete) {\n          put.onComplete('disconnect');\n        }\n\n        delete this.outstandingPuts_[i];\n        this.outstandingPutCount_--;\n      }\n    }\n\n    // Clean up array occasionally.\n    if (this.outstandingPutCount_ === 0) {\n      this.outstandingPuts_ = [];\n    }\n  }\n\n  private onListenRevoked_(pathString: string, query?: unknown[]) {\n    // Remove the listen and manufacture a \"permission_denied\" error for the failed listen.\n    let queryId;\n    if (!query) {\n      queryId = 'default';\n    } else {\n      queryId = query.map(q => ObjectToUniqueKey(q)).join('$');\n    }\n    const listen = this.removeListen_(pathString, queryId);\n    if (listen && listen.onComplete) {\n      listen.onComplete('permission_denied');\n    }\n  }\n\n  private removeListen_(pathString: string, queryId: string): ListenSpec {\n    const normalizedPathString = new Path(pathString).toString(); // normalize path.\n    let listen;\n    if (this.listens.has(normalizedPathString)) {\n      const map = this.listens.get(normalizedPathString)!;\n      listen = map.get(queryId);\n      map.delete(queryId);\n      if (map.size === 0) {\n        this.listens.delete(normalizedPathString);\n      }\n    } else {\n      // all listens for this path has already been removed\n      listen = undefined;\n    }\n    return listen;\n  }\n\n  private onAuthRevoked_(statusCode: string, explanation: string) {\n    log('Auth token revoked: ' + statusCode + '/' + explanation);\n    this.authToken_ = null;\n    this.forceTokenRefresh_ = true;\n    this.realtime_.close();\n    if (statusCode === 'invalid_token' || statusCode === 'permission_denied') {\n      // We'll wait a couple times before logging the warning / increasing the\n      // retry period since oauth tokens will report as \"invalid\" if they're\n      // just expired. Plus there may be transient issues that resolve themselves.\n      this.invalidAuthTokenCount_++;\n      if (this.invalidAuthTokenCount_ >= INVALID_TOKEN_THRESHOLD) {\n        // Set a long reconnect delay because recovery is unlikely\n        this.reconnectDelay_ = RECONNECT_MAX_DELAY_FOR_ADMINS;\n\n        // Notify the auth token provider that the token is invalid, which will log\n        // a warning\n        this.authTokenProvider_.notifyForInvalidToken();\n      }\n    }\n  }\n\n  private onAppCheckRevoked_(statusCode: string, explanation: string) {\n    log('App check token revoked: ' + statusCode + '/' + explanation);\n    this.appCheckToken_ = null;\n    this.forceTokenRefresh_ = true;\n    // Note: We don't close the connection as the developer may not have\n    // enforcement enabled. The backend closes connections with enforcements.\n    if (statusCode === 'invalid_token' || statusCode === 'permission_denied') {\n      // We'll wait a couple times before logging the warning / increasing the\n      // retry period since oauth tokens will report as \"invalid\" if they're\n      // just expired. Plus there may be transient issues that resolve themselves.\n      this.invalidAppCheckTokenCount_++;\n      if (this.invalidAppCheckTokenCount_ >= INVALID_TOKEN_THRESHOLD) {\n        this.appCheckTokenProvider_.notifyForInvalidToken();\n      }\n    }\n  }\n\n  private onSecurityDebugPacket_(body: { [k: string]: unknown }) {\n    if (this.securityDebugCallback_) {\n      this.securityDebugCallback_(body);\n    } else {\n      if ('msg' in body) {\n        console.log(\n          'FIREBASE: ' + (body['msg'] as string).replace('\\n', '\\nFIREBASE: ')\n        );\n      }\n    }\n  }\n\n  private restoreState_() {\n    //Re-authenticate ourselves if we have a credential stored.\n    this.tryAuth();\n    this.tryAppCheck();\n\n    // Puts depend on having received the corresponding data update from the server before they complete, so we must\n    // make sure to send listens before puts.\n    for (const queries of this.listens.values()) {\n      for (const listenSpec of queries.values()) {\n        this.sendListen_(listenSpec);\n      }\n    }\n\n    for (let i = 0; i < this.outstandingPuts_.length; i++) {\n      if (this.outstandingPuts_[i]) {\n        this.sendPut_(i);\n      }\n    }\n\n    while (this.onDisconnectRequestQueue_.length) {\n      const request = this.onDisconnectRequestQueue_.shift();\n      this.sendOnDisconnect_(\n        request.action,\n        request.pathString,\n        request.data,\n        request.onComplete\n      );\n    }\n\n    for (let i = 0; i < this.outstandingGets_.length; i++) {\n      if (this.outstandingGets_[i]) {\n        this.sendGet_(i);\n      }\n    }\n  }\n\n  /**\n   * Sends client stats for first connection\n   */\n  private sendConnectStats_() {\n    const stats: { [k: string]: number } = {};\n\n    let clientName = 'js';\n    if (isNodeSdk()) {\n      if (this.repoInfo_.nodeAdmin) {\n        clientName = 'admin_node';\n      } else {\n        clientName = 'node';\n      }\n    }\n\n    stats['sdk.' + clientName + '.' + SDK_VERSION.replace(/\\./g, '-')] = 1;\n\n    if (isMobileCordova()) {\n      stats['framework.cordova'] = 1;\n    } else if (isReactNative()) {\n      stats['framework.reactnative'] = 1;\n    }\n    this.reportStats(stats);\n  }\n\n  private shouldReconnect_(): boolean {\n    const online = OnlineMonitor.getInstance().currentlyOnline();\n    return isEmpty(this.interruptReasons_) && online;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Path } from '../util/Path';\n\nimport { Index } from './indexes/Index';\n\n/**\n * Node is an interface defining the common functionality for nodes in\n * a DataSnapshot.\n *\n * @interface\n */\nexport interface Node {\n  /**\n   * Whether this node is a leaf node.\n   * @returns Whether this is a leaf node.\n   */\n  isLeafNode(): boolean;\n\n  /**\n   * Gets the priority of the node.\n   * @returns The priority of the node.\n   */\n  getPriority(): Node;\n\n  /**\n   * Returns a duplicate node with the new priority.\n   * @param newPriorityNode - New priority to set for the node.\n   * @returns Node with new priority.\n   */\n  updatePriority(newPriorityNode: Node): Node;\n\n  /**\n   * Returns the specified immediate child, or null if it doesn't exist.\n   * @param childName - The name of the child to retrieve.\n   * @returns The retrieved child, or an empty node.\n   */\n  getImmediateChild(childName: string): Node;\n\n  /**\n   * Returns a child by path, or null if it doesn't exist.\n   * @param path - The path of the child to retrieve.\n   * @returns The retrieved child or an empty node.\n   */\n  getChild(path: Path): Node;\n\n  /**\n   * Returns the name of the child immediately prior to the specified childNode, or null.\n   * @param childName - The name of the child to find the predecessor of.\n   * @param childNode - The node to find the predecessor of.\n   * @param index - The index to use to determine the predecessor\n   * @returns The name of the predecessor child, or null if childNode is the first child.\n   */\n  getPredecessorChildName(\n    childName: string,\n    childNode: Node,\n    index: Index\n  ): string | null;\n\n  /**\n   * Returns a duplicate node, with the specified immediate child updated.\n   * Any value in the node will be removed.\n   * @param childName - The name of the child to update.\n   * @param newChildNode - The new child node\n   * @returns The updated node.\n   */\n  updateImmediateChild(childName: string, newChildNode: Node): Node;\n\n  /**\n   * Returns a duplicate node, with the specified child updated.  Any value will\n   * be removed.\n   * @param path - The path of the child to update.\n   * @param newChildNode - The new child node, which may be an empty node\n   * @returns The updated node.\n   */\n  updateChild(path: Path, newChildNode: Node): Node;\n\n  /**\n   * True if the immediate child specified exists\n   */\n  hasChild(childName: string): boolean;\n\n  /**\n   * @returns True if this node has no value or children.\n   */\n  isEmpty(): boolean;\n\n  /**\n   * @returns The number of children of this node.\n   */\n  numChildren(): number;\n\n  /**\n   * Calls action for each child.\n   * @param action - Action to be called for\n   * each child.  It's passed the child name and the child node.\n   * @returns The first truthy value return by action, or the last falsey one\n   */\n  forEachChild(index: Index, action: (a: string, b: Node) => void): unknown;\n\n  /**\n   * @param exportFormat - True for export format (also wire protocol format).\n   * @returns Value of this node as JSON.\n   */\n  val(exportFormat?: boolean): unknown;\n\n  /**\n   * @returns hash representing the node contents.\n   */\n  hash(): string;\n\n  /**\n   * @param other - Another node\n   * @returns -1 for less than, 0 for equal, 1 for greater than other\n   */\n  compareTo(other: Node): number;\n\n  /**\n   * @returns Whether or not this snapshot equals other\n   */\n  equals(other: Node): boolean;\n\n  /**\n   * @returns This node, with the specified index now available\n   */\n  withIndex(indexDefinition: Index): Node;\n\n  isIndexed(indexDefinition: Index): boolean;\n}\n\nexport class NamedNode {\n  constructor(public name: string, public node: Node) {}\n\n  static Wrap(name: string, node: Node) {\n    return new NamedNode(name, node);\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Comparator } from '../../util/SortedMap';\nimport { MIN_NAME } from '../../util/util';\nimport { Node, NamedNode } from '../Node';\n\nexport abstract class Index {\n  abstract compare(a: NamedNode, b: NamedNode): number;\n\n  abstract isDefinedOn(node: Node): boolean;\n\n  /**\n   * @returns A standalone comparison function for\n   * this index\n   */\n  getCompare(): Comparator<NamedNode> {\n    return this.compare.bind(this);\n  }\n\n  /**\n   * Given a before and after value for a node, determine if the indexed value has changed. Even if they are different,\n   * it's possible that the changes are isolated to parts of the snapshot that are not indexed.\n   *\n   *\n   * @returns True if the portion of the snapshot being indexed changed between oldNode and newNode\n   */\n  indexedValueChanged(oldNode: Node, newNode: Node): boolean {\n    const oldWrapped = new NamedNode(MIN_NAME, oldNode);\n    const newWrapped = new NamedNode(MIN_NAME, newNode);\n    return this.compare(oldWrapped, newWrapped) !== 0;\n  }\n\n  /**\n   * @returns a node wrapper that will sort equal to or less than\n   * any other node wrapper, using this index\n   */\n  minPost(): NamedNode {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return (NamedNode as any).MIN;\n  }\n\n  /**\n   * @returns a node wrapper that will sort greater than or equal to\n   * any other node wrapper, using this index\n   */\n  abstract maxPost(): NamedNode;\n\n  abstract makePost(indexValue: unknown, name: string): NamedNode;\n\n  /**\n   * @returns String representation for inclusion in a query spec\n   */\n  abstract toString(): string;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, assertionError } from '@firebase/util';\n\nimport { nameCompare, MAX_NAME } from '../../util/util';\nimport { ChildrenNode } from '../ChildrenNode';\nimport { Node, NamedNode } from '../Node';\n\nimport { Index } from './Index';\n\nlet __EMPTY_NODE: ChildrenNode;\n\nexport class KeyIndex extends Index {\n  static get __EMPTY_NODE() {\n    return __EMPTY_NODE;\n  }\n\n  static set __EMPTY_NODE(val) {\n    __EMPTY_NODE = val;\n  }\n  compare(a: NamedNode, b: NamedNode): number {\n    return nameCompare(a.name, b.name);\n  }\n  isDefinedOn(node: Node): boolean {\n    // We could probably return true here (since every node has a key), but it's never called\n    // so just leaving unimplemented for now.\n    throw assertionError('KeyIndex.isDefinedOn not expected to be called.');\n  }\n  indexedValueChanged(oldNode: Node, newNode: Node): boolean {\n    return false; // The key for a node never changes.\n  }\n  minPost() {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return (NamedNode as any).MIN;\n  }\n  maxPost(): NamedNode {\n    // TODO: This should really be created once and cached in a static property, but\n    // NamedNode isn't defined yet, so I can't use it in a static.  Bleh.\n    return new NamedNode(MAX_NAME, __EMPTY_NODE);\n  }\n\n  makePost(indexValue: string, name: string): NamedNode {\n    assert(\n      typeof indexValue === 'string',\n      'KeyIndex indexValue must always be a string.'\n    );\n    // We just use empty node, but it'll never be compared, since our comparator only looks at name.\n    return new NamedNode(indexValue, __EMPTY_NODE);\n  }\n\n  /**\n   * @returns String representation for inclusion in a query spec\n   */\n  toString(): string {\n    return '.key';\n  }\n}\n\nexport const KEY_INDEX = new KeyIndex();\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Implementation of an immutable SortedMap using a Left-leaning\n * Red-Black Tree, adapted from the implementation in Mugs\n * (http://mads379.github.com/mugs/) by Mads Hartmann Jensen\n * (mads379\\@gmail.com).\n *\n * Original paper on Left-leaning Red-Black Trees:\n *   http://www.cs.princeton.edu/~rs/talks/LLRB/LLRB.pdf\n *\n * Invariant 1: No red node has a red child\n * Invariant 2: Every leaf path has the same number of black nodes\n * Invariant 3: Only the left child can be red (left leaning)\n */\n\n// TODO: There are some improvements I'd like to make to improve memory / perf:\n//  * Create two prototypes, LLRedNode and LLBlackNode, instead of storing a\n//    color property in every node.\n// TODO: It would also be good (and possibly necessary) to create a base\n// interface for LLRBNode and LLRBEmptyNode.\n\nexport type Comparator<K> = (key1: K, key2: K) => number;\n\n/**\n * An iterator over an LLRBNode.\n */\nexport class SortedMapIterator<K, V, T> {\n  private nodeStack_: Array<LLRBNode<K, V> | LLRBEmptyNode<K, V>> = [];\n\n  /**\n   * @param node - Node to iterate.\n   * @param isReverse_ - Whether or not to iterate in reverse\n   */\n  constructor(\n    node: LLRBNode<K, V> | LLRBEmptyNode<K, V>,\n    startKey: K | null,\n    comparator: Comparator<K>,\n    private isReverse_: boolean,\n    private resultGenerator_: ((k: K, v: V) => T) | null = null\n  ) {\n    let cmp = 1;\n    while (!node.isEmpty()) {\n      node = node as LLRBNode<K, V>;\n      cmp = startKey ? comparator(node.key, startKey) : 1;\n      // flip the comparison if we're going in reverse\n      if (isReverse_) {\n        cmp *= -1;\n      }\n\n      if (cmp < 0) {\n        // This node is less than our start key. ignore it\n        if (this.isReverse_) {\n          node = node.left;\n        } else {\n          node = node.right;\n        }\n      } else if (cmp === 0) {\n        // This node is exactly equal to our start key. Push it on the stack, but stop iterating;\n        this.nodeStack_.push(node);\n        break;\n      } else {\n        // This node is greater than our start key, add it to the stack and move to the next one\n        this.nodeStack_.push(node);\n        if (this.isReverse_) {\n          node = node.right;\n        } else {\n          node = node.left;\n        }\n      }\n    }\n  }\n\n  getNext(): T {\n    if (this.nodeStack_.length === 0) {\n      return null;\n    }\n\n    let node = this.nodeStack_.pop();\n    let result: T;\n    if (this.resultGenerator_) {\n      result = this.resultGenerator_(node.key, node.value);\n    } else {\n      result = ({ key: node.key, value: node.value } as unknown) as T;\n    }\n\n    if (this.isReverse_) {\n      node = node.left;\n      while (!node.isEmpty()) {\n        this.nodeStack_.push(node);\n        node = node.right;\n      }\n    } else {\n      node = node.right;\n      while (!node.isEmpty()) {\n        this.nodeStack_.push(node);\n        node = node.left;\n      }\n    }\n\n    return result;\n  }\n\n  hasNext(): boolean {\n    return this.nodeStack_.length > 0;\n  }\n\n  peek(): T {\n    if (this.nodeStack_.length === 0) {\n      return null;\n    }\n\n    const node = this.nodeStack_[this.nodeStack_.length - 1];\n    if (this.resultGenerator_) {\n      return this.resultGenerator_(node.key, node.value);\n    } else {\n      return ({ key: node.key, value: node.value } as unknown) as T;\n    }\n  }\n}\n\n/**\n * Represents a node in a Left-leaning Red-Black tree.\n */\nexport class LLRBNode<K, V> {\n  color: boolean;\n  left: LLRBNode<K, V> | LLRBEmptyNode<K, V>;\n  right: LLRBNode<K, V> | LLRBEmptyNode<K, V>;\n\n  /**\n   * @param key - Key associated with this node.\n   * @param value - Value associated with this node.\n   * @param color - Whether this node is red.\n   * @param left - Left child.\n   * @param right - Right child.\n   */\n  constructor(\n    public key: K,\n    public value: V,\n    color: boolean | null,\n    left?: LLRBNode<K, V> | LLRBEmptyNode<K, V> | null,\n    right?: LLRBNode<K, V> | LLRBEmptyNode<K, V> | null\n  ) {\n    this.color = color != null ? color : LLRBNode.RED;\n    this.left =\n      left != null ? left : (SortedMap.EMPTY_NODE as LLRBEmptyNode<K, V>);\n    this.right =\n      right != null ? right : (SortedMap.EMPTY_NODE as LLRBEmptyNode<K, V>);\n  }\n\n  static RED = true;\n  static BLACK = false;\n\n  /**\n   * Returns a copy of the current node, optionally replacing pieces of it.\n   *\n   * @param key - New key for the node, or null.\n   * @param value - New value for the node, or null.\n   * @param color - New color for the node, or null.\n   * @param left - New left child for the node, or null.\n   * @param right - New right child for the node, or null.\n   * @returns The node copy.\n   */\n  copy(\n    key: K | null,\n    value: V | null,\n    color: boolean | null,\n    left: LLRBNode<K, V> | LLRBEmptyNode<K, V> | null,\n    right: LLRBNode<K, V> | LLRBEmptyNode<K, V> | null\n  ): LLRBNode<K, V> {\n    return new LLRBNode(\n      key != null ? key : this.key,\n      value != null ? value : this.value,\n      color != null ? color : this.color,\n      left != null ? left : this.left,\n      right != null ? right : this.right\n    );\n  }\n\n  /**\n   * @returns The total number of nodes in the tree.\n   */\n  count(): number {\n    return this.left.count() + 1 + this.right.count();\n  }\n\n  /**\n   * @returns True if the tree is empty.\n   */\n  isEmpty(): boolean {\n    return false;\n  }\n\n  /**\n   * Traverses the tree in key order and calls the specified action function\n   * for each node.\n   *\n   * @param action - Callback function to be called for each\n   *   node.  If it returns true, traversal is aborted.\n   * @returns The first truthy value returned by action, or the last falsey\n   *   value returned by action\n   */\n  inorderTraversal(action: (k: K, v: V) => unknown): boolean {\n    return (\n      this.left.inorderTraversal(action) ||\n      !!action(this.key, this.value) ||\n      this.right.inorderTraversal(action)\n    );\n  }\n\n  /**\n   * Traverses the tree in reverse key order and calls the specified action function\n   * for each node.\n   *\n   * @param action - Callback function to be called for each\n   * node.  If it returns true, traversal is aborted.\n   * @returns True if traversal was aborted.\n   */\n  reverseTraversal(action: (k: K, v: V) => void): boolean {\n    return (\n      this.right.reverseTraversal(action) ||\n      action(this.key, this.value) ||\n      this.left.reverseTraversal(action)\n    );\n  }\n\n  /**\n   * @returns The minimum node in the tree.\n   */\n  private min_(): LLRBNode<K, V> {\n    if (this.left.isEmpty()) {\n      return this;\n    } else {\n      return (this.left as LLRBNode<K, V>).min_();\n    }\n  }\n\n  /**\n   * @returns The maximum key in the tree.\n   */\n  minKey(): K {\n    return this.min_().key;\n  }\n\n  /**\n   * @returns The maximum key in the tree.\n   */\n  maxKey(): K {\n    if (this.right.isEmpty()) {\n      return this.key;\n    } else {\n      return this.right.maxKey();\n    }\n  }\n\n  /**\n   * @param key - Key to insert.\n   * @param value - Value to insert.\n   * @param comparator - Comparator.\n   * @returns New tree, with the key/value added.\n   */\n  insert(key: K, value: V, comparator: Comparator<K>): LLRBNode<K, V> {\n    let n: LLRBNode<K, V> = this;\n    const cmp = comparator(key, n.key);\n    if (cmp < 0) {\n      n = n.copy(null, null, null, n.left.insert(key, value, comparator), null);\n    } else if (cmp === 0) {\n      n = n.copy(null, value, null, null, null);\n    } else {\n      n = n.copy(\n        null,\n        null,\n        null,\n        null,\n        n.right.insert(key, value, comparator)\n      );\n    }\n    return n.fixUp_();\n  }\n\n  /**\n   * @returns New tree, with the minimum key removed.\n   */\n  private removeMin_(): LLRBNode<K, V> | LLRBEmptyNode<K, V> {\n    if (this.left.isEmpty()) {\n      return SortedMap.EMPTY_NODE as LLRBEmptyNode<K, V>;\n    }\n    let n: LLRBNode<K, V> = this;\n    if (!n.left.isRed_() && !n.left.left.isRed_()) {\n      n = n.moveRedLeft_();\n    }\n    n = n.copy(null, null, null, (n.left as LLRBNode<K, V>).removeMin_(), null);\n    return n.fixUp_();\n  }\n\n  /**\n   * @param key - The key of the item to remove.\n   * @param comparator - Comparator.\n   * @returns New tree, with the specified item removed.\n   */\n  remove(\n    key: K,\n    comparator: Comparator<K>\n  ): LLRBNode<K, V> | LLRBEmptyNode<K, V> {\n    let n, smallest;\n    n = this;\n    if (comparator(key, n.key) < 0) {\n      if (!n.left.isEmpty() && !n.left.isRed_() && !n.left.left.isRed_()) {\n        n = n.moveRedLeft_();\n      }\n      n = n.copy(null, null, null, n.left.remove(key, comparator), null);\n    } else {\n      if (n.left.isRed_()) {\n        n = n.rotateRight_();\n      }\n      if (!n.right.isEmpty() && !n.right.isRed_() && !n.right.left.isRed_()) {\n        n = n.moveRedRight_();\n      }\n      if (comparator(key, n.key) === 0) {\n        if (n.right.isEmpty()) {\n          return SortedMap.EMPTY_NODE as LLRBEmptyNode<K, V>;\n        } else {\n          smallest = (n.right as LLRBNode<K, V>).min_();\n          n = n.copy(\n            smallest.key,\n            smallest.value,\n            null,\n            null,\n            (n.right as LLRBNode<K, V>).removeMin_()\n          );\n        }\n      }\n      n = n.copy(null, null, null, null, n.right.remove(key, comparator));\n    }\n    return n.fixUp_();\n  }\n\n  /**\n   * @returns Whether this is a RED node.\n   */\n  isRed_(): boolean {\n    return this.color;\n  }\n\n  /**\n   * @returns New tree after performing any needed rotations.\n   */\n  private fixUp_(): LLRBNode<K, V> {\n    let n: LLRBNode<K, V> = this;\n    if (n.right.isRed_() && !n.left.isRed_()) {\n      n = n.rotateLeft_();\n    }\n    if (n.left.isRed_() && n.left.left.isRed_()) {\n      n = n.rotateRight_();\n    }\n    if (n.left.isRed_() && n.right.isRed_()) {\n      n = n.colorFlip_();\n    }\n    return n;\n  }\n\n  /**\n   * @returns New tree, after moveRedLeft.\n   */\n  private moveRedLeft_(): LLRBNode<K, V> {\n    let n = this.colorFlip_();\n    if (n.right.left.isRed_()) {\n      n = n.copy(\n        null,\n        null,\n        null,\n        null,\n        (n.right as LLRBNode<K, V>).rotateRight_()\n      );\n      n = n.rotateLeft_();\n      n = n.colorFlip_();\n    }\n    return n;\n  }\n\n  /**\n   * @returns New tree, after moveRedRight.\n   */\n  private moveRedRight_(): LLRBNode<K, V> {\n    let n = this.colorFlip_();\n    if (n.left.left.isRed_()) {\n      n = n.rotateRight_();\n      n = n.colorFlip_();\n    }\n    return n;\n  }\n\n  /**\n   * @returns New tree, after rotateLeft.\n   */\n  private rotateLeft_(): LLRBNode<K, V> {\n    const nl = this.copy(null, null, LLRBNode.RED, null, this.right.left);\n    return this.right.copy(null, null, this.color, nl, null) as LLRBNode<K, V>;\n  }\n\n  /**\n   * @returns New tree, after rotateRight.\n   */\n  private rotateRight_(): LLRBNode<K, V> {\n    const nr = this.copy(null, null, LLRBNode.RED, this.left.right, null);\n    return this.left.copy(null, null, this.color, null, nr) as LLRBNode<K, V>;\n  }\n\n  /**\n   * @returns Newt ree, after colorFlip.\n   */\n  private colorFlip_(): LLRBNode<K, V> {\n    const left = this.left.copy(null, null, !this.left.color, null, null);\n    const right = this.right.copy(null, null, !this.right.color, null, null);\n    return this.copy(null, null, !this.color, left, right);\n  }\n\n  /**\n   * For testing.\n   *\n   * @returns True if all is well.\n   */\n  private checkMaxDepth_(): boolean {\n    const blackDepth = this.check_();\n    return Math.pow(2.0, blackDepth) <= this.count() + 1;\n  }\n\n  check_(): number {\n    if (this.isRed_() && this.left.isRed_()) {\n      throw new Error(\n        'Red node has red child(' + this.key + ',' + this.value + ')'\n      );\n    }\n    if (this.right.isRed_()) {\n      throw new Error(\n        'Right child of (' + this.key + ',' + this.value + ') is red'\n      );\n    }\n    const blackDepth = this.left.check_();\n    if (blackDepth !== this.right.check_()) {\n      throw new Error('Black depths differ');\n    } else {\n      return blackDepth + (this.isRed_() ? 0 : 1);\n    }\n  }\n}\n\n/**\n * Represents an empty node (a leaf node in the Red-Black Tree).\n */\nexport class LLRBEmptyNode<K, V> {\n  key: K;\n  value: V;\n  left: LLRBNode<K, V> | LLRBEmptyNode<K, V>;\n  right: LLRBNode<K, V> | LLRBEmptyNode<K, V>;\n  color: boolean;\n\n  /**\n   * Returns a copy of the current node.\n   *\n   * @returns The node copy.\n   */\n  copy(\n    key: K | null,\n    value: V | null,\n    color: boolean | null,\n    left: LLRBNode<K, V> | LLRBEmptyNode<K, V> | null,\n    right: LLRBNode<K, V> | LLRBEmptyNode<K, V> | null\n  ): LLRBEmptyNode<K, V> {\n    return this;\n  }\n\n  /**\n   * Returns a copy of the tree, with the specified key/value added.\n   *\n   * @param key - Key to be added.\n   * @param value - Value to be added.\n   * @param comparator - Comparator.\n   * @returns New tree, with item added.\n   */\n  insert(key: K, value: V, comparator: Comparator<K>): LLRBNode<K, V> {\n    return new LLRBNode(key, value, null);\n  }\n\n  /**\n   * Returns a copy of the tree, with the specified key removed.\n   *\n   * @param key - The key to remove.\n   * @param comparator - Comparator.\n   * @returns New tree, with item removed.\n   */\n  remove(key: K, comparator: Comparator<K>): LLRBEmptyNode<K, V> {\n    return this;\n  }\n\n  /**\n   * @returns The total number of nodes in the tree.\n   */\n  count(): number {\n    return 0;\n  }\n\n  /**\n   * @returns True if the tree is empty.\n   */\n  isEmpty(): boolean {\n    return true;\n  }\n\n  /**\n   * Traverses the tree in key order and calls the specified action function\n   * for each node.\n   *\n   * @param action - Callback function to be called for each\n   * node.  If it returns true, traversal is aborted.\n   * @returns True if traversal was aborted.\n   */\n  inorderTraversal(action: (k: K, v: V) => unknown): boolean {\n    return false;\n  }\n\n  /**\n   * Traverses the tree in reverse key order and calls the specified action function\n   * for each node.\n   *\n   * @param action - Callback function to be called for each\n   * node.  If it returns true, traversal is aborted.\n   * @returns True if traversal was aborted.\n   */\n  reverseTraversal(action: (k: K, v: V) => void): boolean {\n    return false;\n  }\n\n  minKey(): null {\n    return null;\n  }\n\n  maxKey(): null {\n    return null;\n  }\n\n  check_(): number {\n    return 0;\n  }\n\n  /**\n   * @returns Whether this node is red.\n   */\n  isRed_() {\n    return false;\n  }\n}\n\n/**\n * An immutable sorted map implementation, based on a Left-leaning Red-Black\n * tree.\n */\nexport class SortedMap<K, V> {\n  /**\n   * Always use the same empty node, to reduce memory.\n   */\n  static EMPTY_NODE = new LLRBEmptyNode();\n\n  /**\n   * @param comparator_ - Key comparator.\n   * @param root_ - Optional root node for the map.\n   */\n  constructor(\n    private comparator_: Comparator<K>,\n    private root_:\n      | LLRBNode<K, V>\n      | LLRBEmptyNode<K, V> = SortedMap.EMPTY_NODE as LLRBEmptyNode<K, V>\n  ) {}\n\n  /**\n   * Returns a copy of the map, with the specified key/value added or replaced.\n   * (TODO: We should perhaps rename this method to 'put')\n   *\n   * @param key - Key to be added.\n   * @param value - Value to be added.\n   * @returns New map, with item added.\n   */\n  insert(key: K, value: V): SortedMap<K, V> {\n    return new SortedMap(\n      this.comparator_,\n      this.root_\n        .insert(key, value, this.comparator_)\n        .copy(null, null, LLRBNode.BLACK, null, null)\n    );\n  }\n\n  /**\n   * Returns a copy of the map, with the specified key removed.\n   *\n   * @param key - The key to remove.\n   * @returns New map, with item removed.\n   */\n  remove(key: K): SortedMap<K, V> {\n    return new SortedMap(\n      this.comparator_,\n      this.root_\n        .remove(key, this.comparator_)\n        .copy(null, null, LLRBNode.BLACK, null, null)\n    );\n  }\n\n  /**\n   * Returns the value of the node with the given key, or null.\n   *\n   * @param key - The key to look up.\n   * @returns The value of the node with the given key, or null if the\n   * key doesn't exist.\n   */\n  get(key: K): V | null {\n    let cmp;\n    let node = this.root_;\n    while (!node.isEmpty()) {\n      cmp = this.comparator_(key, node.key);\n      if (cmp === 0) {\n        return node.value;\n      } else if (cmp < 0) {\n        node = node.left;\n      } else if (cmp > 0) {\n        node = node.right;\n      }\n    }\n    return null;\n  }\n\n  /**\n   * Returns the key of the item *before* the specified key, or null if key is the first item.\n   * @param key - The key to find the predecessor of\n   * @returns The predecessor key.\n   */\n  getPredecessorKey(key: K): K | null {\n    let cmp,\n      node = this.root_,\n      rightParent = null;\n    while (!node.isEmpty()) {\n      cmp = this.comparator_(key, node.key);\n      if (cmp === 0) {\n        if (!node.left.isEmpty()) {\n          node = node.left;\n          while (!node.right.isEmpty()) {\n            node = node.right;\n          }\n          return node.key;\n        } else if (rightParent) {\n          return rightParent.key;\n        } else {\n          return null; // first item.\n        }\n      } else if (cmp < 0) {\n        node = node.left;\n      } else if (cmp > 0) {\n        rightParent = node;\n        node = node.right;\n      }\n    }\n\n    throw new Error(\n      'Attempted to find predecessor key for a nonexistent key.  What gives?'\n    );\n  }\n\n  /**\n   * @returns True if the map is empty.\n   */\n  isEmpty(): boolean {\n    return this.root_.isEmpty();\n  }\n\n  /**\n   * @returns The total number of nodes in the map.\n   */\n  count(): number {\n    return this.root_.count();\n  }\n\n  /**\n   * @returns The minimum key in the map.\n   */\n  minKey(): K | null {\n    return this.root_.minKey();\n  }\n\n  /**\n   * @returns The maximum key in the map.\n   */\n  maxKey(): K | null {\n    return this.root_.maxKey();\n  }\n\n  /**\n   * Traverses the map in key order and calls the specified action function\n   * for each key/value pair.\n   *\n   * @param action - Callback function to be called\n   * for each key/value pair.  If action returns true, traversal is aborted.\n   * @returns The first truthy value returned by action, or the last falsey\n   *   value returned by action\n   */\n  inorderTraversal(action: (k: K, v: V) => unknown): boolean {\n    return this.root_.inorderTraversal(action);\n  }\n\n  /**\n   * Traverses the map in reverse key order and calls the specified action function\n   * for each key/value pair.\n   *\n   * @param action - Callback function to be called\n   * for each key/value pair.  If action returns true, traversal is aborted.\n   * @returns True if the traversal was aborted.\n   */\n  reverseTraversal(action: (k: K, v: V) => void): boolean {\n    return this.root_.reverseTraversal(action);\n  }\n\n  /**\n   * Returns an iterator over the SortedMap.\n   * @returns The iterator.\n   */\n  getIterator<T>(\n    resultGenerator?: (k: K, v: V) => T\n  ): SortedMapIterator<K, V, T> {\n    return new SortedMapIterator(\n      this.root_,\n      null,\n      this.comparator_,\n      false,\n      resultGenerator\n    );\n  }\n\n  getIteratorFrom<T>(\n    key: K,\n    resultGenerator?: (k: K, v: V) => T\n  ): SortedMapIterator<K, V, T> {\n    return new SortedMapIterator(\n      this.root_,\n      key,\n      this.comparator_,\n      false,\n      resultGenerator\n    );\n  }\n\n  getReverseIteratorFrom<T>(\n    key: K,\n    resultGenerator?: (k: K, v: V) => T\n  ): SortedMapIterator<K, V, T> {\n    return new SortedMapIterator(\n      this.root_,\n      key,\n      this.comparator_,\n      true,\n      resultGenerator\n    );\n  }\n\n  getReverseIterator<T>(\n    resultGenerator?: (k: K, v: V) => T\n  ): SortedMapIterator<K, V, T> {\n    return new SortedMapIterator(\n      this.root_,\n      null,\n      this.comparator_,\n      true,\n      resultGenerator\n    );\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { nameCompare } from '../util/util';\n\nimport { NamedNode } from './Node';\n\nexport function NAME_ONLY_COMPARATOR(left: NamedNode, right: NamedNode) {\n  return nameCompare(left.name, right.name);\n}\n\nexport function NAME_COMPARATOR(left: string, right: string) {\n  return nameCompare(left, right);\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, contains } from '@firebase/util';\n\nimport { Indexable } from '../util/misc';\nimport { doubleToIEEE754String } from '../util/util';\n\nimport { Node } from './Node';\n\nlet MAX_NODE: Node;\n\nexport function setMaxNode(val: Node) {\n  MAX_NODE = val;\n}\n\nexport const priorityHashText = function (priority: string | number): string {\n  if (typeof priority === 'number') {\n    return 'number:' + doubleToIEEE754String(priority);\n  } else {\n    return 'string:' + priority;\n  }\n};\n\n/**\n * Validates that a priority snapshot Node is valid.\n */\nexport const validatePriorityNode = function (priorityNode: Node) {\n  if (priorityNode.isLeafNode()) {\n    const val = priorityNode.val();\n    assert(\n      typeof val === 'string' ||\n        typeof val === 'number' ||\n        (typeof val === 'object' && contains(val as Indexable, '.sv')),\n      'Priority must be a string or number.'\n    );\n  } else {\n    assert(\n      priorityNode === MAX_NODE || priorityNode.isEmpty(),\n      'priority of unexpected type.'\n    );\n  }\n  // Don't call getPriority() on MAX_NODE to avoid hitting assertion.\n  assert(\n    priorityNode === MAX_NODE || priorityNode.getPriority().isEmpty(),\n    \"Priority nodes can't have a priority of their own.\"\n  );\n};\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { Indexable } from '../util/misc';\nimport {\n  Path,\n  pathGetFront,\n  pathGetLength,\n  pathIsEmpty,\n  pathPopFront\n} from '../util/Path';\nimport { doubleToIEEE754String, sha1 } from '../util/util';\n\nimport { ChildrenNodeConstructor } from './ChildrenNode';\nimport { Index } from './indexes/Index';\nimport { Node } from './Node';\nimport { priorityHashText, validatePriorityNode } from './snap';\n\nlet __childrenNodeConstructor: ChildrenNodeConstructor;\n\n/**\n * LeafNode is a class for storing leaf nodes in a DataSnapshot.  It\n * implements Node and stores the value of the node (a string,\n * number, or boolean) accessible via getValue().\n */\nexport class LeafNode implements Node {\n  static set __childrenNodeConstructor(val: ChildrenNodeConstructor) {\n    __childrenNodeConstructor = val;\n  }\n\n  static get __childrenNodeConstructor() {\n    return __childrenNodeConstructor;\n  }\n\n  /**\n   * The sort order for comparing leaf nodes of different types. If two leaf nodes have\n   * the same type, the comparison falls back to their value\n   */\n  static VALUE_TYPE_ORDER = ['object', 'boolean', 'number', 'string'];\n\n  private lazyHash_: string | null = null;\n\n  /**\n   * @param value_ - The value to store in this leaf node. The object type is\n   * possible in the event of a deferred value\n   * @param priorityNode_ - The priority of this node.\n   */\n  constructor(\n    private readonly value_: string | number | boolean | Indexable,\n    private priorityNode_: Node = LeafNode.__childrenNodeConstructor.EMPTY_NODE\n  ) {\n    assert(\n      this.value_ !== undefined && this.value_ !== null,\n      \"LeafNode shouldn't be created with null/undefined value.\"\n    );\n\n    validatePriorityNode(this.priorityNode_);\n  }\n\n  /** @inheritDoc */\n  isLeafNode(): boolean {\n    return true;\n  }\n\n  /** @inheritDoc */\n  getPriority(): Node {\n    return this.priorityNode_;\n  }\n\n  /** @inheritDoc */\n  updatePriority(newPriorityNode: Node): Node {\n    return new LeafNode(this.value_, newPriorityNode);\n  }\n\n  /** @inheritDoc */\n  getImmediateChild(childName: string): Node {\n    // Hack to treat priority as a regular child\n    if (childName === '.priority') {\n      return this.priorityNode_;\n    } else {\n      return LeafNode.__childrenNodeConstructor.EMPTY_NODE;\n    }\n  }\n\n  /** @inheritDoc */\n  getChild(path: Path): Node {\n    if (pathIsEmpty(path)) {\n      return this;\n    } else if (pathGetFront(path) === '.priority') {\n      return this.priorityNode_;\n    } else {\n      return LeafNode.__childrenNodeConstructor.EMPTY_NODE;\n    }\n  }\n  hasChild(): boolean {\n    return false;\n  }\n\n  /** @inheritDoc */\n  getPredecessorChildName(childName: string, childNode: Node): null {\n    return null;\n  }\n\n  /** @inheritDoc */\n  updateImmediateChild(childName: string, newChildNode: Node): Node {\n    if (childName === '.priority') {\n      return this.updatePriority(newChildNode);\n    } else if (newChildNode.isEmpty() && childName !== '.priority') {\n      return this;\n    } else {\n      return LeafNode.__childrenNodeConstructor.EMPTY_NODE.updateImmediateChild(\n        childName,\n        newChildNode\n      ).updatePriority(this.priorityNode_);\n    }\n  }\n\n  /** @inheritDoc */\n  updateChild(path: Path, newChildNode: Node): Node {\n    const front = pathGetFront(path);\n    if (front === null) {\n      return newChildNode;\n    } else if (newChildNode.isEmpty() && front !== '.priority') {\n      return this;\n    } else {\n      assert(\n        front !== '.priority' || pathGetLength(path) === 1,\n        '.priority must be the last token in a path'\n      );\n\n      return this.updateImmediateChild(\n        front,\n        LeafNode.__childrenNodeConstructor.EMPTY_NODE.updateChild(\n          pathPopFront(path),\n          newChildNode\n        )\n      );\n    }\n  }\n\n  /** @inheritDoc */\n  isEmpty(): boolean {\n    return false;\n  }\n\n  /** @inheritDoc */\n  numChildren(): number {\n    return 0;\n  }\n\n  /** @inheritDoc */\n  forEachChild(index: Index, action: (s: string, n: Node) => void): boolean {\n    return false;\n  }\n  val(exportFormat?: boolean): {} {\n    if (exportFormat && !this.getPriority().isEmpty()) {\n      return {\n        '.value': this.getValue(),\n        '.priority': this.getPriority().val()\n      };\n    } else {\n      return this.getValue();\n    }\n  }\n\n  /** @inheritDoc */\n  hash(): string {\n    if (this.lazyHash_ === null) {\n      let toHash = '';\n      if (!this.priorityNode_.isEmpty()) {\n        toHash +=\n          'priority:' +\n          priorityHashText(this.priorityNode_.val() as number | string) +\n          ':';\n      }\n\n      const type = typeof this.value_;\n      toHash += type + ':';\n      if (type === 'number') {\n        toHash += doubleToIEEE754String(this.value_ as number);\n      } else {\n        toHash += this.value_;\n      }\n      this.lazyHash_ = sha1(toHash);\n    }\n    return this.lazyHash_;\n  }\n\n  /**\n   * Returns the value of the leaf node.\n   * @returns The value of the node.\n   */\n  getValue(): Indexable | string | number | boolean {\n    return this.value_;\n  }\n  compareTo(other: Node): number {\n    if (other === LeafNode.__childrenNodeConstructor.EMPTY_NODE) {\n      return 1;\n    } else if (other instanceof LeafNode.__childrenNodeConstructor) {\n      return -1;\n    } else {\n      assert(other.isLeafNode(), 'Unknown node type');\n      return this.compareToLeafNode_(other as LeafNode);\n    }\n  }\n\n  /**\n   * Comparison specifically for two leaf nodes\n   */\n  private compareToLeafNode_(otherLeaf: LeafNode): number {\n    const otherLeafType = typeof otherLeaf.value_;\n    const thisLeafType = typeof this.value_;\n    const otherIndex = LeafNode.VALUE_TYPE_ORDER.indexOf(otherLeafType);\n    const thisIndex = LeafNode.VALUE_TYPE_ORDER.indexOf(thisLeafType);\n    assert(otherIndex >= 0, 'Unknown leaf type: ' + otherLeafType);\n    assert(thisIndex >= 0, 'Unknown leaf type: ' + thisLeafType);\n    if (otherIndex === thisIndex) {\n      // Same type, compare values\n      if (thisLeafType === 'object') {\n        // Deferred value nodes are all equal, but we should also never get to this point...\n        return 0;\n      } else {\n        // Note that this works because true > false, all others are number or string comparisons\n        if (this.value_ < otherLeaf.value_) {\n          return -1;\n        } else if (this.value_ === otherLeaf.value_) {\n          return 0;\n        } else {\n          return 1;\n        }\n      }\n    } else {\n      return thisIndex - otherIndex;\n    }\n  }\n  withIndex(): Node {\n    return this;\n  }\n  isIndexed(): boolean {\n    return true;\n  }\n  equals(other: Node): boolean {\n    if (other === this) {\n      return true;\n    } else if (other.isLeafNode()) {\n      const otherLeaf = other as LeafNode;\n      return (\n        this.value_ === otherLeaf.value_ &&\n        this.priorityNode_.equals(otherLeaf.priorityNode_)\n      );\n    } else {\n      return false;\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { nameCompare, MAX_NAME } from '../../util/util';\nimport { LeafNode } from '../LeafNode';\nimport { NamedNode, Node } from '../Node';\n\nimport { Index } from './Index';\n\nlet nodeFromJSON: (a: unknown) => Node;\nlet MAX_NODE: Node;\n\nexport function setNodeFromJSON(val: (a: unknown) => Node) {\n  nodeFromJSON = val;\n}\n\nexport function setMaxNode(val: Node) {\n  MAX_NODE = val;\n}\n\nexport class PriorityIndex extends Index {\n  compare(a: NamedNode, b: NamedNode): number {\n    const aPriority = a.node.getPriority();\n    const bPriority = b.node.getPriority();\n    const indexCmp = aPriority.compareTo(bPriority);\n    if (indexCmp === 0) {\n      return nameCompare(a.name, b.name);\n    } else {\n      return indexCmp;\n    }\n  }\n  isDefinedOn(node: Node): boolean {\n    return !node.getPriority().isEmpty();\n  }\n  indexedValueChanged(oldNode: Node, newNode: Node): boolean {\n    return !oldNode.getPriority().equals(newNode.getPriority());\n  }\n  minPost(): NamedNode {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return (NamedNode as any).MIN;\n  }\n  maxPost(): NamedNode {\n    return new NamedNode(MAX_NAME, new LeafNode('[PRIORITY-POST]', MAX_NODE));\n  }\n\n  makePost(indexValue: unknown, name: string): NamedNode {\n    const priorityNode = nodeFromJSON(indexValue);\n    return new NamedNode(name, new LeafNode('[PRIORITY-POST]', priorityNode));\n  }\n\n  /**\n   * @returns String representation for inclusion in a query spec\n   */\n  toString(): string {\n    return '.priority';\n  }\n}\n\nexport const PRIORITY_INDEX = new PriorityIndex();\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { LLRBNode, SortedMap } from '../util/SortedMap';\n\nimport { NamedNode } from './Node';\n\nconst LOG_2 = Math.log(2);\n\nclass Base12Num {\n  count: number;\n  private current_: number;\n  private bits_: number;\n\n  constructor(length: number) {\n    const logBase2 = (num: number) =>\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      parseInt((Math.log(num) / LOG_2) as any, 10);\n    const bitMask = (bits: number) => parseInt(Array(bits + 1).join('1'), 2);\n    this.count = logBase2(length + 1);\n    this.current_ = this.count - 1;\n    const mask = bitMask(this.count);\n    this.bits_ = (length + 1) & mask;\n  }\n\n  nextBitIsOne(): boolean {\n    //noinspection JSBitwiseOperatorUsage\n    const result = !(this.bits_ & (0x1 << this.current_));\n    this.current_--;\n    return result;\n  }\n}\n\n/**\n * Takes a list of child nodes and constructs a SortedSet using the given comparison\n * function\n *\n * Uses the algorithm described in the paper linked here:\n * http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.46.1458\n *\n * @param childList - Unsorted list of children\n * @param cmp - The comparison method to be used\n * @param keyFn - An optional function to extract K from a node wrapper, if K's\n * type is not NamedNode\n * @param mapSortFn - An optional override for comparator used by the generated sorted map\n */\nexport const buildChildSet = function <K, V>(\n  childList: NamedNode[],\n  cmp: (a: NamedNode, b: NamedNode) => number,\n  keyFn?: (a: NamedNode) => K,\n  mapSortFn?: (a: K, b: K) => number\n): SortedMap<K, V> {\n  childList.sort(cmp);\n\n  const buildBalancedTree = function (\n    low: number,\n    high: number\n  ): LLRBNode<K, V> | null {\n    const length = high - low;\n    let namedNode: NamedNode;\n    let key: K;\n    if (length === 0) {\n      return null;\n    } else if (length === 1) {\n      namedNode = childList[low];\n      key = keyFn ? keyFn(namedNode) : ((namedNode as unknown) as K);\n      return new LLRBNode(\n        key,\n        (namedNode.node as unknown) as V,\n        LLRBNode.BLACK,\n        null,\n        null\n      );\n    } else {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      const middle = parseInt((length / 2) as any, 10) + low;\n      const left = buildBalancedTree(low, middle);\n      const right = buildBalancedTree(middle + 1, high);\n      namedNode = childList[middle];\n      key = keyFn ? keyFn(namedNode) : ((namedNode as unknown) as K);\n      return new LLRBNode(\n        key,\n        (namedNode.node as unknown) as V,\n        LLRBNode.BLACK,\n        left,\n        right\n      );\n    }\n  };\n\n  const buildFrom12Array = function (base12: Base12Num): LLRBNode<K, V> {\n    let node: LLRBNode<K, V> = null;\n    let root = null;\n    let index = childList.length;\n\n    const buildPennant = function (chunkSize: number, color: boolean) {\n      const low = index - chunkSize;\n      const high = index;\n      index -= chunkSize;\n      const childTree = buildBalancedTree(low + 1, high);\n      const namedNode = childList[low];\n      const key: K = keyFn ? keyFn(namedNode) : ((namedNode as unknown) as K);\n      attachPennant(\n        new LLRBNode(\n          key,\n          (namedNode.node as unknown) as V,\n          color,\n          null,\n          childTree\n        )\n      );\n    };\n\n    const attachPennant = function (pennant: LLRBNode<K, V>) {\n      if (node) {\n        node.left = pennant;\n        node = pennant;\n      } else {\n        root = pennant;\n        node = pennant;\n      }\n    };\n\n    for (let i = 0; i < base12.count; ++i) {\n      const isOne = base12.nextBitIsOne();\n      // The number of nodes taken in each slice is 2^(arr.length - (i + 1))\n      const chunkSize = Math.pow(2, base12.count - (i + 1));\n      if (isOne) {\n        buildPennant(chunkSize, LLRBNode.BLACK);\n      } else {\n        // current == 2\n        buildPennant(chunkSize, LLRBNode.BLACK);\n        buildPennant(chunkSize, LLRBNode.RED);\n      }\n    }\n    return root;\n  };\n\n  const base12 = new Base12Num(childList.length);\n  const root = buildFrom12Array(base12);\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  return new SortedMap<K, V>(mapSortFn || (cmp as any), root);\n};\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, contains, map, safeGet } from '@firebase/util';\n\nimport { SortedMap } from '../util/SortedMap';\n\nimport { buildChildSet } from './childSet';\nimport { Index } from './indexes/Index';\nimport { KEY_INDEX } from './indexes/KeyIndex';\nimport { PRIORITY_INDEX } from './indexes/PriorityIndex';\nimport { NamedNode, Node } from './Node';\n\nlet _defaultIndexMap: IndexMap;\n\nconst fallbackObject = {};\n\nexport class IndexMap {\n  /**\n   * The default IndexMap for nodes without a priority\n   */\n  static get Default(): IndexMap {\n    assert(\n      fallbackObject && PRIORITY_INDEX,\n      'ChildrenNode.ts has not been loaded'\n    );\n    _defaultIndexMap =\n      _defaultIndexMap ||\n      new IndexMap(\n        { '.priority': fallbackObject },\n        { '.priority': PRIORITY_INDEX }\n      );\n    return _defaultIndexMap;\n  }\n\n  constructor(\n    private indexes_: {\n      [k: string]: SortedMap<NamedNode, Node> | /*FallbackType*/ object;\n    },\n    private indexSet_: { [k: string]: Index }\n  ) {}\n\n  get(indexKey: string): SortedMap<NamedNode, Node> | null {\n    const sortedMap = safeGet(this.indexes_, indexKey);\n    if (!sortedMap) {\n      throw new Error('No index defined for ' + indexKey);\n    }\n\n    if (sortedMap instanceof SortedMap) {\n      return sortedMap;\n    } else {\n      // The index exists, but it falls back to just name comparison. Return null so that the calling code uses the\n      // regular child map\n      return null;\n    }\n  }\n\n  hasIndex(indexDefinition: Index): boolean {\n    return contains(this.indexSet_, indexDefinition.toString());\n  }\n\n  addIndex(\n    indexDefinition: Index,\n    existingChildren: SortedMap<string, Node>\n  ): IndexMap {\n    assert(\n      indexDefinition !== KEY_INDEX,\n      \"KeyIndex always exists and isn't meant to be added to the IndexMap.\"\n    );\n    const childList = [];\n    let sawIndexedValue = false;\n    const iter = existingChildren.getIterator(NamedNode.Wrap);\n    let next = iter.getNext();\n    while (next) {\n      sawIndexedValue =\n        sawIndexedValue || indexDefinition.isDefinedOn(next.node);\n      childList.push(next);\n      next = iter.getNext();\n    }\n    let newIndex;\n    if (sawIndexedValue) {\n      newIndex = buildChildSet(childList, indexDefinition.getCompare());\n    } else {\n      newIndex = fallbackObject;\n    }\n    const indexName = indexDefinition.toString();\n    const newIndexSet = { ...this.indexSet_ };\n    newIndexSet[indexName] = indexDefinition;\n    const newIndexes = { ...this.indexes_ };\n    newIndexes[indexName] = newIndex;\n    return new IndexMap(newIndexes, newIndexSet);\n  }\n\n  /**\n   * Ensure that this node is properly tracked in any indexes that we're maintaining\n   */\n  addToIndexes(\n    namedNode: NamedNode,\n    existingChildren: SortedMap<string, Node>\n  ): IndexMap {\n    const newIndexes = map(\n      this.indexes_,\n      (indexedChildren: SortedMap<NamedNode, Node>, indexName: string) => {\n        const index = safeGet(this.indexSet_, indexName);\n        assert(index, 'Missing index implementation for ' + indexName);\n        if (indexedChildren === fallbackObject) {\n          // Check to see if we need to index everything\n          if (index.isDefinedOn(namedNode.node)) {\n            // We need to build this index\n            const childList = [];\n            const iter = existingChildren.getIterator(NamedNode.Wrap);\n            let next = iter.getNext();\n            while (next) {\n              if (next.name !== namedNode.name) {\n                childList.push(next);\n              }\n              next = iter.getNext();\n            }\n            childList.push(namedNode);\n            return buildChildSet(childList, index.getCompare());\n          } else {\n            // No change, this remains a fallback\n            return fallbackObject;\n          }\n        } else {\n          const existingSnap = existingChildren.get(namedNode.name);\n          let newChildren = indexedChildren;\n          if (existingSnap) {\n            newChildren = newChildren.remove(\n              new NamedNode(namedNode.name, existingSnap)\n            );\n          }\n          return newChildren.insert(namedNode, namedNode.node);\n        }\n      }\n    );\n    return new IndexMap(newIndexes, this.indexSet_);\n  }\n\n  /**\n   * Create a new IndexMap instance with the given value removed\n   */\n  removeFromIndexes(\n    namedNode: NamedNode,\n    existingChildren: SortedMap<string, Node>\n  ): IndexMap {\n    const newIndexes = map(\n      this.indexes_,\n      (indexedChildren: SortedMap<NamedNode, Node>) => {\n        if (indexedChildren === fallbackObject) {\n          // This is the fallback. Just return it, nothing to do in this case\n          return indexedChildren;\n        } else {\n          const existingSnap = existingChildren.get(namedNode.name);\n          if (existingSnap) {\n            return indexedChildren.remove(\n              new NamedNode(namedNode.name, existingSnap)\n            );\n          } else {\n            // No record of this child\n            return indexedChildren;\n          }\n        }\n      }\n    );\n    return new IndexMap(newIndexes, this.indexSet_);\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { Path, pathGetFront, pathGetLength, pathPopFront } from '../util/Path';\nimport { SortedMap, SortedMapIterator } from '../util/SortedMap';\nimport { MAX_NAME, MIN_NAME, sha1 } from '../util/util';\n\nimport { NAME_COMPARATOR } from './comparators';\nimport { Index } from './indexes/Index';\nimport { KEY_INDEX, KeyIndex } from './indexes/KeyIndex';\nimport {\n  PRIORITY_INDEX,\n  setMaxNode as setPriorityMaxNode\n} from './indexes/PriorityIndex';\nimport { IndexMap } from './IndexMap';\nimport { LeafNode } from './LeafNode';\nimport { NamedNode, Node } from './Node';\nimport { priorityHashText, setMaxNode, validatePriorityNode } from './snap';\n\nexport interface ChildrenNodeConstructor {\n  new (\n    children_: SortedMap<string, Node>,\n    priorityNode_: Node | null,\n    indexMap_: IndexMap\n  ): ChildrenNode;\n  EMPTY_NODE: ChildrenNode;\n}\n\n// TODO: For memory savings, don't store priorityNode_ if it's empty.\n\nlet EMPTY_NODE: ChildrenNode;\n\n/**\n * ChildrenNode is a class for storing internal nodes in a DataSnapshot\n * (i.e. nodes with children).  It implements Node and stores the\n * list of children in the children property, sorted by child name.\n */\nexport class ChildrenNode implements Node {\n  private lazyHash_: string | null = null;\n\n  static get EMPTY_NODE(): ChildrenNode {\n    return (\n      EMPTY_NODE ||\n      (EMPTY_NODE = new ChildrenNode(\n        new SortedMap<string, Node>(NAME_COMPARATOR),\n        null,\n        IndexMap.Default\n      ))\n    );\n  }\n\n  /**\n   * @param children_ - List of children of this node..\n   * @param priorityNode_ - The priority of this node (as a snapshot node).\n   */\n  constructor(\n    private readonly children_: SortedMap<string, Node>,\n    private readonly priorityNode_: Node | null,\n    private indexMap_: IndexMap\n  ) {\n    /**\n     * Note: The only reason we allow null priority is for EMPTY_NODE, since we can't use\n     * EMPTY_NODE as the priority of EMPTY_NODE.  We might want to consider making EMPTY_NODE its own\n     * class instead of an empty ChildrenNode.\n     */\n    if (this.priorityNode_) {\n      validatePriorityNode(this.priorityNode_);\n    }\n\n    if (this.children_.isEmpty()) {\n      assert(\n        !this.priorityNode_ || this.priorityNode_.isEmpty(),\n        'An empty node cannot have a priority'\n      );\n    }\n  }\n\n  /** @inheritDoc */\n  isLeafNode(): boolean {\n    return false;\n  }\n\n  /** @inheritDoc */\n  getPriority(): Node {\n    return this.priorityNode_ || EMPTY_NODE;\n  }\n\n  /** @inheritDoc */\n  updatePriority(newPriorityNode: Node): Node {\n    if (this.children_.isEmpty()) {\n      // Don't allow priorities on empty nodes\n      return this;\n    } else {\n      return new ChildrenNode(this.children_, newPriorityNode, this.indexMap_);\n    }\n  }\n\n  /** @inheritDoc */\n  getImmediateChild(childName: string): Node {\n    // Hack to treat priority as a regular child\n    if (childName === '.priority') {\n      return this.getPriority();\n    } else {\n      const child = this.children_.get(childName);\n      return child === null ? EMPTY_NODE : child;\n    }\n  }\n\n  /** @inheritDoc */\n  getChild(path: Path): Node {\n    const front = pathGetFront(path);\n    if (front === null) {\n      return this;\n    }\n\n    return this.getImmediateChild(front).getChild(pathPopFront(path));\n  }\n\n  /** @inheritDoc */\n  hasChild(childName: string): boolean {\n    return this.children_.get(childName) !== null;\n  }\n\n  /** @inheritDoc */\n  updateImmediateChild(childName: string, newChildNode: Node): Node {\n    assert(newChildNode, 'We should always be passing snapshot nodes');\n    if (childName === '.priority') {\n      return this.updatePriority(newChildNode);\n    } else {\n      const namedNode = new NamedNode(childName, newChildNode);\n      let newChildren, newIndexMap;\n      if (newChildNode.isEmpty()) {\n        newChildren = this.children_.remove(childName);\n        newIndexMap = this.indexMap_.removeFromIndexes(\n          namedNode,\n          this.children_\n        );\n      } else {\n        newChildren = this.children_.insert(childName, newChildNode);\n        newIndexMap = this.indexMap_.addToIndexes(namedNode, this.children_);\n      }\n\n      const newPriority = newChildren.isEmpty()\n        ? EMPTY_NODE\n        : this.priorityNode_;\n      return new ChildrenNode(newChildren, newPriority, newIndexMap);\n    }\n  }\n\n  /** @inheritDoc */\n  updateChild(path: Path, newChildNode: Node): Node {\n    const front = pathGetFront(path);\n    if (front === null) {\n      return newChildNode;\n    } else {\n      assert(\n        pathGetFront(path) !== '.priority' || pathGetLength(path) === 1,\n        '.priority must be the last token in a path'\n      );\n      const newImmediateChild = this.getImmediateChild(front).updateChild(\n        pathPopFront(path),\n        newChildNode\n      );\n      return this.updateImmediateChild(front, newImmediateChild);\n    }\n  }\n\n  /** @inheritDoc */\n  isEmpty(): boolean {\n    return this.children_.isEmpty();\n  }\n\n  /** @inheritDoc */\n  numChildren(): number {\n    return this.children_.count();\n  }\n\n  private static INTEGER_REGEXP_ = /^(0|[1-9]\\d*)$/;\n\n  /** @inheritDoc */\n  val(exportFormat?: boolean): object {\n    if (this.isEmpty()) {\n      return null;\n    }\n\n    const obj: { [k: string]: unknown } = {};\n    let numKeys = 0,\n      maxKey = 0,\n      allIntegerKeys = true;\n    this.forEachChild(PRIORITY_INDEX, (key: string, childNode: Node) => {\n      obj[key] = childNode.val(exportFormat);\n\n      numKeys++;\n      if (allIntegerKeys && ChildrenNode.INTEGER_REGEXP_.test(key)) {\n        maxKey = Math.max(maxKey, Number(key));\n      } else {\n        allIntegerKeys = false;\n      }\n    });\n\n    if (!exportFormat && allIntegerKeys && maxKey < 2 * numKeys) {\n      // convert to array.\n      const array: unknown[] = [];\n      // eslint-disable-next-line guard-for-in\n      for (const key in obj) {\n        array[(key as unknown) as number] = obj[key];\n      }\n\n      return array;\n    } else {\n      if (exportFormat && !this.getPriority().isEmpty()) {\n        obj['.priority'] = this.getPriority().val();\n      }\n      return obj;\n    }\n  }\n\n  /** @inheritDoc */\n  hash(): string {\n    if (this.lazyHash_ === null) {\n      let toHash = '';\n      if (!this.getPriority().isEmpty()) {\n        toHash +=\n          'priority:' +\n          priorityHashText(this.getPriority().val() as string | number) +\n          ':';\n      }\n\n      this.forEachChild(PRIORITY_INDEX, (key, childNode) => {\n        const childHash = childNode.hash();\n        if (childHash !== '') {\n          toHash += ':' + key + ':' + childHash;\n        }\n      });\n\n      this.lazyHash_ = toHash === '' ? '' : sha1(toHash);\n    }\n    return this.lazyHash_;\n  }\n\n  /** @inheritDoc */\n  getPredecessorChildName(\n    childName: string,\n    childNode: Node,\n    index: Index\n  ): string {\n    const idx = this.resolveIndex_(index);\n    if (idx) {\n      const predecessor = idx.getPredecessorKey(\n        new NamedNode(childName, childNode)\n      );\n      return predecessor ? predecessor.name : null;\n    } else {\n      return this.children_.getPredecessorKey(childName);\n    }\n  }\n\n  getFirstChildName(indexDefinition: Index): string | null {\n    const idx = this.resolveIndex_(indexDefinition);\n    if (idx) {\n      const minKey = idx.minKey();\n      return minKey && minKey.name;\n    } else {\n      return this.children_.minKey();\n    }\n  }\n\n  getFirstChild(indexDefinition: Index): NamedNode | null {\n    const minKey = this.getFirstChildName(indexDefinition);\n    if (minKey) {\n      return new NamedNode(minKey, this.children_.get(minKey));\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * Given an index, return the key name of the largest value we have, according to that index\n   */\n  getLastChildName(indexDefinition: Index): string | null {\n    const idx = this.resolveIndex_(indexDefinition);\n    if (idx) {\n      const maxKey = idx.maxKey();\n      return maxKey && maxKey.name;\n    } else {\n      return this.children_.maxKey();\n    }\n  }\n\n  getLastChild(indexDefinition: Index): NamedNode | null {\n    const maxKey = this.getLastChildName(indexDefinition);\n    if (maxKey) {\n      return new NamedNode(maxKey, this.children_.get(maxKey));\n    } else {\n      return null;\n    }\n  }\n  forEachChild(\n    index: Index,\n    action: (key: string, node: Node) => boolean | void\n  ): boolean {\n    const idx = this.resolveIndex_(index);\n    if (idx) {\n      return idx.inorderTraversal(wrappedNode => {\n        return action(wrappedNode.name, wrappedNode.node);\n      });\n    } else {\n      return this.children_.inorderTraversal(action);\n    }\n  }\n\n  getIterator(\n    indexDefinition: Index\n  ): SortedMapIterator<string | NamedNode, Node, NamedNode> {\n    return this.getIteratorFrom(indexDefinition.minPost(), indexDefinition);\n  }\n\n  getIteratorFrom(\n    startPost: NamedNode,\n    indexDefinition: Index\n  ): SortedMapIterator<string | NamedNode, Node, NamedNode> {\n    const idx = this.resolveIndex_(indexDefinition);\n    if (idx) {\n      return idx.getIteratorFrom(startPost, key => key);\n    } else {\n      const iterator = this.children_.getIteratorFrom(\n        startPost.name,\n        NamedNode.Wrap\n      );\n      let next = iterator.peek();\n      while (next != null && indexDefinition.compare(next, startPost) < 0) {\n        iterator.getNext();\n        next = iterator.peek();\n      }\n      return iterator;\n    }\n  }\n\n  getReverseIterator(\n    indexDefinition: Index\n  ): SortedMapIterator<string | NamedNode, Node, NamedNode> {\n    return this.getReverseIteratorFrom(\n      indexDefinition.maxPost(),\n      indexDefinition\n    );\n  }\n\n  getReverseIteratorFrom(\n    endPost: NamedNode,\n    indexDefinition: Index\n  ): SortedMapIterator<string | NamedNode, Node, NamedNode> {\n    const idx = this.resolveIndex_(indexDefinition);\n    if (idx) {\n      return idx.getReverseIteratorFrom(endPost, key => {\n        return key;\n      });\n    } else {\n      const iterator = this.children_.getReverseIteratorFrom(\n        endPost.name,\n        NamedNode.Wrap\n      );\n      let next = iterator.peek();\n      while (next != null && indexDefinition.compare(next, endPost) > 0) {\n        iterator.getNext();\n        next = iterator.peek();\n      }\n      return iterator;\n    }\n  }\n  compareTo(other: ChildrenNode): number {\n    if (this.isEmpty()) {\n      if (other.isEmpty()) {\n        return 0;\n      } else {\n        return -1;\n      }\n    } else if (other.isLeafNode() || other.isEmpty()) {\n      return 1;\n    } else if (other === MAX_NODE) {\n      return -1;\n    } else {\n      // Must be another node with children.\n      return 0;\n    }\n  }\n  withIndex(indexDefinition: Index): Node {\n    if (\n      indexDefinition === KEY_INDEX ||\n      this.indexMap_.hasIndex(indexDefinition)\n    ) {\n      return this;\n    } else {\n      const newIndexMap = this.indexMap_.addIndex(\n        indexDefinition,\n        this.children_\n      );\n      return new ChildrenNode(this.children_, this.priorityNode_, newIndexMap);\n    }\n  }\n  isIndexed(index: Index): boolean {\n    return index === KEY_INDEX || this.indexMap_.hasIndex(index);\n  }\n  equals(other: Node): boolean {\n    if (other === this) {\n      return true;\n    } else if (other.isLeafNode()) {\n      return false;\n    } else {\n      const otherChildrenNode = other as ChildrenNode;\n      if (!this.getPriority().equals(otherChildrenNode.getPriority())) {\n        return false;\n      } else if (\n        this.children_.count() === otherChildrenNode.children_.count()\n      ) {\n        const thisIter = this.getIterator(PRIORITY_INDEX);\n        const otherIter = otherChildrenNode.getIterator(PRIORITY_INDEX);\n        let thisCurrent = thisIter.getNext();\n        let otherCurrent = otherIter.getNext();\n        while (thisCurrent && otherCurrent) {\n          if (\n            thisCurrent.name !== otherCurrent.name ||\n            !thisCurrent.node.equals(otherCurrent.node)\n          ) {\n            return false;\n          }\n          thisCurrent = thisIter.getNext();\n          otherCurrent = otherIter.getNext();\n        }\n        return thisCurrent === null && otherCurrent === null;\n      } else {\n        return false;\n      }\n    }\n  }\n\n  /**\n   * Returns a SortedMap ordered by index, or null if the default (by-key) ordering can be used\n   * instead.\n   *\n   */\n  private resolveIndex_(\n    indexDefinition: Index\n  ): SortedMap<NamedNode, Node> | null {\n    if (indexDefinition === KEY_INDEX) {\n      return null;\n    } else {\n      return this.indexMap_.get(indexDefinition.toString());\n    }\n  }\n}\n\nexport class MaxNode extends ChildrenNode {\n  constructor() {\n    super(\n      new SortedMap<string, Node>(NAME_COMPARATOR),\n      ChildrenNode.EMPTY_NODE,\n      IndexMap.Default\n    );\n  }\n\n  compareTo(other: Node): number {\n    if (other === this) {\n      return 0;\n    } else {\n      return 1;\n    }\n  }\n\n  equals(other: Node): boolean {\n    // Not that we every compare it, but MAX_NODE is only ever equal to itself\n    return other === this;\n  }\n\n  getPriority(): MaxNode {\n    return this;\n  }\n\n  getImmediateChild(childName: string): ChildrenNode {\n    return ChildrenNode.EMPTY_NODE;\n  }\n\n  isEmpty(): boolean {\n    return false;\n  }\n}\n\n/**\n * Marker that will sort higher than any other snapshot.\n */\nexport const MAX_NODE = new MaxNode();\n\n/**\n * Document NamedNode extensions\n */\ndeclare module './Node' {\n  interface NamedNode {\n    MIN: NamedNode;\n    MAX: NamedNode;\n  }\n}\n\nObject.defineProperties(NamedNode, {\n  MIN: {\n    value: new NamedNode(MIN_NAME, ChildrenNode.EMPTY_NODE)\n  },\n  MAX: {\n    value: new NamedNode(MAX_NAME, MAX_NODE)\n  }\n});\n\n/**\n * Reference Extensions\n */\nKeyIndex.__EMPTY_NODE = ChildrenNode.EMPTY_NODE;\nLeafNode.__childrenNodeConstructor = ChildrenNode;\nsetMaxNode(MAX_NODE);\nsetPriorityMaxNode(MAX_NODE);\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { contains, assert } from '@firebase/util';\n\nimport { Indexable } from '../util/misc';\nimport { SortedMap } from '../util/SortedMap';\nimport { each } from '../util/util';\n\nimport { ChildrenNode } from './ChildrenNode';\nimport { buildChildSet } from './childSet';\nimport { NAME_COMPARATOR, NAME_ONLY_COMPARATOR } from './comparators';\nimport { PRIORITY_INDEX, setNodeFromJSON } from './indexes/PriorityIndex';\nimport { IndexMap } from './IndexMap';\nimport { LeafNode } from './LeafNode';\nimport { NamedNode, Node } from './Node';\n\nconst USE_HINZE = true;\n\n/**\n * Constructs a snapshot node representing the passed JSON and returns it.\n * @param json - JSON to create a node for.\n * @param priority - Optional priority to use.  This will be ignored if the\n * passed JSON contains a .priority property.\n */\nexport function nodeFromJSON(\n  json: unknown | null,\n  priority: unknown = null\n): Node {\n  if (json === null) {\n    return ChildrenNode.EMPTY_NODE;\n  }\n\n  if (typeof json === 'object' && '.priority' in json) {\n    priority = json['.priority'];\n  }\n\n  assert(\n    priority === null ||\n      typeof priority === 'string' ||\n      typeof priority === 'number' ||\n      (typeof priority === 'object' && '.sv' in (priority as object)),\n    'Invalid priority type found: ' + typeof priority\n  );\n\n  if (typeof json === 'object' && '.value' in json && json['.value'] !== null) {\n    json = json['.value'];\n  }\n\n  // Valid leaf nodes include non-objects or server-value wrapper objects\n  if (typeof json !== 'object' || '.sv' in json) {\n    const jsonLeaf = json as string | number | boolean | Indexable;\n    return new LeafNode(jsonLeaf, nodeFromJSON(priority));\n  }\n\n  if (!(json instanceof Array) && USE_HINZE) {\n    const children: NamedNode[] = [];\n    let childrenHavePriority = false;\n    const hinzeJsonObj = json;\n    each(hinzeJsonObj, (key, child) => {\n      if (key.substring(0, 1) !== '.') {\n        // Ignore metadata nodes\n        const childNode = nodeFromJSON(child);\n        if (!childNode.isEmpty()) {\n          childrenHavePriority =\n            childrenHavePriority || !childNode.getPriority().isEmpty();\n          children.push(new NamedNode(key, childNode));\n        }\n      }\n    });\n\n    if (children.length === 0) {\n      return ChildrenNode.EMPTY_NODE;\n    }\n\n    const childSet = buildChildSet(\n      children,\n      NAME_ONLY_COMPARATOR,\n      namedNode => namedNode.name,\n      NAME_COMPARATOR\n    ) as SortedMap<string, Node>;\n    if (childrenHavePriority) {\n      const sortedChildSet = buildChildSet(\n        children,\n        PRIORITY_INDEX.getCompare()\n      );\n      return new ChildrenNode(\n        childSet,\n        nodeFromJSON(priority),\n        new IndexMap(\n          { '.priority': sortedChildSet },\n          { '.priority': PRIORITY_INDEX }\n        )\n      );\n    } else {\n      return new ChildrenNode(\n        childSet,\n        nodeFromJSON(priority),\n        IndexMap.Default\n      );\n    }\n  } else {\n    let node: Node = ChildrenNode.EMPTY_NODE;\n    each(json, (key: string, childData: unknown) => {\n      if (contains(json as object, key)) {\n        if (key.substring(0, 1) !== '.') {\n          // ignore metadata nodes.\n          const childNode = nodeFromJSON(childData);\n          if (childNode.isLeafNode() || !childNode.isEmpty()) {\n            node = node.updateImmediateChild(key, childNode);\n          }\n        }\n      }\n    });\n\n    return node.updatePriority(nodeFromJSON(priority));\n  }\n}\n\nsetNodeFromJSON(nodeFromJSON);\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { Path, pathGetFront, pathIsEmpty, pathSlice } from '../../util/Path';\nimport { MAX_NAME, nameCompare } from '../../util/util';\nimport { ChildrenNode, MAX_NODE } from '../ChildrenNode';\nimport { NamedNode, Node } from '../Node';\nimport { nodeFromJSON } from '../nodeFromJSON';\n\nimport { Index } from './Index';\n\nexport class PathIndex extends Index {\n  constructor(private indexPath_: Path) {\n    super();\n\n    assert(\n      !pathIsEmpty(indexPath_) && pathGetFront(indexPath_) !== '.priority',\n      \"Can't create PathIndex with empty path or .priority key\"\n    );\n  }\n\n  protected extractChild(snap: Node): Node {\n    return snap.getChild(this.indexPath_);\n  }\n  isDefinedOn(node: Node): boolean {\n    return !node.getChild(this.indexPath_).isEmpty();\n  }\n  compare(a: NamedNode, b: NamedNode): number {\n    const aChild = this.extractChild(a.node);\n    const bChild = this.extractChild(b.node);\n    const indexCmp = aChild.compareTo(bChild);\n    if (indexCmp === 0) {\n      return nameCompare(a.name, b.name);\n    } else {\n      return indexCmp;\n    }\n  }\n  makePost(indexValue: object, name: string): NamedNode {\n    const valueNode = nodeFromJSON(indexValue);\n    const node = ChildrenNode.EMPTY_NODE.updateChild(\n      this.indexPath_,\n      valueNode\n    );\n    return new NamedNode(name, node);\n  }\n  maxPost(): NamedNode {\n    const node = ChildrenNode.EMPTY_NODE.updateChild(this.indexPath_, MAX_NODE);\n    return new NamedNode(MAX_NAME, node);\n  }\n  toString(): string {\n    return pathSlice(this.indexPath_, 0).join('/');\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { nameCompare } from '../../util/util';\nimport { NamedNode, Node } from '../Node';\nimport { nodeFromJSON } from '../nodeFromJSON';\n\nimport { Index } from './Index';\n\nexport class ValueIndex extends Index {\n  compare(a: NamedNode, b: NamedNode): number {\n    const indexCmp = a.node.compareTo(b.node);\n    if (indexCmp === 0) {\n      return nameCompare(a.name, b.name);\n    } else {\n      return indexCmp;\n    }\n  }\n  isDefinedOn(node: Node): boolean {\n    return true;\n  }\n  indexedValueChanged(oldNode: Node, newNode: Node): boolean {\n    return !oldNode.equals(newNode);\n  }\n  minPost(): NamedNode {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return (NamedNode as any).MIN;\n  }\n  maxPost(): NamedNode {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return (NamedNode as any).MAX;\n  }\n\n  makePost(indexValue: object, name: string): NamedNode {\n    const valueNode = nodeFromJSON(indexValue);\n    return new NamedNode(name, valueNode);\n  }\n\n  /**\n   * @returns String representation for inclusion in a query spec\n   */\n  toString(): string {\n    return '.value';\n  }\n}\n\nexport const VALUE_INDEX = new ValueIndex();\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport {\n  tryParseInt,\n  MAX_NAME,\n  MIN_NAME,\n  INTEGER_32_MIN,\n  INTEGER_32_MAX\n} from '../util/util';\n\n// Modeled after base64 web-safe chars, but ordered by ASCII.\nconst PUSH_CHARS =\n  '-0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ_abcdefghijklmnopqrstuvwxyz';\n\nconst MIN_PUSH_CHAR = '-';\n\nconst MAX_PUSH_CHAR = 'z';\n\nconst MAX_KEY_LEN = 786;\n\n/**\n * Fancy ID generator that creates 20-character string identifiers with the\n * following properties:\n *\n * 1. They're based on timestamp so that they sort *after* any existing ids.\n * 2. They contain 72-bits of random data after the timestamp so that IDs won't\n *    collide with other clients' IDs.\n * 3. They sort *lexicographically* (so the timestamp is converted to characters\n *    that will sort properly).\n * 4. They're monotonically increasing. Even if you generate more than one in\n *    the same timestamp, the latter ones will sort after the former ones. We do\n *    this by using the previous random bits but \"incrementing\" them by 1 (only\n *    in the case of a timestamp collision).\n */\nexport const nextPushId = (function () {\n  // Timestamp of last push, used to prevent local collisions if you push twice\n  // in one ms.\n  let lastPushTime = 0;\n\n  // We generate 72-bits of randomness which get turned into 12 characters and\n  // appended to the timestamp to prevent collisions with other clients. We\n  // store the last characters we generated because in the event of a collision,\n  // we'll use those same characters except \"incremented\" by one.\n  const lastRandChars: number[] = [];\n\n  return function (now: number) {\n    const duplicateTime = now === lastPushTime;\n    lastPushTime = now;\n\n    let i;\n    const timeStampChars = new Array(8);\n    for (i = 7; i >= 0; i--) {\n      timeStampChars[i] = PUSH_CHARS.charAt(now % 64);\n      // NOTE: Can't use << here because javascript will convert to int and lose\n      // the upper bits.\n      now = Math.floor(now / 64);\n    }\n    assert(now === 0, 'Cannot push at time == 0');\n\n    let id = timeStampChars.join('');\n\n    if (!duplicateTime) {\n      for (i = 0; i < 12; i++) {\n        lastRandChars[i] = Math.floor(Math.random() * 64);\n      }\n    } else {\n      // If the timestamp hasn't changed since last push, use the same random\n      // number, except incremented by 1.\n      for (i = 11; i >= 0 && lastRandChars[i] === 63; i--) {\n        lastRandChars[i] = 0;\n      }\n      lastRandChars[i]++;\n    }\n    for (i = 0; i < 12; i++) {\n      id += PUSH_CHARS.charAt(lastRandChars[i]);\n    }\n    assert(id.length === 20, 'nextPushId: Length should be 20.');\n\n    return id;\n  };\n})();\n\nexport const successor = function (key: string) {\n  if (key === '' + INTEGER_32_MAX) {\n    // See https://firebase.google.com/docs/database/web/lists-of-data#data-order\n    return MIN_PUSH_CHAR;\n  }\n  const keyAsInt: number = tryParseInt(key);\n  if (keyAsInt != null) {\n    return '' + (keyAsInt + 1);\n  }\n  const next = new Array(key.length);\n\n  for (let i = 0; i < next.length; i++) {\n    next[i] = key.charAt(i);\n  }\n\n  if (next.length < MAX_KEY_LEN) {\n    next.push(MIN_PUSH_CHAR);\n    return next.join('');\n  }\n\n  let i = next.length - 1;\n\n  while (i >= 0 && next[i] === MAX_PUSH_CHAR) {\n    i--;\n  }\n\n  // `successor` was called on the largest possible key, so return the\n  // MAX_NAME, which sorts larger than all keys.\n  if (i === -1) {\n    return MAX_NAME;\n  }\n\n  const source = next[i];\n  const sourcePlusOne = PUSH_CHARS.charAt(PUSH_CHARS.indexOf(source) + 1);\n  next[i] = sourcePlusOne;\n\n  return next.slice(0, i + 1).join('');\n};\n\n// `key` is assumed to be non-empty.\nexport const predecessor = function (key: string) {\n  if (key === '' + INTEGER_32_MIN) {\n    return MIN_NAME;\n  }\n  const keyAsInt: number = tryParseInt(key);\n  if (keyAsInt != null) {\n    return '' + (keyAsInt - 1);\n  }\n  const next = new Array(key.length);\n  for (let i = 0; i < next.length; i++) {\n    next[i] = key.charAt(i);\n  }\n  // If `key` ends in `MIN_PUSH_CHAR`, the largest key lexicographically\n  // smaller than `key`, is `key[0:key.length - 1]`. The next key smaller\n  // than that, `predecessor(predecessor(key))`, is\n  //\n  // `key[0:key.length - 2] + (key[key.length - 1] - 1) + \\\n  //   { MAX_PUSH_CHAR repeated MAX_KEY_LEN - (key.length - 1) times }\n  //\n  // analogous to increment/decrement for base-10 integers.\n  //\n  // This works because lexigographic comparison works character-by-character,\n  // using length as a tie-breaker if one key is a prefix of the other.\n  if (next[next.length - 1] === MIN_PUSH_CHAR) {\n    if (next.length === 1) {\n      // See https://firebase.google.com/docs/database/web/lists-of-data#orderbykey\n      return '' + INTEGER_32_MAX;\n    }\n    delete next[next.length - 1];\n    return next.join('');\n  }\n  // Replace the last character with it's immediate predecessor, and\n  // fill the suffix of the key with MAX_PUSH_CHAR. This is the\n  // lexicographically largest possible key smaller than `key`.\n  next[next.length - 1] = PUSH_CHARS.charAt(\n    PUSH_CHARS.indexOf(next[next.length - 1]) - 1\n  );\n  return next.join('') + MAX_PUSH_CHAR.repeat(MAX_KEY_LEN - next.length);\n};\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Node } from '../snap/Node';\n\nexport const enum ChangeType {\n  /** Event type for a child added */\n  CHILD_ADDED = 'child_added',\n  /** Event type for a child removed */\n  CHILD_REMOVED = 'child_removed',\n  /** Event type for a child changed */\n  CHILD_CHANGED = 'child_changed',\n  /** Event type for a child moved */\n  CHILD_MOVED = 'child_moved',\n  /** Event type for a value change */\n  VALUE = 'value'\n}\n\nexport interface Change {\n  /** @param type - The event type */\n  type: ChangeType;\n  /** @param snapshotNode - The data */\n  snapshotNode: Node;\n  /** @param childName - The name for this child, if it's a child even */\n  childName?: string;\n  /** @param oldSnap - Used for intermediate processing of child changed events */\n  oldSnap?: Node;\n  /**  * @param prevName - The name for the previous child, if applicable */\n  prevName?: string | null;\n}\n\nexport function changeValue(snapshotNode: Node): Change {\n  return { type: ChangeType.VALUE, snapshotNode };\n}\n\nexport function changeChildAdded(\n  childName: string,\n  snapshotNode: Node\n): Change {\n  return { type: ChangeType.CHILD_ADDED, snapshotNode, childName };\n}\n\nexport function changeChildRemoved(\n  childName: string,\n  snapshotNode: Node\n): Change {\n  return { type: ChangeType.CHILD_REMOVED, snapshotNode, childName };\n}\n\nexport function changeChildChanged(\n  childName: string,\n  snapshotNode: Node,\n  oldSnap: Node\n): Change {\n  return {\n    type: ChangeType.CHILD_CHANGED,\n    snapshotNode,\n    childName,\n    oldSnap\n  };\n}\n\nexport function changeChildMoved(\n  childName: string,\n  snapshotNode: Node\n): Change {\n  return { type: ChangeType.CHILD_MOVED, snapshotNode, childName };\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { ChildrenNode } from '../../snap/ChildrenNode';\nimport { Index } from '../../snap/indexes/Index';\nimport { PRIORITY_INDEX } from '../../snap/indexes/PriorityIndex';\nimport { Node } from '../../snap/Node';\nimport { Path } from '../../util/Path';\nimport {\n  changeChildAdded,\n  changeChildChanged,\n  changeChildRemoved\n} from '../Change';\nimport { ChildChangeAccumulator } from '../ChildChangeAccumulator';\nimport { CompleteChildSource } from '../CompleteChildSource';\n\nimport { NodeFilter } from './NodeFilter';\n\n/**\n * Doesn't really filter nodes but applies an index to the node and keeps track of any changes\n */\nexport class IndexedFilter implements NodeFilter {\n  constructor(private readonly index_: Index) {}\n\n  updateChild(\n    snap: Node,\n    key: string,\n    newChild: Node,\n    affectedPath: Path,\n    source: CompleteChildSource,\n    optChangeAccumulator: ChildChangeAccumulator | null\n  ): Node {\n    assert(\n      snap.isIndexed(this.index_),\n      'A node must be indexed if only a child is updated'\n    );\n    const oldChild = snap.getImmediateChild(key);\n    // Check if anything actually changed.\n    if (\n      oldChild.getChild(affectedPath).equals(newChild.getChild(affectedPath))\n    ) {\n      // There's an edge case where a child can enter or leave the view because affectedPath was set to null.\n      // In this case, affectedPath will appear null in both the old and new snapshots.  So we need\n      // to avoid treating these cases as \"nothing changed.\"\n      if (oldChild.isEmpty() === newChild.isEmpty()) {\n        // Nothing changed.\n\n        // This assert should be valid, but it's expensive (can dominate perf testing) so don't actually do it.\n        //assert(oldChild.equals(newChild), 'Old and new snapshots should be equal.');\n        return snap;\n      }\n    }\n\n    if (optChangeAccumulator != null) {\n      if (newChild.isEmpty()) {\n        if (snap.hasChild(key)) {\n          optChangeAccumulator.trackChildChange(\n            changeChildRemoved(key, oldChild)\n          );\n        } else {\n          assert(\n            snap.isLeafNode(),\n            'A child remove without an old child only makes sense on a leaf node'\n          );\n        }\n      } else if (oldChild.isEmpty()) {\n        optChangeAccumulator.trackChildChange(changeChildAdded(key, newChild));\n      } else {\n        optChangeAccumulator.trackChildChange(\n          changeChildChanged(key, newChild, oldChild)\n        );\n      }\n    }\n    if (snap.isLeafNode() && newChild.isEmpty()) {\n      return snap;\n    } else {\n      // Make sure the node is indexed\n      return snap.updateImmediateChild(key, newChild).withIndex(this.index_);\n    }\n  }\n  updateFullNode(\n    oldSnap: Node,\n    newSnap: Node,\n    optChangeAccumulator: ChildChangeAccumulator | null\n  ): Node {\n    if (optChangeAccumulator != null) {\n      if (!oldSnap.isLeafNode()) {\n        oldSnap.forEachChild(PRIORITY_INDEX, (key, childNode) => {\n          if (!newSnap.hasChild(key)) {\n            optChangeAccumulator.trackChildChange(\n              changeChildRemoved(key, childNode)\n            );\n          }\n        });\n      }\n      if (!newSnap.isLeafNode()) {\n        newSnap.forEachChild(PRIORITY_INDEX, (key, childNode) => {\n          if (oldSnap.hasChild(key)) {\n            const oldChild = oldSnap.getImmediateChild(key);\n            if (!oldChild.equals(childNode)) {\n              optChangeAccumulator.trackChildChange(\n                changeChildChanged(key, childNode, oldChild)\n              );\n            }\n          } else {\n            optChangeAccumulator.trackChildChange(\n              changeChildAdded(key, childNode)\n            );\n          }\n        });\n      }\n    }\n    return newSnap.withIndex(this.index_);\n  }\n  updatePriority(oldSnap: Node, newPriority: Node): Node {\n    if (oldSnap.isEmpty()) {\n      return ChildrenNode.EMPTY_NODE;\n    } else {\n      return oldSnap.updatePriority(newPriority);\n    }\n  }\n  filtersNodes(): boolean {\n    return false;\n  }\n  getIndexedFilter(): IndexedFilter {\n    return this;\n  }\n  getIndex(): Index {\n    return this.index_;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { NamedNode, Node } from '../../../core/snap/Node';\nimport { ChildrenNode } from '../../snap/ChildrenNode';\nimport { Index } from '../../snap/indexes/Index';\nimport { PRIORITY_INDEX } from '../../snap/indexes/PriorityIndex';\nimport { Path } from '../../util/Path';\nimport { ChildChangeAccumulator } from '../ChildChangeAccumulator';\nimport { CompleteChildSource } from '../CompleteChildSource';\nimport { QueryParams } from '../QueryParams';\n\nimport { IndexedFilter } from './IndexedFilter';\nimport { NodeFilter } from './NodeFilter';\n\n/**\n * Filters nodes by range and uses an IndexFilter to track any changes after filtering the node\n */\nexport class RangedFilter implements NodeFilter {\n  private indexedFilter_: IndexedFilter;\n\n  private index_: Index;\n\n  private startPost_: NamedNode;\n\n  private endPost_: NamedNode;\n\n  constructor(params: QueryParams) {\n    this.indexedFilter_ = new IndexedFilter(params.getIndex());\n    this.index_ = params.getIndex();\n    this.startPost_ = RangedFilter.getStartPost_(params);\n    this.endPost_ = RangedFilter.getEndPost_(params);\n  }\n\n  getStartPost(): NamedNode {\n    return this.startPost_;\n  }\n\n  getEndPost(): NamedNode {\n    return this.endPost_;\n  }\n\n  matches(node: NamedNode): boolean {\n    return (\n      this.index_.compare(this.getStartPost(), node) <= 0 &&\n      this.index_.compare(node, this.getEndPost()) <= 0\n    );\n  }\n  updateChild(\n    snap: Node,\n    key: string,\n    newChild: Node,\n    affectedPath: Path,\n    source: CompleteChildSource,\n    optChangeAccumulator: ChildChangeAccumulator | null\n  ): Node {\n    if (!this.matches(new NamedNode(key, newChild))) {\n      newChild = ChildrenNode.EMPTY_NODE;\n    }\n    return this.indexedFilter_.updateChild(\n      snap,\n      key,\n      newChild,\n      affectedPath,\n      source,\n      optChangeAccumulator\n    );\n  }\n  updateFullNode(\n    oldSnap: Node,\n    newSnap: Node,\n    optChangeAccumulator: ChildChangeAccumulator | null\n  ): Node {\n    if (newSnap.isLeafNode()) {\n      // Make sure we have a children node with the correct index, not a leaf node;\n      newSnap = ChildrenNode.EMPTY_NODE;\n    }\n    let filtered = newSnap.withIndex(this.index_);\n    // Don't support priorities on queries\n    filtered = filtered.updatePriority(ChildrenNode.EMPTY_NODE);\n    const self = this;\n    newSnap.forEachChild(PRIORITY_INDEX, (key, childNode) => {\n      if (!self.matches(new NamedNode(key, childNode))) {\n        filtered = filtered.updateImmediateChild(key, ChildrenNode.EMPTY_NODE);\n      }\n    });\n    return this.indexedFilter_.updateFullNode(\n      oldSnap,\n      filtered,\n      optChangeAccumulator\n    );\n  }\n  updatePriority(oldSnap: Node, newPriority: Node): Node {\n    // Don't support priorities on queries\n    return oldSnap;\n  }\n  filtersNodes(): boolean {\n    return true;\n  }\n  getIndexedFilter(): IndexedFilter {\n    return this.indexedFilter_;\n  }\n  getIndex(): Index {\n    return this.index_;\n  }\n\n  private static getStartPost_(params: QueryParams): NamedNode {\n    if (params.hasStart()) {\n      const startName = params.getIndexStartName();\n      return params.getIndex().makePost(params.getIndexStartValue(), startName);\n    } else {\n      return params.getIndex().minPost();\n    }\n  }\n\n  private static getEndPost_(params: QueryParams): NamedNode {\n    if (params.hasEnd()) {\n      const endName = params.getIndexEndName();\n      return params.getIndex().makePost(params.getIndexEndValue(), endName);\n    } else {\n      return params.getIndex().maxPost();\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { ChildrenNode } from '../../snap/ChildrenNode';\nimport { Index } from '../../snap/indexes/Index';\nimport { NamedNode, Node } from '../../snap/Node';\nimport { Path } from '../../util/Path';\nimport {\n  changeChildAdded,\n  changeChildChanged,\n  changeChildRemoved\n} from '../Change';\nimport { ChildChangeAccumulator } from '../ChildChangeAccumulator';\nimport { CompleteChildSource } from '../CompleteChildSource';\nimport { QueryParams } from '../QueryParams';\n\nimport { IndexedFilter } from './IndexedFilter';\nimport { NodeFilter } from './NodeFilter';\nimport { RangedFilter } from './RangedFilter';\n\n/**\n * Applies a limit and a range to a node and uses RangedFilter to do the heavy lifting where possible\n */\nexport class LimitedFilter implements NodeFilter {\n  private readonly rangedFilter_: RangedFilter;\n\n  private readonly index_: Index;\n\n  private readonly limit_: number;\n\n  private readonly reverse_: boolean;\n\n  constructor(params: QueryParams) {\n    this.rangedFilter_ = new RangedFilter(params);\n    this.index_ = params.getIndex();\n    this.limit_ = params.getLimit();\n    this.reverse_ = !params.isViewFromLeft();\n  }\n  updateChild(\n    snap: Node,\n    key: string,\n    newChild: Node,\n    affectedPath: Path,\n    source: CompleteChildSource,\n    optChangeAccumulator: ChildChangeAccumulator | null\n  ): Node {\n    if (!this.rangedFilter_.matches(new NamedNode(key, newChild))) {\n      newChild = ChildrenNode.EMPTY_NODE;\n    }\n    if (snap.getImmediateChild(key).equals(newChild)) {\n      // No change\n      return snap;\n    } else if (snap.numChildren() < this.limit_) {\n      return this.rangedFilter_\n        .getIndexedFilter()\n        .updateChild(\n          snap,\n          key,\n          newChild,\n          affectedPath,\n          source,\n          optChangeAccumulator\n        );\n    } else {\n      return this.fullLimitUpdateChild_(\n        snap,\n        key,\n        newChild,\n        source,\n        optChangeAccumulator\n      );\n    }\n  }\n  updateFullNode(\n    oldSnap: Node,\n    newSnap: Node,\n    optChangeAccumulator: ChildChangeAccumulator | null\n  ): Node {\n    let filtered;\n    if (newSnap.isLeafNode() || newSnap.isEmpty()) {\n      // Make sure we have a children node with the correct index, not a leaf node;\n      filtered = ChildrenNode.EMPTY_NODE.withIndex(this.index_);\n    } else {\n      if (\n        this.limit_ * 2 < newSnap.numChildren() &&\n        newSnap.isIndexed(this.index_)\n      ) {\n        // Easier to build up a snapshot, since what we're given has more than twice the elements we want\n        filtered = ChildrenNode.EMPTY_NODE.withIndex(this.index_);\n        // anchor to the startPost, endPost, or last element as appropriate\n        let iterator;\n        if (this.reverse_) {\n          iterator = (newSnap as ChildrenNode).getReverseIteratorFrom(\n            this.rangedFilter_.getEndPost(),\n            this.index_\n          );\n        } else {\n          iterator = (newSnap as ChildrenNode).getIteratorFrom(\n            this.rangedFilter_.getStartPost(),\n            this.index_\n          );\n        }\n        let count = 0;\n        while (iterator.hasNext() && count < this.limit_) {\n          const next = iterator.getNext();\n          let inRange;\n          if (this.reverse_) {\n            inRange =\n              this.index_.compare(this.rangedFilter_.getStartPost(), next) <= 0;\n          } else {\n            inRange =\n              this.index_.compare(next, this.rangedFilter_.getEndPost()) <= 0;\n          }\n          if (inRange) {\n            filtered = filtered.updateImmediateChild(next.name, next.node);\n            count++;\n          } else {\n            // if we have reached the end post, we cannot keep adding elemments\n            break;\n          }\n        }\n      } else {\n        // The snap contains less than twice the limit. Faster to delete from the snap than build up a new one\n        filtered = newSnap.withIndex(this.index_);\n        // Don't support priorities on queries\n        filtered = filtered.updatePriority(\n          ChildrenNode.EMPTY_NODE\n        ) as ChildrenNode;\n        let startPost;\n        let endPost;\n        let cmp;\n        let iterator;\n        if (this.reverse_) {\n          iterator = filtered.getReverseIterator(this.index_);\n          startPost = this.rangedFilter_.getEndPost();\n          endPost = this.rangedFilter_.getStartPost();\n          const indexCompare = this.index_.getCompare();\n          cmp = (a: NamedNode, b: NamedNode) => indexCompare(b, a);\n        } else {\n          iterator = filtered.getIterator(this.index_);\n          startPost = this.rangedFilter_.getStartPost();\n          endPost = this.rangedFilter_.getEndPost();\n          cmp = this.index_.getCompare();\n        }\n\n        let count = 0;\n        let foundStartPost = false;\n        while (iterator.hasNext()) {\n          const next = iterator.getNext();\n          if (!foundStartPost && cmp(startPost, next) <= 0) {\n            // start adding\n            foundStartPost = true;\n          }\n          const inRange =\n            foundStartPost && count < this.limit_ && cmp(next, endPost) <= 0;\n          if (inRange) {\n            count++;\n          } else {\n            filtered = filtered.updateImmediateChild(\n              next.name,\n              ChildrenNode.EMPTY_NODE\n            );\n          }\n        }\n      }\n    }\n    return this.rangedFilter_\n      .getIndexedFilter()\n      .updateFullNode(oldSnap, filtered, optChangeAccumulator);\n  }\n  updatePriority(oldSnap: Node, newPriority: Node): Node {\n    // Don't support priorities on queries\n    return oldSnap;\n  }\n  filtersNodes(): boolean {\n    return true;\n  }\n  getIndexedFilter(): IndexedFilter {\n    return this.rangedFilter_.getIndexedFilter();\n  }\n  getIndex(): Index {\n    return this.index_;\n  }\n\n  private fullLimitUpdateChild_(\n    snap: Node,\n    childKey: string,\n    childSnap: Node,\n    source: CompleteChildSource,\n    changeAccumulator: ChildChangeAccumulator | null\n  ): Node {\n    // TODO: rename all cache stuff etc to general snap terminology\n    let cmp;\n    if (this.reverse_) {\n      const indexCmp = this.index_.getCompare();\n      cmp = (a: NamedNode, b: NamedNode) => indexCmp(b, a);\n    } else {\n      cmp = this.index_.getCompare();\n    }\n    const oldEventCache = snap as ChildrenNode;\n    assert(oldEventCache.numChildren() === this.limit_, '');\n    const newChildNamedNode = new NamedNode(childKey, childSnap);\n    const windowBoundary = this.reverse_\n      ? oldEventCache.getFirstChild(this.index_)\n      : (oldEventCache.getLastChild(this.index_) as NamedNode);\n    const inRange = this.rangedFilter_.matches(newChildNamedNode);\n    if (oldEventCache.hasChild(childKey)) {\n      const oldChildSnap = oldEventCache.getImmediateChild(childKey);\n      let nextChild = source.getChildAfterChild(\n        this.index_,\n        windowBoundary,\n        this.reverse_\n      );\n      while (\n        nextChild != null &&\n        (nextChild.name === childKey || oldEventCache.hasChild(nextChild.name))\n      ) {\n        // There is a weird edge case where a node is updated as part of a merge in the write tree, but hasn't\n        // been applied to the limited filter yet. Ignore this next child which will be updated later in\n        // the limited filter...\n        nextChild = source.getChildAfterChild(\n          this.index_,\n          nextChild,\n          this.reverse_\n        );\n      }\n      const compareNext =\n        nextChild == null ? 1 : cmp(nextChild, newChildNamedNode);\n      const remainsInWindow =\n        inRange && !childSnap.isEmpty() && compareNext >= 0;\n      if (remainsInWindow) {\n        if (changeAccumulator != null) {\n          changeAccumulator.trackChildChange(\n            changeChildChanged(childKey, childSnap, oldChildSnap)\n          );\n        }\n        return oldEventCache.updateImmediateChild(childKey, childSnap);\n      } else {\n        if (changeAccumulator != null) {\n          changeAccumulator.trackChildChange(\n            changeChildRemoved(childKey, oldChildSnap)\n          );\n        }\n        const newEventCache = oldEventCache.updateImmediateChild(\n          childKey,\n          ChildrenNode.EMPTY_NODE\n        );\n        const nextChildInRange =\n          nextChild != null && this.rangedFilter_.matches(nextChild);\n        if (nextChildInRange) {\n          if (changeAccumulator != null) {\n            changeAccumulator.trackChildChange(\n              changeChildAdded(nextChild.name, nextChild.node)\n            );\n          }\n          return newEventCache.updateImmediateChild(\n            nextChild.name,\n            nextChild.node\n          );\n        } else {\n          return newEventCache;\n        }\n      }\n    } else if (childSnap.isEmpty()) {\n      // we're deleting a node, but it was not in the window, so ignore it\n      return snap;\n    } else if (inRange) {\n      if (cmp(windowBoundary, newChildNamedNode) >= 0) {\n        if (changeAccumulator != null) {\n          changeAccumulator.trackChildChange(\n            changeChildRemoved(windowBoundary.name, windowBoundary.node)\n          );\n          changeAccumulator.trackChildChange(\n            changeChildAdded(childKey, childSnap)\n          );\n        }\n        return oldEventCache\n          .updateImmediateChild(childKey, childSnap)\n          .updateImmediateChild(windowBoundary.name, ChildrenNode.EMPTY_NODE);\n      } else {\n        return snap;\n      }\n    } else {\n      return snap;\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, stringify } from '@firebase/util';\n\nimport { Index } from '../snap/indexes/Index';\nimport { KEY_INDEX } from '../snap/indexes/KeyIndex';\nimport { PathIndex } from '../snap/indexes/PathIndex';\nimport { PRIORITY_INDEX, PriorityIndex } from '../snap/indexes/PriorityIndex';\nimport { VALUE_INDEX } from '../snap/indexes/ValueIndex';\nimport { predecessor, successor } from '../util/NextPushId';\nimport { MAX_NAME, MIN_NAME } from '../util/util';\n\nimport { IndexedFilter } from './filter/IndexedFilter';\nimport { LimitedFilter } from './filter/LimitedFilter';\nimport { NodeFilter } from './filter/NodeFilter';\nimport { RangedFilter } from './filter/RangedFilter';\n\n/**\n * Wire Protocol Constants\n */\nconst enum WIRE_PROTOCOL_CONSTANTS {\n  INDEX_START_VALUE = 'sp',\n  INDEX_START_NAME = 'sn',\n  INDEX_END_VALUE = 'ep',\n  INDEX_END_NAME = 'en',\n  LIMIT = 'l',\n  VIEW_FROM = 'vf',\n  VIEW_FROM_LEFT = 'l',\n  VIEW_FROM_RIGHT = 'r',\n  INDEX = 'i'\n}\n\n/**\n * REST Query Constants\n */\nconst enum REST_QUERY_CONSTANTS {\n  ORDER_BY = 'orderBy',\n  PRIORITY_INDEX = '$priority',\n  VALUE_INDEX = '$value',\n  KEY_INDEX = '$key',\n  START_AT = 'startAt',\n  END_AT = 'endAt',\n  LIMIT_TO_FIRST = 'limitToFirst',\n  LIMIT_TO_LAST = 'limitToLast'\n}\n\n/**\n * This class is an immutable-from-the-public-api struct containing a set of query parameters defining a\n * range to be returned for a particular location. It is assumed that validation of parameters is done at the\n * user-facing API level, so it is not done here.\n */\nexport class QueryParams {\n  limitSet_ = false;\n  startSet_ = false;\n  startNameSet_ = false;\n  startAfterSet_ = false;\n  endSet_ = false;\n  endNameSet_ = false;\n  endBeforeSet_ = false;\n  limit_ = 0;\n  viewFrom_ = '';\n  indexStartValue_: unknown | null = null;\n  indexStartName_ = '';\n  indexEndValue_: unknown | null = null;\n  indexEndName_ = '';\n  index_: PriorityIndex = PRIORITY_INDEX;\n\n  hasStart(): boolean {\n    return this.startSet_;\n  }\n\n  hasStartAfter(): boolean {\n    return this.startAfterSet_;\n  }\n\n  hasEndBefore(): boolean {\n    return this.endBeforeSet_;\n  }\n\n  /**\n   * @returns True if it would return from left.\n   */\n  isViewFromLeft(): boolean {\n    if (this.viewFrom_ === '') {\n      // limit(), rather than limitToFirst or limitToLast was called.\n      // This means that only one of startSet_ and endSet_ is true. Use them\n      // to calculate which side of the view to anchor to. If neither is set,\n      // anchor to the end.\n      return this.startSet_;\n    } else {\n      return this.viewFrom_ === WIRE_PROTOCOL_CONSTANTS.VIEW_FROM_LEFT;\n    }\n  }\n\n  /**\n   * Only valid to call if hasStart() returns true\n   */\n  getIndexStartValue(): unknown {\n    assert(this.startSet_, 'Only valid if start has been set');\n    return this.indexStartValue_;\n  }\n\n  /**\n   * Only valid to call if hasStart() returns true.\n   * Returns the starting key name for the range defined by these query parameters\n   */\n  getIndexStartName(): string {\n    assert(this.startSet_, 'Only valid if start has been set');\n    if (this.startNameSet_) {\n      return this.indexStartName_;\n    } else {\n      return MIN_NAME;\n    }\n  }\n\n  hasEnd(): boolean {\n    return this.endSet_;\n  }\n\n  /**\n   * Only valid to call if hasEnd() returns true.\n   */\n  getIndexEndValue(): unknown {\n    assert(this.endSet_, 'Only valid if end has been set');\n    return this.indexEndValue_;\n  }\n\n  /**\n   * Only valid to call if hasEnd() returns true.\n   * Returns the end key name for the range defined by these query parameters\n   */\n  getIndexEndName(): string {\n    assert(this.endSet_, 'Only valid if end has been set');\n    if (this.endNameSet_) {\n      return this.indexEndName_;\n    } else {\n      return MAX_NAME;\n    }\n  }\n\n  hasLimit(): boolean {\n    return this.limitSet_;\n  }\n\n  /**\n   * @returns True if a limit has been set and it has been explicitly anchored\n   */\n  hasAnchoredLimit(): boolean {\n    return this.limitSet_ && this.viewFrom_ !== '';\n  }\n\n  /**\n   * Only valid to call if hasLimit() returns true\n   */\n  getLimit(): number {\n    assert(this.limitSet_, 'Only valid if limit has been set');\n    return this.limit_;\n  }\n\n  getIndex(): Index {\n    return this.index_;\n  }\n\n  loadsAllData(): boolean {\n    return !(this.startSet_ || this.endSet_ || this.limitSet_);\n  }\n\n  isDefault(): boolean {\n    return this.loadsAllData() && this.index_ === PRIORITY_INDEX;\n  }\n\n  copy(): QueryParams {\n    const copy = new QueryParams();\n    copy.limitSet_ = this.limitSet_;\n    copy.limit_ = this.limit_;\n    copy.startSet_ = this.startSet_;\n    copy.indexStartValue_ = this.indexStartValue_;\n    copy.startNameSet_ = this.startNameSet_;\n    copy.indexStartName_ = this.indexStartName_;\n    copy.endSet_ = this.endSet_;\n    copy.indexEndValue_ = this.indexEndValue_;\n    copy.endNameSet_ = this.endNameSet_;\n    copy.indexEndName_ = this.indexEndName_;\n    copy.index_ = this.index_;\n    copy.viewFrom_ = this.viewFrom_;\n    return copy;\n  }\n}\n\nexport function queryParamsGetNodeFilter(queryParams: QueryParams): NodeFilter {\n  if (queryParams.loadsAllData()) {\n    return new IndexedFilter(queryParams.getIndex());\n  } else if (queryParams.hasLimit()) {\n    return new LimitedFilter(queryParams);\n  } else {\n    return new RangedFilter(queryParams);\n  }\n}\n\nexport function queryParamsLimit(\n  queryParams: QueryParams,\n  newLimit: number\n): QueryParams {\n  const newParams = queryParams.copy();\n  newParams.limitSet_ = true;\n  newParams.limit_ = newLimit;\n  newParams.viewFrom_ = '';\n  return newParams;\n}\n\nexport function queryParamsLimitToFirst(\n  queryParams: QueryParams,\n  newLimit: number\n): QueryParams {\n  const newParams = queryParams.copy();\n  newParams.limitSet_ = true;\n  newParams.limit_ = newLimit;\n  newParams.viewFrom_ = WIRE_PROTOCOL_CONSTANTS.VIEW_FROM_LEFT;\n  return newParams;\n}\n\nexport function queryParamsLimitToLast(\n  queryParams: QueryParams,\n  newLimit: number\n): QueryParams {\n  const newParams = queryParams.copy();\n  newParams.limitSet_ = true;\n  newParams.limit_ = newLimit;\n  newParams.viewFrom_ = WIRE_PROTOCOL_CONSTANTS.VIEW_FROM_RIGHT;\n  return newParams;\n}\n\nexport function queryParamsStartAt(\n  queryParams: QueryParams,\n  indexValue: unknown,\n  key?: string | null\n): QueryParams {\n  const newParams = queryParams.copy();\n  newParams.startSet_ = true;\n  if (indexValue === undefined) {\n    indexValue = null;\n  }\n  newParams.indexStartValue_ = indexValue;\n  if (key != null) {\n    newParams.startNameSet_ = true;\n    newParams.indexStartName_ = key;\n  } else {\n    newParams.startNameSet_ = false;\n    newParams.indexStartName_ = '';\n  }\n  return newParams;\n}\n\nexport function queryParamsStartAfter(\n  queryParams: QueryParams,\n  indexValue: unknown,\n  key?: string | null\n): QueryParams {\n  let params: QueryParams;\n  if (queryParams.index_ === KEY_INDEX) {\n    if (typeof indexValue === 'string') {\n      indexValue = successor(indexValue as string);\n    }\n    params = queryParamsStartAt(queryParams, indexValue, key);\n  } else {\n    let childKey: string;\n    if (key == null) {\n      childKey = MAX_NAME;\n    } else {\n      childKey = successor(key);\n    }\n    params = queryParamsStartAt(queryParams, indexValue, childKey);\n  }\n  params.startAfterSet_ = true;\n  return params;\n}\n\nexport function queryParamsEndAt(\n  queryParams: QueryParams,\n  indexValue: unknown,\n  key?: string | null\n): QueryParams {\n  const newParams = queryParams.copy();\n  newParams.endSet_ = true;\n  if (indexValue === undefined) {\n    indexValue = null;\n  }\n  newParams.indexEndValue_ = indexValue;\n  if (key !== undefined) {\n    newParams.endNameSet_ = true;\n    newParams.indexEndName_ = key;\n  } else {\n    newParams.endNameSet_ = false;\n    newParams.indexEndName_ = '';\n  }\n  return newParams;\n}\n\nexport function queryParamsEndBefore(\n  queryParams: QueryParams,\n  indexValue: unknown,\n  key?: string | null\n): QueryParams {\n  let childKey: string;\n  let params: QueryParams;\n  if (queryParams.index_ === KEY_INDEX) {\n    if (typeof indexValue === 'string') {\n      indexValue = predecessor(indexValue as string);\n    }\n    params = queryParamsEndAt(queryParams, indexValue, key);\n  } else {\n    if (key == null) {\n      childKey = MIN_NAME;\n    } else {\n      childKey = predecessor(key);\n    }\n    params = queryParamsEndAt(queryParams, indexValue, childKey);\n  }\n  params.endBeforeSet_ = true;\n  return params;\n}\n\nexport function queryParamsOrderBy(\n  queryParams: QueryParams,\n  index: Index\n): QueryParams {\n  const newParams = queryParams.copy();\n  newParams.index_ = index;\n  return newParams;\n}\n\n/**\n * Returns a set of REST query string parameters representing this query.\n *\n * @returns query string parameters\n */\nexport function queryParamsToRestQueryStringParameters(\n  queryParams: QueryParams\n): Record<string, string | number> {\n  const qs: Record<string, string | number> = {};\n\n  if (queryParams.isDefault()) {\n    return qs;\n  }\n\n  let orderBy;\n  if (queryParams.index_ === PRIORITY_INDEX) {\n    orderBy = REST_QUERY_CONSTANTS.PRIORITY_INDEX;\n  } else if (queryParams.index_ === VALUE_INDEX) {\n    orderBy = REST_QUERY_CONSTANTS.VALUE_INDEX;\n  } else if (queryParams.index_ === KEY_INDEX) {\n    orderBy = REST_QUERY_CONSTANTS.KEY_INDEX;\n  } else {\n    assert(queryParams.index_ instanceof PathIndex, 'Unrecognized index type!');\n    orderBy = queryParams.index_.toString();\n  }\n  qs[REST_QUERY_CONSTANTS.ORDER_BY] = stringify(orderBy);\n\n  if (queryParams.startSet_) {\n    qs[REST_QUERY_CONSTANTS.START_AT] = stringify(queryParams.indexStartValue_);\n    if (queryParams.startNameSet_) {\n      qs[REST_QUERY_CONSTANTS.START_AT] +=\n        ',' + stringify(queryParams.indexStartName_);\n    }\n  }\n\n  if (queryParams.endSet_) {\n    qs[REST_QUERY_CONSTANTS.END_AT] = stringify(queryParams.indexEndValue_);\n    if (queryParams.endNameSet_) {\n      qs[REST_QUERY_CONSTANTS.END_AT] +=\n        ',' + stringify(queryParams.indexEndName_);\n    }\n  }\n\n  if (queryParams.limitSet_) {\n    if (queryParams.isViewFromLeft()) {\n      qs[REST_QUERY_CONSTANTS.LIMIT_TO_FIRST] = queryParams.limit_;\n    } else {\n      qs[REST_QUERY_CONSTANTS.LIMIT_TO_LAST] = queryParams.limit_;\n    }\n  }\n\n  return qs;\n}\n\nexport function queryParamsGetQueryObject(\n  queryParams: QueryParams\n): Record<string, unknown> {\n  const obj: Record<string, unknown> = {};\n  if (queryParams.startSet_) {\n    obj[WIRE_PROTOCOL_CONSTANTS.INDEX_START_VALUE] =\n      queryParams.indexStartValue_;\n    if (queryParams.startNameSet_) {\n      obj[WIRE_PROTOCOL_CONSTANTS.INDEX_START_NAME] =\n        queryParams.indexStartName_;\n    }\n  }\n  if (queryParams.endSet_) {\n    obj[WIRE_PROTOCOL_CONSTANTS.INDEX_END_VALUE] = queryParams.indexEndValue_;\n    if (queryParams.endNameSet_) {\n      obj[WIRE_PROTOCOL_CONSTANTS.INDEX_END_NAME] = queryParams.indexEndName_;\n    }\n  }\n  if (queryParams.limitSet_) {\n    obj[WIRE_PROTOCOL_CONSTANTS.LIMIT] = queryParams.limit_;\n    let viewFrom = queryParams.viewFrom_;\n    if (viewFrom === '') {\n      if (queryParams.isViewFromLeft()) {\n        viewFrom = WIRE_PROTOCOL_CONSTANTS.VIEW_FROM_LEFT;\n      } else {\n        viewFrom = WIRE_PROTOCOL_CONSTANTS.VIEW_FROM_RIGHT;\n      }\n    }\n    obj[WIRE_PROTOCOL_CONSTANTS.VIEW_FROM] = viewFrom;\n  }\n  // For now, priority index is the default, so we only specify if it's some other index\n  if (queryParams.index_ !== PRIORITY_INDEX) {\n    obj[WIRE_PROTOCOL_CONSTANTS.INDEX] = queryParams.index_.toString();\n  }\n  return obj;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  assert,\n  jsonEval,\n  safeGet,\n  querystring,\n  Deferred\n} from '@firebase/util';\n\nimport { AppCheckTokenProvider } from './AppCheckTokenProvider';\nimport { AuthTokenProvider } from './AuthTokenProvider';\nimport { RepoInfo } from './RepoInfo';\nimport { ServerActions } from './ServerActions';\nimport { logWrapper, warn } from './util/util';\nimport { QueryContext } from './view/EventRegistration';\nimport { queryParamsToRestQueryStringParameters } from './view/QueryParams';\n\n/**\n * An implementation of ServerActions that communicates with the server via REST requests.\n * This is mostly useful for compatibility with crawlers, where we don't want to spin up a full\n * persistent connection (using WebSockets or long-polling)\n */\nexport class ReadonlyRestClient extends ServerActions {\n  reportStats(stats: { [k: string]: unknown }): void {\n    throw new Error('Method not implemented.');\n  }\n\n  /** @private {function(...[*])} */\n  private log_: (...args: unknown[]) => void = logWrapper('p:rest:');\n\n  /**\n   * We don't actually need to track listens, except to prevent us calling an onComplete for a listen\n   * that's been removed. :-/\n   */\n  private listens_: { [k: string]: object } = {};\n\n  static getListenId_(query: QueryContext, tag?: number | null): string {\n    if (tag !== undefined) {\n      return 'tag$' + tag;\n    } else {\n      assert(\n        query._queryParams.isDefault(),\n        \"should have a tag if it's not a default query.\"\n      );\n      return query._path.toString();\n    }\n  }\n\n  /**\n   * @param repoInfo_ - Data about the namespace we are connecting to\n   * @param onDataUpdate_ - A callback for new data from the server\n   */\n  constructor(\n    private repoInfo_: RepoInfo,\n    private onDataUpdate_: (\n      a: string,\n      b: unknown,\n      c: boolean,\n      d: number | null\n    ) => void,\n    private authTokenProvider_: AuthTokenProvider,\n    private appCheckTokenProvider_: AppCheckTokenProvider\n  ) {\n    super();\n  }\n\n  /** @inheritDoc */\n  listen(\n    query: QueryContext,\n    currentHashFn: () => string,\n    tag: number | null,\n    onComplete: (a: string, b: unknown) => void\n  ) {\n    const pathString = query._path.toString();\n    this.log_('Listen called for ' + pathString + ' ' + query._queryIdentifier);\n\n    // Mark this listener so we can tell if it's removed.\n    const listenId = ReadonlyRestClient.getListenId_(query, tag);\n    const thisListen = {};\n    this.listens_[listenId] = thisListen;\n\n    const queryStringParameters = queryParamsToRestQueryStringParameters(\n      query._queryParams\n    );\n\n    this.restRequest_(\n      pathString + '.json',\n      queryStringParameters,\n      (error, result) => {\n        let data = result;\n\n        if (error === 404) {\n          data = null;\n          error = null;\n        }\n\n        if (error === null) {\n          this.onDataUpdate_(pathString, data, /*isMerge=*/ false, tag);\n        }\n\n        if (safeGet(this.listens_, listenId) === thisListen) {\n          let status;\n          if (!error) {\n            status = 'ok';\n          } else if (error === 401) {\n            status = 'permission_denied';\n          } else {\n            status = 'rest_error:' + error;\n          }\n\n          onComplete(status, null);\n        }\n      }\n    );\n  }\n\n  /** @inheritDoc */\n  unlisten(query: QueryContext, tag: number | null) {\n    const listenId = ReadonlyRestClient.getListenId_(query, tag);\n    delete this.listens_[listenId];\n  }\n\n  get(query: QueryContext): Promise<string> {\n    const queryStringParameters = queryParamsToRestQueryStringParameters(\n      query._queryParams\n    );\n\n    const pathString = query._path.toString();\n\n    const deferred = new Deferred<string>();\n\n    this.restRequest_(\n      pathString + '.json',\n      queryStringParameters,\n      (error, result) => {\n        let data = result;\n\n        if (error === 404) {\n          data = null;\n          error = null;\n        }\n\n        if (error === null) {\n          this.onDataUpdate_(\n            pathString,\n            data,\n            /*isMerge=*/ false,\n            /*tag=*/ null\n          );\n          deferred.resolve(data as string);\n        } else {\n          deferred.reject(new Error(data as string));\n        }\n      }\n    );\n    return deferred.promise;\n  }\n\n  /** @inheritDoc */\n  refreshAuthToken(token: string) {\n    // no-op since we just always call getToken.\n  }\n\n  /**\n   * Performs a REST request to the given path, with the provided query string parameters,\n   * and any auth credentials we have.\n   */\n  private restRequest_(\n    pathString: string,\n    queryStringParameters: { [k: string]: string | number } = {},\n    callback: ((a: number | null, b?: unknown) => void) | null\n  ) {\n    queryStringParameters['format'] = 'export';\n\n    return Promise.all([\n      this.authTokenProvider_.getToken(/*forceRefresh=*/ false),\n      this.appCheckTokenProvider_.getToken(/*forceRefresh=*/ false)\n    ]).then(([authToken, appCheckToken]) => {\n      if (authToken && authToken.accessToken) {\n        queryStringParameters['auth'] = authToken.accessToken;\n      }\n      if (appCheckToken && appCheckToken.token) {\n        queryStringParameters['ac'] = appCheckToken.token;\n      }\n\n      const url =\n        (this.repoInfo_.secure ? 'https://' : 'http://') +\n        this.repoInfo_.host +\n        pathString +\n        '?' +\n        'ns=' +\n        this.repoInfo_.namespace +\n        querystring(queryStringParameters);\n\n      this.log_('Sending REST request for ' + url);\n      const xhr = new XMLHttpRequest();\n      xhr.onreadystatechange = () => {\n        if (callback && xhr.readyState === 4) {\n          this.log_(\n            'REST Response for ' + url + ' received. status:',\n            xhr.status,\n            'response:',\n            xhr.responseText\n          );\n          let res = null;\n          if (xhr.status >= 200 && xhr.status < 300) {\n            try {\n              res = jsonEval(xhr.responseText);\n            } catch (e) {\n              warn(\n                'Failed to parse JSON response for ' +\n                  url +\n                  ': ' +\n                  xhr.responseText\n              );\n            }\n            callback(null, res);\n          } else {\n            // 401 and 404 are expected.\n            if (xhr.status !== 401 && xhr.status !== 404) {\n              warn(\n                'Got unsuccessful REST response for ' +\n                  url +\n                  ' Status: ' +\n                  xhr.status\n              );\n            }\n            callback(xhr.status);\n          }\n          callback = null;\n        }\n      };\n\n      xhr.open('GET', url, /*asynchronous=*/ true);\n      xhr.send();\n    });\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ChildrenNode } from './snap/ChildrenNode';\nimport { Node } from './snap/Node';\nimport { Path } from './util/Path';\n\n/**\n * Mutable object which basically just stores a reference to the \"latest\" immutable snapshot.\n */\nexport class SnapshotHolder {\n  private rootNode_: Node = ChildrenNode.EMPTY_NODE;\n\n  getNode(path: Path): Node {\n    return this.rootNode_.getChild(path);\n  }\n\n  updateSnapshot(path: Path, newSnapshotNode: Node) {\n    this.rootNode_ = this.rootNode_.updateChild(path, newSnapshotNode);\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { PRIORITY_INDEX } from './snap/indexes/PriorityIndex';\nimport { Node } from './snap/Node';\nimport { Path, pathGetFront, pathIsEmpty, pathPopFront } from './util/Path';\n\n/**\n * Helper class to store a sparse set of snapshots.\n */\nexport interface SparseSnapshotTree {\n  value: Node | null;\n  readonly children: Map<string, SparseSnapshotTree>;\n}\n\nexport function newSparseSnapshotTree(): SparseSnapshotTree {\n  return {\n    value: null,\n    children: new Map()\n  };\n}\n\n/**\n * Gets the node stored at the given path if one exists.\n * Only seems to be used in tests.\n *\n * @param path - Path to look up snapshot for.\n * @returns The retrieved node, or null.\n */\nexport function sparseSnapshotTreeFind(\n  sparseSnapshotTree: SparseSnapshotTree,\n  path: Path\n): Node | null {\n  if (sparseSnapshotTree.value != null) {\n    return sparseSnapshotTree.value.getChild(path);\n  } else if (!pathIsEmpty(path) && sparseSnapshotTree.children.size > 0) {\n    const childKey = pathGetFront(path);\n    path = pathPopFront(path);\n    if (sparseSnapshotTree.children.has(childKey)) {\n      const childTree = sparseSnapshotTree.children.get(childKey);\n      return sparseSnapshotTreeFind(childTree, path);\n    } else {\n      return null;\n    }\n  } else {\n    return null;\n  }\n}\n\n/**\n * Stores the given node at the specified path. If there is already a node\n * at a shallower path, it merges the new data into that snapshot node.\n *\n * @param path - Path to look up snapshot for.\n * @param data - The new data, or null.\n */\nexport function sparseSnapshotTreeRemember(\n  sparseSnapshotTree: SparseSnapshotTree,\n  path: Path,\n  data: Node\n): void {\n  if (pathIsEmpty(path)) {\n    sparseSnapshotTree.value = data;\n    sparseSnapshotTree.children.clear();\n  } else if (sparseSnapshotTree.value !== null) {\n    sparseSnapshotTree.value = sparseSnapshotTree.value.updateChild(path, data);\n  } else {\n    const childKey = pathGetFront(path);\n    if (!sparseSnapshotTree.children.has(childKey)) {\n      sparseSnapshotTree.children.set(childKey, newSparseSnapshotTree());\n    }\n\n    const child = sparseSnapshotTree.children.get(childKey);\n    path = pathPopFront(path);\n    sparseSnapshotTreeRemember(child, path, data);\n  }\n}\n\n/**\n * Purge the data at path from the cache.\n *\n * @param path - Path to look up snapshot for.\n * @returns True if this node should now be removed.\n */\nexport function sparseSnapshotTreeForget(\n  sparseSnapshotTree: SparseSnapshotTree,\n  path: Path\n): boolean {\n  if (pathIsEmpty(path)) {\n    sparseSnapshotTree.value = null;\n    sparseSnapshotTree.children.clear();\n    return true;\n  } else {\n    if (sparseSnapshotTree.value !== null) {\n      if (sparseSnapshotTree.value.isLeafNode()) {\n        // We're trying to forget a node that doesn't exist\n        return false;\n      } else {\n        const value = sparseSnapshotTree.value;\n        sparseSnapshotTree.value = null;\n\n        value.forEachChild(PRIORITY_INDEX, (key, tree) => {\n          sparseSnapshotTreeRemember(sparseSnapshotTree, new Path(key), tree);\n        });\n\n        return sparseSnapshotTreeForget(sparseSnapshotTree, path);\n      }\n    } else if (sparseSnapshotTree.children.size > 0) {\n      const childKey = pathGetFront(path);\n      path = pathPopFront(path);\n      if (sparseSnapshotTree.children.has(childKey)) {\n        const safeToRemove = sparseSnapshotTreeForget(\n          sparseSnapshotTree.children.get(childKey),\n          path\n        );\n        if (safeToRemove) {\n          sparseSnapshotTree.children.delete(childKey);\n        }\n      }\n\n      return sparseSnapshotTree.children.size === 0;\n    } else {\n      return true;\n    }\n  }\n}\n\n/**\n * Recursively iterates through all of the stored tree and calls the\n * callback on each one.\n *\n * @param prefixPath - Path to look up node for.\n * @param func - The function to invoke for each tree.\n */\nexport function sparseSnapshotTreeForEachTree(\n  sparseSnapshotTree: SparseSnapshotTree,\n  prefixPath: Path,\n  func: (a: Path, b: Node) => unknown\n): void {\n  if (sparseSnapshotTree.value !== null) {\n    func(prefixPath, sparseSnapshotTree.value);\n  } else {\n    sparseSnapshotTreeForEachChild(sparseSnapshotTree, (key, tree) => {\n      const path = new Path(prefixPath.toString() + '/' + key);\n      sparseSnapshotTreeForEachTree(tree, path, func);\n    });\n  }\n}\n\n/**\n * Iterates through each immediate child and triggers the callback.\n * Only seems to be used in tests.\n *\n * @param func - The function to invoke for each child.\n */\nexport function sparseSnapshotTreeForEachChild(\n  sparseSnapshotTree: SparseSnapshotTree,\n  func: (a: string, b: SparseSnapshotTree) => void\n): void {\n  sparseSnapshotTree.children.forEach((tree, key) => {\n    func(key, tree);\n  });\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { each } from '../util/util';\n\nimport { StatsCollection } from './StatsCollection';\n\n/**\n * Returns the delta from the previous call to get stats.\n *\n * @param collection_ - The collection to \"listen\" to.\n */\nexport class StatsListener {\n  private last_: { [k: string]: number } | null = null;\n\n  constructor(private collection_: StatsCollection) {}\n\n  get(): { [k: string]: number } {\n    const newStats = this.collection_.get();\n\n    const delta = { ...newStats };\n    if (this.last_) {\n      each(this.last_, (stat: string, value: number) => {\n        delta[stat] = delta[stat] - value;\n      });\n    }\n    this.last_ = newStats;\n\n    return delta;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { contains } from '@firebase/util';\n\nimport { ServerActions } from '../ServerActions';\nimport { setTimeoutNonBlocking, each } from '../util/util';\n\nimport { StatsCollection } from './StatsCollection';\nimport { StatsListener } from './StatsListener';\n\n// Assuming some apps may have a short amount of time on page, and a bulk of firebase operations probably\n// happen on page load, we try to report our first set of stats pretty quickly, but we wait at least 10\n// seconds to try to ensure the Firebase connection is established / settled.\nconst FIRST_STATS_MIN_TIME = 10 * 1000;\nconst FIRST_STATS_MAX_TIME = 30 * 1000;\n\n// We'll continue to report stats on average every 5 minutes.\nconst REPORT_STATS_INTERVAL = 5 * 60 * 1000;\n\nexport class StatsReporter {\n  private statsListener_: StatsListener;\n  statsToReport_: { [k: string]: boolean } = {};\n\n  constructor(collection: StatsCollection, private server_: ServerActions) {\n    this.statsListener_ = new StatsListener(collection);\n\n    const timeout =\n      FIRST_STATS_MIN_TIME +\n      (FIRST_STATS_MAX_TIME - FIRST_STATS_MIN_TIME) * Math.random();\n    setTimeoutNonBlocking(this.reportStats_.bind(this), Math.floor(timeout));\n  }\n\n  private reportStats_() {\n    const stats = this.statsListener_.get();\n    const reportedStats: typeof stats = {};\n    let haveStatsToReport = false;\n\n    each(stats, (stat: string, value: number) => {\n      if (value > 0 && contains(this.statsToReport_, stat)) {\n        reportedStats[stat] = value;\n        haveStatsToReport = true;\n      }\n    });\n\n    if (haveStatsToReport) {\n      this.server_.reportStats(reportedStats);\n    }\n\n    // queue our next run.\n    setTimeoutNonBlocking(\n      this.reportStats_.bind(this),\n      Math.floor(Math.random() * 2 * REPORT_STATS_INTERVAL)\n    );\n  }\n}\n\nexport function statsReporterIncludeStat(\n  reporter: StatsReporter,\n  stat: string\n) {\n  reporter.statsToReport_[stat] = true;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Path } from '../util/Path';\n\n/**\n *\n * @enum\n */\nexport enum OperationType {\n  OVERWRITE,\n  MERGE,\n  ACK_USER_WRITE,\n  LISTEN_COMPLETE\n}\n\n/**\n * @interface\n */\nexport interface Operation {\n  source: OperationSource;\n\n  type: OperationType;\n\n  path: Path;\n\n  operationForChild(childName: string): Operation | null;\n}\n\nexport interface OperationSource {\n  fromUser: boolean;\n  fromServer: boolean;\n  queryId: string | null;\n  tagged: boolean;\n}\n\nexport function newOperationSourceUser(): OperationSource {\n  return {\n    fromUser: true,\n    fromServer: false,\n    queryId: null,\n    tagged: false\n  };\n}\n\nexport function newOperationSourceServer(): OperationSource {\n  return {\n    fromUser: false,\n    fromServer: true,\n    queryId: null,\n    tagged: false\n  };\n}\n\nexport function newOperationSourceServerTaggedQuery(\n  queryId: string\n): OperationSource {\n  return {\n    fromUser: false,\n    fromServer: true,\n    queryId,\n    tagged: true\n  };\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { ImmutableTree } from '../util/ImmutableTree';\nimport {\n  newEmptyPath,\n  Path,\n  pathGetFront,\n  pathIsEmpty,\n  pathPopFront\n} from '../util/Path';\n\nimport { newOperationSourceUser, Operation, OperationType } from './Operation';\n\nexport class AckUserWrite implements Operation {\n  /** @inheritDoc */\n  type = OperationType.ACK_USER_WRITE;\n\n  /** @inheritDoc */\n  source = newOperationSourceUser();\n\n  /**\n   * @param affectedTree - A tree containing true for each affected path. Affected paths can't overlap.\n   */\n  constructor(\n    /** @inheritDoc */ public path: Path,\n    /** @inheritDoc */ public affectedTree: ImmutableTree<boolean>,\n    /** @inheritDoc */ public revert: boolean\n  ) {}\n  operationForChild(childName: string): AckUserWrite {\n    if (!pathIsEmpty(this.path)) {\n      assert(\n        pathGetFront(this.path) === childName,\n        'operationForChild called for unrelated child.'\n      );\n      return new AckUserWrite(\n        pathPopFront(this.path),\n        this.affectedTree,\n        this.revert\n      );\n    } else if (this.affectedTree.value != null) {\n      assert(\n        this.affectedTree.children.isEmpty(),\n        'affectedTree should not have overlapping affected paths.'\n      );\n      // All child locations are affected as well; just return same operation.\n      return this;\n    } else {\n      const childTree = this.affectedTree.subtree(new Path(childName));\n      return new AckUserWrite(newEmptyPath(), childTree, this.revert);\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { newEmptyPath, Path, pathIsEmpty, pathPopFront } from '../util/Path';\n\nimport { Operation, OperationSource, OperationType } from './Operation';\n\nexport class ListenComplete implements Operation {\n  /** @inheritDoc */\n  type = OperationType.LISTEN_COMPLETE;\n\n  constructor(public source: OperationSource, public path: Path) {}\n\n  operationForChild(childName: string): ListenComplete {\n    if (pathIsEmpty(this.path)) {\n      return new ListenComplete(this.source, newEmptyPath());\n    } else {\n      return new ListenComplete(this.source, pathPopFront(this.path));\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Node } from '../snap/Node';\nimport { newEmptyPath, Path, pathIsEmpty, pathPopFront } from '../util/Path';\n\nimport { Operation, OperationSource, OperationType } from './Operation';\n\nexport class Overwrite implements Operation {\n  /** @inheritDoc */\n  type = OperationType.OVERWRITE;\n\n  constructor(\n    public source: OperationSource,\n    public path: Path,\n    public snap: Node\n  ) {}\n\n  operationForChild(childName: string): Overwrite {\n    if (pathIsEmpty(this.path)) {\n      return new Overwrite(\n        this.source,\n        newEmptyPath(),\n        this.snap.getImmediateChild(childName)\n      );\n    } else {\n      return new Overwrite(this.source, pathPopFront(this.path), this.snap);\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { Node } from '../snap/Node';\nimport { ImmutableTree } from '../util/ImmutableTree';\nimport {\n  newEmptyPath,\n  Path,\n  pathGetFront,\n  pathIsEmpty,\n  pathPopFront\n} from '../util/Path';\n\nimport { Operation, OperationSource, OperationType } from './Operation';\nimport { Overwrite } from './Overwrite';\n\nexport class Merge implements Operation {\n  /** @inheritDoc */\n  type = OperationType.MERGE;\n\n  constructor(\n    /** @inheritDoc */ public source: OperationSource,\n    /** @inheritDoc */ public path: Path,\n    /** @inheritDoc */ public children: ImmutableTree<Node>\n  ) {}\n  operationForChild(childName: string): Operation {\n    if (pathIsEmpty(this.path)) {\n      const childTree = this.children.subtree(new Path(childName));\n      if (childTree.isEmpty()) {\n        // This child is unaffected\n        return null;\n      } else if (childTree.value) {\n        // We have a snapshot for the child in question.  This becomes an overwrite of the child.\n        return new Overwrite(this.source, newEmptyPath(), childTree.value);\n      } else {\n        // This is a merge at a deeper level\n        return new Merge(this.source, newEmptyPath(), childTree);\n      }\n    } else {\n      assert(\n        pathGetFront(this.path) === childName,\n        \"Can't get a merge for a child not on the path of the operation\"\n      );\n      return new Merge(this.source, pathPopFront(this.path), this.children);\n    }\n  }\n  toString(): string {\n    return (\n      'Operation(' +\n      this.path +\n      ': ' +\n      this.source.toString() +\n      ' merge: ' +\n      this.children.toString() +\n      ')'\n    );\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Node } from '../snap/Node';\nimport { Path, pathGetFront, pathIsEmpty } from '../util/Path';\n\n/**\n * A cache node only stores complete children. Additionally it holds a flag whether the node can be considered fully\n * initialized in the sense that we know at one point in time this represented a valid state of the world, e.g.\n * initialized with data from the server, or a complete overwrite by the client. The filtered flag also tracks\n * whether a node potentially had children removed due to a filter.\n */\nexport class CacheNode {\n  constructor(\n    private node_: Node,\n    private fullyInitialized_: boolean,\n    private filtered_: boolean\n  ) {}\n\n  /**\n   * Returns whether this node was fully initialized with either server data or a complete overwrite by the client\n   */\n  isFullyInitialized(): boolean {\n    return this.fullyInitialized_;\n  }\n\n  /**\n   * Returns whether this node is potentially missing children due to a filter applied to the node\n   */\n  isFiltered(): boolean {\n    return this.filtered_;\n  }\n\n  isCompleteForPath(path: Path): boolean {\n    if (pathIsEmpty(path)) {\n      return this.isFullyInitialized() && !this.filtered_;\n    }\n\n    const childKey = pathGetFront(path);\n    return this.isCompleteForChild(childKey);\n  }\n\n  isCompleteForChild(key: string): boolean {\n    return (\n      (this.isFullyInitialized() && !this.filtered_) || this.node_.hasChild(key)\n    );\n  }\n\n  getNode(): Node {\n    return this.node_;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assertionError } from '@firebase/util';\n\nimport { Index } from '../snap/indexes/Index';\nimport { NamedNode, Node } from '../snap/Node';\n\nimport { Change, ChangeType, changeChildMoved } from './Change';\nimport { Event } from './Event';\nimport { EventRegistration, QueryContext } from './EventRegistration';\n\n/**\n * An EventGenerator is used to convert \"raw\" changes (Change) as computed by the\n * CacheDiffer into actual events (Event) that can be raised.  See generateEventsForChanges()\n * for details.\n *\n */\nexport class EventGenerator {\n  index_: Index;\n\n  constructor(public query_: QueryContext) {\n    this.index_ = this.query_._queryParams.getIndex();\n  }\n}\n\n/**\n * Given a set of raw changes (no moved events and prevName not specified yet), and a set of\n * EventRegistrations that should be notified of these changes, generate the actual events to be raised.\n *\n * Notes:\n *  - child_moved events will be synthesized at this time for any child_changed events that affect\n *    our index.\n *  - prevName will be calculated based on the index ordering.\n */\nexport function eventGeneratorGenerateEventsForChanges(\n  eventGenerator: EventGenerator,\n  changes: Change[],\n  eventCache: Node,\n  eventRegistrations: EventRegistration[]\n): Event[] {\n  const events: Event[] = [];\n  const moves: Change[] = [];\n\n  changes.forEach(change => {\n    if (\n      change.type === ChangeType.CHILD_CHANGED &&\n      eventGenerator.index_.indexedValueChanged(\n        change.oldSnap as Node,\n        change.snapshotNode\n      )\n    ) {\n      moves.push(changeChildMoved(change.childName, change.snapshotNode));\n    }\n  });\n\n  eventGeneratorGenerateEventsForType(\n    eventGenerator,\n    events,\n    ChangeType.CHILD_REMOVED,\n    changes,\n    eventRegistrations,\n    eventCache\n  );\n  eventGeneratorGenerateEventsForType(\n    eventGenerator,\n    events,\n    ChangeType.CHILD_ADDED,\n    changes,\n    eventRegistrations,\n    eventCache\n  );\n  eventGeneratorGenerateEventsForType(\n    eventGenerator,\n    events,\n    ChangeType.CHILD_MOVED,\n    moves,\n    eventRegistrations,\n    eventCache\n  );\n  eventGeneratorGenerateEventsForType(\n    eventGenerator,\n    events,\n    ChangeType.CHILD_CHANGED,\n    changes,\n    eventRegistrations,\n    eventCache\n  );\n  eventGeneratorGenerateEventsForType(\n    eventGenerator,\n    events,\n    ChangeType.VALUE,\n    changes,\n    eventRegistrations,\n    eventCache\n  );\n\n  return events;\n}\n\n/**\n * Given changes of a single change type, generate the corresponding events.\n */\nfunction eventGeneratorGenerateEventsForType(\n  eventGenerator: EventGenerator,\n  events: Event[],\n  eventType: string,\n  changes: Change[],\n  registrations: EventRegistration[],\n  eventCache: Node\n) {\n  const filteredChanges = changes.filter(change => change.type === eventType);\n\n  filteredChanges.sort((a, b) =>\n    eventGeneratorCompareChanges(eventGenerator, a, b)\n  );\n  filteredChanges.forEach(change => {\n    const materializedChange = eventGeneratorMaterializeSingleChange(\n      eventGenerator,\n      change,\n      eventCache\n    );\n    registrations.forEach(registration => {\n      if (registration.respondsTo(change.type)) {\n        events.push(\n          registration.createEvent(materializedChange, eventGenerator.query_)\n        );\n      }\n    });\n  });\n}\n\nfunction eventGeneratorMaterializeSingleChange(\n  eventGenerator: EventGenerator,\n  change: Change,\n  eventCache: Node\n): Change {\n  if (change.type === 'value' || change.type === 'child_removed') {\n    return change;\n  } else {\n    change.prevName = eventCache.getPredecessorChildName(\n      change.childName,\n      change.snapshotNode,\n      eventGenerator.index_\n    );\n    return change;\n  }\n}\n\nfunction eventGeneratorCompareChanges(\n  eventGenerator: EventGenerator,\n  a: Change,\n  b: Change\n) {\n  if (a.childName == null || b.childName == null) {\n    throw assertionError('Should only compare child_ events.');\n  }\n  const aWrapped = new NamedNode(a.childName, a.snapshotNode);\n  const bWrapped = new NamedNode(b.childName, b.snapshotNode);\n  return eventGenerator.index_.compare(aWrapped, bWrapped);\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Node } from '../snap/Node';\n\nimport { CacheNode } from './CacheNode';\n\n/**\n * Stores the data we have cached for a view.\n *\n * serverSnap is the cached server data, eventSnap is the cached event data (server data plus any local writes).\n */\nexport interface ViewCache {\n  readonly eventCache: CacheNode;\n  readonly serverCache: CacheNode;\n}\n\nexport function newViewCache(\n  eventCache: CacheNode,\n  serverCache: CacheNode\n): ViewCache {\n  return { eventCache, serverCache };\n}\n\nexport function viewCacheUpdateEventSnap(\n  viewCache: ViewCache,\n  eventSnap: Node,\n  complete: boolean,\n  filtered: boolean\n): ViewCache {\n  return newViewCache(\n    new CacheNode(eventSnap, complete, filtered),\n    viewCache.serverCache\n  );\n}\n\nexport function viewCacheUpdateServerSnap(\n  viewCache: ViewCache,\n  serverSnap: Node,\n  complete: boolean,\n  filtered: boolean\n): ViewCache {\n  return newViewCache(\n    viewCache.eventCache,\n    new CacheNode(serverSnap, complete, filtered)\n  );\n}\n\nexport function viewCacheGetCompleteEventSnap(\n  viewCache: ViewCache\n): Node | null {\n  return viewCache.eventCache.isFullyInitialized()\n    ? viewCache.eventCache.getNode()\n    : null;\n}\n\nexport function viewCacheGetCompleteServerSnap(\n  viewCache: ViewCache\n): Node | null {\n  return viewCache.serverCache.isFullyInitialized()\n    ? viewCache.serverCache.getNode()\n    : null;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  newEmptyPath,\n  Path,\n  pathChild,\n  pathGetFront,\n  pathIsEmpty,\n  pathPopFront\n} from './Path';\nimport { SortedMap } from './SortedMap';\nimport { each, stringCompare } from './util';\n\nlet emptyChildrenSingleton: SortedMap<string, ImmutableTree<null>>;\n\n/**\n * Singleton empty children collection.\n *\n */\nconst EmptyChildren = (): SortedMap<string, ImmutableTree<null>> => {\n  if (!emptyChildrenSingleton) {\n    emptyChildrenSingleton = new SortedMap<string, ImmutableTree<null>>(\n      stringCompare\n    );\n  }\n  return emptyChildrenSingleton;\n};\n\n/**\n * A tree with immutable elements.\n */\nexport class ImmutableTree<T> {\n  static fromObject<T>(obj: { [k: string]: T }): ImmutableTree<T> {\n    let tree: ImmutableTree<T> = new ImmutableTree<T>(null);\n    each(obj, (childPath: string, childSnap: T) => {\n      tree = tree.set(new Path(childPath), childSnap);\n    });\n    return tree;\n  }\n\n  constructor(\n    public readonly value: T | null,\n    public readonly children: SortedMap<\n      string,\n      ImmutableTree<T>\n    > = EmptyChildren()\n  ) {}\n\n  /**\n   * True if the value is empty and there are no children\n   */\n  isEmpty(): boolean {\n    return this.value === null && this.children.isEmpty();\n  }\n\n  /**\n   * Given a path and predicate, return the first node and the path to that node\n   * where the predicate returns true.\n   *\n   * TODO Do a perf test -- If we're creating a bunch of `{path: value:}`\n   * objects on the way back out, it may be better to pass down a pathSoFar obj.\n   *\n   * @param relativePath - The remainder of the path\n   * @param predicate - The predicate to satisfy to return a node\n   */\n  findRootMostMatchingPathAndValue(\n    relativePath: Path,\n    predicate: (a: T) => boolean\n  ): { path: Path; value: T } | null {\n    if (this.value != null && predicate(this.value)) {\n      return { path: newEmptyPath(), value: this.value };\n    } else {\n      if (pathIsEmpty(relativePath)) {\n        return null;\n      } else {\n        const front = pathGetFront(relativePath);\n        const child = this.children.get(front);\n        if (child !== null) {\n          const childExistingPathAndValue = child.findRootMostMatchingPathAndValue(\n            pathPopFront(relativePath),\n            predicate\n          );\n          if (childExistingPathAndValue != null) {\n            const fullPath = pathChild(\n              new Path(front),\n              childExistingPathAndValue.path\n            );\n            return { path: fullPath, value: childExistingPathAndValue.value };\n          } else {\n            return null;\n          }\n        } else {\n          return null;\n        }\n      }\n    }\n  }\n\n  /**\n   * Find, if it exists, the shortest subpath of the given path that points a defined\n   * value in the tree\n   */\n  findRootMostValueAndPath(\n    relativePath: Path\n  ): { path: Path; value: T } | null {\n    return this.findRootMostMatchingPathAndValue(relativePath, () => true);\n  }\n\n  /**\n   * @returns The subtree at the given path\n   */\n  subtree(relativePath: Path): ImmutableTree<T> {\n    if (pathIsEmpty(relativePath)) {\n      return this;\n    } else {\n      const front = pathGetFront(relativePath);\n      const childTree = this.children.get(front);\n      if (childTree !== null) {\n        return childTree.subtree(pathPopFront(relativePath));\n      } else {\n        return new ImmutableTree<T>(null);\n      }\n    }\n  }\n\n  /**\n   * Sets a value at the specified path.\n   *\n   * @param relativePath - Path to set value at.\n   * @param toSet - Value to set.\n   * @returns Resulting tree.\n   */\n  set(relativePath: Path, toSet: T | null): ImmutableTree<T> {\n    if (pathIsEmpty(relativePath)) {\n      return new ImmutableTree(toSet, this.children);\n    } else {\n      const front = pathGetFront(relativePath);\n      const child = this.children.get(front) || new ImmutableTree<T>(null);\n      const newChild = child.set(pathPopFront(relativePath), toSet);\n      const newChildren = this.children.insert(front, newChild);\n      return new ImmutableTree(this.value, newChildren);\n    }\n  }\n\n  /**\n   * Removes the value at the specified path.\n   *\n   * @param relativePath - Path to value to remove.\n   * @returns Resulting tree.\n   */\n  remove(relativePath: Path): ImmutableTree<T> {\n    if (pathIsEmpty(relativePath)) {\n      if (this.children.isEmpty()) {\n        return new ImmutableTree<T>(null);\n      } else {\n        return new ImmutableTree(null, this.children);\n      }\n    } else {\n      const front = pathGetFront(relativePath);\n      const child = this.children.get(front);\n      if (child) {\n        const newChild = child.remove(pathPopFront(relativePath));\n        let newChildren;\n        if (newChild.isEmpty()) {\n          newChildren = this.children.remove(front);\n        } else {\n          newChildren = this.children.insert(front, newChild);\n        }\n        if (this.value === null && newChildren.isEmpty()) {\n          return new ImmutableTree<T>(null);\n        } else {\n          return new ImmutableTree(this.value, newChildren);\n        }\n      } else {\n        return this;\n      }\n    }\n  }\n\n  /**\n   * Gets a value from the tree.\n   *\n   * @param relativePath - Path to get value for.\n   * @returns Value at path, or null.\n   */\n  get(relativePath: Path): T | null {\n    if (pathIsEmpty(relativePath)) {\n      return this.value;\n    } else {\n      const front = pathGetFront(relativePath);\n      const child = this.children.get(front);\n      if (child) {\n        return child.get(pathPopFront(relativePath));\n      } else {\n        return null;\n      }\n    }\n  }\n\n  /**\n   * Replace the subtree at the specified path with the given new tree.\n   *\n   * @param relativePath - Path to replace subtree for.\n   * @param newTree - New tree.\n   * @returns Resulting tree.\n   */\n  setTree(relativePath: Path, newTree: ImmutableTree<T>): ImmutableTree<T> {\n    if (pathIsEmpty(relativePath)) {\n      return newTree;\n    } else {\n      const front = pathGetFront(relativePath);\n      const child = this.children.get(front) || new ImmutableTree<T>(null);\n      const newChild = child.setTree(pathPopFront(relativePath), newTree);\n      let newChildren;\n      if (newChild.isEmpty()) {\n        newChildren = this.children.remove(front);\n      } else {\n        newChildren = this.children.insert(front, newChild);\n      }\n      return new ImmutableTree(this.value, newChildren);\n    }\n  }\n\n  /**\n   * Performs a depth first fold on this tree. Transforms a tree into a single\n   * value, given a function that operates on the path to a node, an optional\n   * current value, and a map of child names to folded subtrees\n   */\n  fold<V>(fn: (path: Path, value: T, children: { [k: string]: V }) => V): V {\n    return this.fold_(newEmptyPath(), fn);\n  }\n\n  /**\n   * Recursive helper for public-facing fold() method\n   */\n  private fold_<V>(\n    pathSoFar: Path,\n    fn: (path: Path, value: T | null, children: { [k: string]: V }) => V\n  ): V {\n    const accum: { [k: string]: V } = {};\n    this.children.inorderTraversal(\n      (childKey: string, childTree: ImmutableTree<T>) => {\n        accum[childKey] = childTree.fold_(pathChild(pathSoFar, childKey), fn);\n      }\n    );\n    return fn(pathSoFar, this.value, accum);\n  }\n\n  /**\n   * Find the first matching value on the given path. Return the result of applying f to it.\n   */\n  findOnPath<V>(path: Path, f: (path: Path, value: T) => V | null): V | null {\n    return this.findOnPath_(path, newEmptyPath(), f);\n  }\n\n  private findOnPath_<V>(\n    pathToFollow: Path,\n    pathSoFar: Path,\n    f: (path: Path, value: T) => V | null\n  ): V | null {\n    const result = this.value ? f(pathSoFar, this.value) : false;\n    if (result) {\n      return result;\n    } else {\n      if (pathIsEmpty(pathToFollow)) {\n        return null;\n      } else {\n        const front = pathGetFront(pathToFollow)!;\n        const nextChild = this.children.get(front);\n        if (nextChild) {\n          return nextChild.findOnPath_(\n            pathPopFront(pathToFollow),\n            pathChild(pathSoFar, front),\n            f\n          );\n        } else {\n          return null;\n        }\n      }\n    }\n  }\n\n  foreachOnPath(\n    path: Path,\n    f: (path: Path, value: T) => void\n  ): ImmutableTree<T> {\n    return this.foreachOnPath_(path, newEmptyPath(), f);\n  }\n\n  private foreachOnPath_(\n    pathToFollow: Path,\n    currentRelativePath: Path,\n    f: (path: Path, value: T) => void\n  ): ImmutableTree<T> {\n    if (pathIsEmpty(pathToFollow)) {\n      return this;\n    } else {\n      if (this.value) {\n        f(currentRelativePath, this.value);\n      }\n      const front = pathGetFront(pathToFollow);\n      const nextChild = this.children.get(front);\n      if (nextChild) {\n        return nextChild.foreachOnPath_(\n          pathPopFront(pathToFollow),\n          pathChild(currentRelativePath, front),\n          f\n        );\n      } else {\n        return new ImmutableTree<T>(null);\n      }\n    }\n  }\n\n  /**\n   * Calls the given function for each node in the tree that has a value.\n   *\n   * @param f - A function to be called with the path from the root of the tree to\n   * a node, and the value at that node. Called in depth-first order.\n   */\n  foreach(f: (path: Path, value: T) => void) {\n    this.foreach_(newEmptyPath(), f);\n  }\n\n  private foreach_(\n    currentRelativePath: Path,\n    f: (path: Path, value: T) => void\n  ) {\n    this.children.inorderTraversal((childName, childTree) => {\n      childTree.foreach_(pathChild(currentRelativePath, childName), f);\n    });\n    if (this.value) {\n      f(currentRelativePath, this.value);\n    }\n  }\n\n  foreachChild(f: (name: string, value: T) => void) {\n    this.children.inorderTraversal(\n      (childName: string, childTree: ImmutableTree<T>) => {\n        if (childTree.value) {\n          f(childName, childTree.value);\n        }\n      }\n    );\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { ChildrenNode } from './snap/ChildrenNode';\nimport { PRIORITY_INDEX } from './snap/indexes/PriorityIndex';\nimport { NamedNode, Node } from './snap/Node';\nimport { ImmutableTree } from './util/ImmutableTree';\nimport {\n  newEmptyPath,\n  newRelativePath,\n  Path,\n  pathChild,\n  pathIsEmpty\n} from './util/Path';\nimport { each } from './util/util';\n\n/**\n * This class holds a collection of writes that can be applied to nodes in unison. It abstracts away the logic with\n * dealing with priority writes and multiple nested writes. At any given path there is only allowed to be one write\n * modifying that path. Any write to an existing path or shadowing an existing path will modify that existing write\n * to reflect the write added.\n */\nexport class CompoundWrite {\n  constructor(public writeTree_: ImmutableTree<Node>) {}\n\n  static empty(): CompoundWrite {\n    return new CompoundWrite(new ImmutableTree(null));\n  }\n}\n\nexport function compoundWriteAddWrite(\n  compoundWrite: CompoundWrite,\n  path: Path,\n  node: Node\n): CompoundWrite {\n  if (pathIsEmpty(path)) {\n    return new CompoundWrite(new ImmutableTree(node));\n  } else {\n    const rootmost = compoundWrite.writeTree_.findRootMostValueAndPath(path);\n    if (rootmost != null) {\n      const rootMostPath = rootmost.path;\n      let value = rootmost.value;\n      const relativePath = newRelativePath(rootMostPath, path);\n      value = value.updateChild(relativePath, node);\n      return new CompoundWrite(\n        compoundWrite.writeTree_.set(rootMostPath, value)\n      );\n    } else {\n      const subtree = new ImmutableTree(node);\n      const newWriteTree = compoundWrite.writeTree_.setTree(path, subtree);\n      return new CompoundWrite(newWriteTree);\n    }\n  }\n}\n\nexport function compoundWriteAddWrites(\n  compoundWrite: CompoundWrite,\n  path: Path,\n  updates: { [name: string]: Node }\n): CompoundWrite {\n  let newWrite = compoundWrite;\n  each(updates, (childKey: string, node: Node) => {\n    newWrite = compoundWriteAddWrite(newWrite, pathChild(path, childKey), node);\n  });\n  return newWrite;\n}\n\n/**\n * Will remove a write at the given path and deeper paths. This will <em>not</em> modify a write at a higher\n * location, which must be removed by calling this method with that path.\n *\n * @param compoundWrite - The CompoundWrite to remove.\n * @param path - The path at which a write and all deeper writes should be removed\n * @returns The new CompoundWrite with the removed path\n */\nexport function compoundWriteRemoveWrite(\n  compoundWrite: CompoundWrite,\n  path: Path\n): CompoundWrite {\n  if (pathIsEmpty(path)) {\n    return CompoundWrite.empty();\n  } else {\n    const newWriteTree = compoundWrite.writeTree_.setTree(\n      path,\n      new ImmutableTree<Node>(null)\n    );\n    return new CompoundWrite(newWriteTree);\n  }\n}\n\n/**\n * Returns whether this CompoundWrite will fully overwrite a node at a given location and can therefore be\n * considered \"complete\".\n *\n * @param compoundWrite - The CompoundWrite to check.\n * @param path - The path to check for\n * @returns Whether there is a complete write at that path\n */\nexport function compoundWriteHasCompleteWrite(\n  compoundWrite: CompoundWrite,\n  path: Path\n): boolean {\n  return compoundWriteGetCompleteNode(compoundWrite, path) != null;\n}\n\n/**\n * Returns a node for a path if and only if the node is a \"complete\" overwrite at that path. This will not aggregate\n * writes from deeper paths, but will return child nodes from a more shallow path.\n *\n * @param compoundWrite - The CompoundWrite to get the node from.\n * @param path - The path to get a complete write\n * @returns The node if complete at that path, or null otherwise.\n */\nexport function compoundWriteGetCompleteNode(\n  compoundWrite: CompoundWrite,\n  path: Path\n): Node | null {\n  const rootmost = compoundWrite.writeTree_.findRootMostValueAndPath(path);\n  if (rootmost != null) {\n    return compoundWrite.writeTree_\n      .get(rootmost.path)\n      .getChild(newRelativePath(rootmost.path, path));\n  } else {\n    return null;\n  }\n}\n\n/**\n * Returns all children that are guaranteed to be a complete overwrite.\n *\n * @param compoundWrite - The CompoundWrite to get children from.\n * @returns A list of all complete children.\n */\nexport function compoundWriteGetCompleteChildren(\n  compoundWrite: CompoundWrite\n): NamedNode[] {\n  const children: NamedNode[] = [];\n  const node = compoundWrite.writeTree_.value;\n  if (node != null) {\n    // If it's a leaf node, it has no children; so nothing to do.\n    if (!node.isLeafNode()) {\n      (node as ChildrenNode).forEachChild(\n        PRIORITY_INDEX,\n        (childName, childNode) => {\n          children.push(new NamedNode(childName, childNode));\n        }\n      );\n    }\n  } else {\n    compoundWrite.writeTree_.children.inorderTraversal(\n      (childName, childTree) => {\n        if (childTree.value != null) {\n          children.push(new NamedNode(childName, childTree.value));\n        }\n      }\n    );\n  }\n  return children;\n}\n\nexport function compoundWriteChildCompoundWrite(\n  compoundWrite: CompoundWrite,\n  path: Path\n): CompoundWrite {\n  if (pathIsEmpty(path)) {\n    return compoundWrite;\n  } else {\n    const shadowingNode = compoundWriteGetCompleteNode(compoundWrite, path);\n    if (shadowingNode != null) {\n      return new CompoundWrite(new ImmutableTree(shadowingNode));\n    } else {\n      return new CompoundWrite(compoundWrite.writeTree_.subtree(path));\n    }\n  }\n}\n\n/**\n * Returns true if this CompoundWrite is empty and therefore does not modify any nodes.\n * @returns Whether this CompoundWrite is empty\n */\nexport function compoundWriteIsEmpty(compoundWrite: CompoundWrite): boolean {\n  return compoundWrite.writeTree_.isEmpty();\n}\n\n/**\n * Applies this CompoundWrite to a node. The node is returned with all writes from this CompoundWrite applied to the\n * node\n * @param node - The node to apply this CompoundWrite to\n * @returns The node with all writes applied\n */\nexport function compoundWriteApply(\n  compoundWrite: CompoundWrite,\n  node: Node\n): Node {\n  return applySubtreeWrite(newEmptyPath(), compoundWrite.writeTree_, node);\n}\n\nfunction applySubtreeWrite(\n  relativePath: Path,\n  writeTree: ImmutableTree<Node>,\n  node: Node\n): Node {\n  if (writeTree.value != null) {\n    // Since there a write is always a leaf, we're done here\n    return node.updateChild(relativePath, writeTree.value);\n  } else {\n    let priorityWrite = null;\n    writeTree.children.inorderTraversal((childKey, childTree) => {\n      if (childKey === '.priority') {\n        // Apply priorities at the end so we don't update priorities for either empty nodes or forget\n        // to apply priorities to empty nodes that are later filled\n        assert(\n          childTree.value !== null,\n          'Priority writes must always be leaf nodes'\n        );\n        priorityWrite = childTree.value;\n      } else {\n        node = applySubtreeWrite(\n          pathChild(relativePath, childKey),\n          childTree,\n          node\n        );\n      }\n    });\n    // If there was a priority write, we only apply it if the node is not empty\n    if (!node.getChild(relativePath).isEmpty() && priorityWrite !== null) {\n      node = node.updateChild(\n        pathChild(relativePath, '.priority'),\n        priorityWrite\n      );\n    }\n    return node;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, assertionError, safeGet } from '@firebase/util';\n\nimport {\n  CompoundWrite,\n  compoundWriteAddWrite,\n  compoundWriteAddWrites,\n  compoundWriteApply,\n  compoundWriteChildCompoundWrite,\n  compoundWriteGetCompleteChildren,\n  compoundWriteGetCompleteNode,\n  compoundWriteHasCompleteWrite,\n  compoundWriteIsEmpty,\n  compoundWriteRemoveWrite\n} from './CompoundWrite';\nimport { ChildrenNode } from './snap/ChildrenNode';\nimport { Index } from './snap/indexes/Index';\nimport { PRIORITY_INDEX } from './snap/indexes/PriorityIndex';\nimport { NamedNode, Node } from './snap/Node';\nimport {\n  newEmptyPath,\n  newRelativePath,\n  Path,\n  pathChild,\n  pathContains,\n  pathGetFront,\n  pathIsEmpty,\n  pathPopFront\n} from './util/Path';\nimport { each } from './util/util';\nimport { CacheNode } from './view/CacheNode';\n\n/**\n * Defines a single user-initiated write operation. May be the result of a set(), transaction(), or update() call. In\n * the case of a set() or transaction, snap wil be non-null.  In the case of an update(), children will be non-null.\n */\nexport interface WriteRecord {\n  writeId: number;\n  path: Path;\n  snap?: Node | null;\n  children?: { [k: string]: Node } | null;\n  visible: boolean;\n}\n\n/**\n * Create a new WriteTreeRef for the given path. For use with a new sync point at the given path.\n *\n */\nexport function writeTreeChildWrites(\n  writeTree: WriteTree,\n  path: Path\n): WriteTreeRef {\n  return newWriteTreeRef(path, writeTree);\n}\n\n/**\n * Record a new overwrite from user code.\n *\n * @param visible - This is set to false by some transactions. It should be excluded from event caches\n */\nexport function writeTreeAddOverwrite(\n  writeTree: WriteTree,\n  path: Path,\n  snap: Node,\n  writeId: number,\n  visible?: boolean\n) {\n  assert(\n    writeId > writeTree.lastWriteId,\n    'Stacking an older write on top of newer ones'\n  );\n  if (visible === undefined) {\n    visible = true;\n  }\n  writeTree.allWrites.push({\n    path,\n    snap,\n    writeId,\n    visible\n  });\n\n  if (visible) {\n    writeTree.visibleWrites = compoundWriteAddWrite(\n      writeTree.visibleWrites,\n      path,\n      snap\n    );\n  }\n  writeTree.lastWriteId = writeId;\n}\n\n/**\n * Record a new merge from user code.\n */\nexport function writeTreeAddMerge(\n  writeTree: WriteTree,\n  path: Path,\n  changedChildren: { [k: string]: Node },\n  writeId: number\n) {\n  assert(\n    writeId > writeTree.lastWriteId,\n    'Stacking an older merge on top of newer ones'\n  );\n  writeTree.allWrites.push({\n    path,\n    children: changedChildren,\n    writeId,\n    visible: true\n  });\n\n  writeTree.visibleWrites = compoundWriteAddWrites(\n    writeTree.visibleWrites,\n    path,\n    changedChildren\n  );\n  writeTree.lastWriteId = writeId;\n}\n\nexport function writeTreeGetWrite(\n  writeTree: WriteTree,\n  writeId: number\n): WriteRecord | null {\n  for (let i = 0; i < writeTree.allWrites.length; i++) {\n    const record = writeTree.allWrites[i];\n    if (record.writeId === writeId) {\n      return record;\n    }\n  }\n  return null;\n}\n\n/**\n * Remove a write (either an overwrite or merge) that has been successfully acknowledge by the server. Recalculates\n * the tree if necessary.  We return true if it may have been visible, meaning views need to reevaluate.\n *\n * @returns true if the write may have been visible (meaning we'll need to reevaluate / raise\n * events as a result).\n */\nexport function writeTreeRemoveWrite(\n  writeTree: WriteTree,\n  writeId: number\n): boolean {\n  // Note: disabling this check. It could be a transaction that preempted another transaction, and thus was applied\n  // out of order.\n  //const validClear = revert || this.allWrites_.length === 0 || writeId <= this.allWrites_[0].writeId;\n  //assert(validClear, \"Either we don't have this write, or it's the first one in the queue\");\n\n  const idx = writeTree.allWrites.findIndex(s => {\n    return s.writeId === writeId;\n  });\n  assert(idx >= 0, 'removeWrite called with nonexistent writeId.');\n  const writeToRemove = writeTree.allWrites[idx];\n  writeTree.allWrites.splice(idx, 1);\n\n  let removedWriteWasVisible = writeToRemove.visible;\n  let removedWriteOverlapsWithOtherWrites = false;\n\n  let i = writeTree.allWrites.length - 1;\n\n  while (removedWriteWasVisible && i >= 0) {\n    const currentWrite = writeTree.allWrites[i];\n    if (currentWrite.visible) {\n      if (\n        i >= idx &&\n        writeTreeRecordContainsPath_(currentWrite, writeToRemove.path)\n      ) {\n        // The removed write was completely shadowed by a subsequent write.\n        removedWriteWasVisible = false;\n      } else if (pathContains(writeToRemove.path, currentWrite.path)) {\n        // Either we're covering some writes or they're covering part of us (depending on which came first).\n        removedWriteOverlapsWithOtherWrites = true;\n      }\n    }\n    i--;\n  }\n\n  if (!removedWriteWasVisible) {\n    return false;\n  } else if (removedWriteOverlapsWithOtherWrites) {\n    // There's some shadowing going on. Just rebuild the visible writes from scratch.\n    writeTreeResetTree_(writeTree);\n    return true;\n  } else {\n    // There's no shadowing.  We can safely just remove the write(s) from visibleWrites.\n    if (writeToRemove.snap) {\n      writeTree.visibleWrites = compoundWriteRemoveWrite(\n        writeTree.visibleWrites,\n        writeToRemove.path\n      );\n    } else {\n      const children = writeToRemove.children;\n      each(children, (childName: string) => {\n        writeTree.visibleWrites = compoundWriteRemoveWrite(\n          writeTree.visibleWrites,\n          pathChild(writeToRemove.path, childName)\n        );\n      });\n    }\n    return true;\n  }\n}\n\nfunction writeTreeRecordContainsPath_(\n  writeRecord: WriteRecord,\n  path: Path\n): boolean {\n  if (writeRecord.snap) {\n    return pathContains(writeRecord.path, path);\n  } else {\n    for (const childName in writeRecord.children) {\n      if (\n        writeRecord.children.hasOwnProperty(childName) &&\n        pathContains(pathChild(writeRecord.path, childName), path)\n      ) {\n        return true;\n      }\n    }\n    return false;\n  }\n}\n\n/**\n * Re-layer the writes and merges into a tree so we can efficiently calculate event snapshots\n */\nfunction writeTreeResetTree_(writeTree: WriteTree) {\n  writeTree.visibleWrites = writeTreeLayerTree_(\n    writeTree.allWrites,\n    writeTreeDefaultFilter_,\n    newEmptyPath()\n  );\n  if (writeTree.allWrites.length > 0) {\n    writeTree.lastWriteId =\n      writeTree.allWrites[writeTree.allWrites.length - 1].writeId;\n  } else {\n    writeTree.lastWriteId = -1;\n  }\n}\n\n/**\n * The default filter used when constructing the tree. Keep everything that's visible.\n */\nfunction writeTreeDefaultFilter_(write: WriteRecord) {\n  return write.visible;\n}\n\n/**\n * Static method. Given an array of WriteRecords, a filter for which ones to include, and a path, construct the tree of\n * event data at that path.\n */\nfunction writeTreeLayerTree_(\n  writes: WriteRecord[],\n  filter: (w: WriteRecord) => boolean,\n  treeRoot: Path\n): CompoundWrite {\n  let compoundWrite = CompoundWrite.empty();\n  for (let i = 0; i < writes.length; ++i) {\n    const write = writes[i];\n    // Theory, a later set will either:\n    // a) abort a relevant transaction, so no need to worry about excluding it from calculating that transaction\n    // b) not be relevant to a transaction (separate branch), so again will not affect the data for that transaction\n    if (filter(write)) {\n      const writePath = write.path;\n      let relativePath: Path;\n      if (write.snap) {\n        if (pathContains(treeRoot, writePath)) {\n          relativePath = newRelativePath(treeRoot, writePath);\n          compoundWrite = compoundWriteAddWrite(\n            compoundWrite,\n            relativePath,\n            write.snap\n          );\n        } else if (pathContains(writePath, treeRoot)) {\n          relativePath = newRelativePath(writePath, treeRoot);\n          compoundWrite = compoundWriteAddWrite(\n            compoundWrite,\n            newEmptyPath(),\n            write.snap.getChild(relativePath)\n          );\n        } else {\n          // There is no overlap between root path and write path, ignore write\n        }\n      } else if (write.children) {\n        if (pathContains(treeRoot, writePath)) {\n          relativePath = newRelativePath(treeRoot, writePath);\n          compoundWrite = compoundWriteAddWrites(\n            compoundWrite,\n            relativePath,\n            write.children\n          );\n        } else if (pathContains(writePath, treeRoot)) {\n          relativePath = newRelativePath(writePath, treeRoot);\n          if (pathIsEmpty(relativePath)) {\n            compoundWrite = compoundWriteAddWrites(\n              compoundWrite,\n              newEmptyPath(),\n              write.children\n            );\n          } else {\n            const child = safeGet(write.children, pathGetFront(relativePath));\n            if (child) {\n              // There exists a child in this node that matches the root path\n              const deepNode = child.getChild(pathPopFront(relativePath));\n              compoundWrite = compoundWriteAddWrite(\n                compoundWrite,\n                newEmptyPath(),\n                deepNode\n              );\n            }\n          }\n        } else {\n          // There is no overlap between root path and write path, ignore write\n        }\n      } else {\n        throw assertionError('WriteRecord should have .snap or .children');\n      }\n    }\n  }\n  return compoundWrite;\n}\n\n/**\n * Return a complete snapshot for the given path if there's visible write data at that path, else null.\n * No server data is considered.\n *\n */\nexport function writeTreeGetCompleteWriteData(\n  writeTree: WriteTree,\n  path: Path\n): Node | null {\n  return compoundWriteGetCompleteNode(writeTree.visibleWrites, path);\n}\n\n/**\n * Given optional, underlying server data, and an optional set of constraints (exclude some sets, include hidden\n * writes), attempt to calculate a complete snapshot for the given path\n *\n * @param writeIdsToExclude - An optional set to be excluded\n * @param includeHiddenWrites - Defaults to false, whether or not to layer on writes with visible set to false\n */\nexport function writeTreeCalcCompleteEventCache(\n  writeTree: WriteTree,\n  treePath: Path,\n  completeServerCache: Node | null,\n  writeIdsToExclude?: number[],\n  includeHiddenWrites?: boolean\n): Node | null {\n  if (!writeIdsToExclude && !includeHiddenWrites) {\n    const shadowingNode = compoundWriteGetCompleteNode(\n      writeTree.visibleWrites,\n      treePath\n    );\n    if (shadowingNode != null) {\n      return shadowingNode;\n    } else {\n      const subMerge = compoundWriteChildCompoundWrite(\n        writeTree.visibleWrites,\n        treePath\n      );\n      if (compoundWriteIsEmpty(subMerge)) {\n        return completeServerCache;\n      } else if (\n        completeServerCache == null &&\n        !compoundWriteHasCompleteWrite(subMerge, newEmptyPath())\n      ) {\n        // We wouldn't have a complete snapshot, since there's no underlying data and no complete shadow\n        return null;\n      } else {\n        const layeredCache = completeServerCache || ChildrenNode.EMPTY_NODE;\n        return compoundWriteApply(subMerge, layeredCache);\n      }\n    }\n  } else {\n    const merge = compoundWriteChildCompoundWrite(\n      writeTree.visibleWrites,\n      treePath\n    );\n    if (!includeHiddenWrites && compoundWriteIsEmpty(merge)) {\n      return completeServerCache;\n    } else {\n      // If the server cache is null, and we don't have a complete cache, we need to return null\n      if (\n        !includeHiddenWrites &&\n        completeServerCache == null &&\n        !compoundWriteHasCompleteWrite(merge, newEmptyPath())\n      ) {\n        return null;\n      } else {\n        const filter = function (write: WriteRecord) {\n          return (\n            (write.visible || includeHiddenWrites) &&\n            (!writeIdsToExclude ||\n              !~writeIdsToExclude.indexOf(write.writeId)) &&\n            (pathContains(write.path, treePath) ||\n              pathContains(treePath, write.path))\n          );\n        };\n        const mergeAtPath = writeTreeLayerTree_(\n          writeTree.allWrites,\n          filter,\n          treePath\n        );\n        const layeredCache = completeServerCache || ChildrenNode.EMPTY_NODE;\n        return compoundWriteApply(mergeAtPath, layeredCache);\n      }\n    }\n  }\n}\n\n/**\n * With optional, underlying server data, attempt to return a children node of children that we have complete data for.\n * Used when creating new views, to pre-fill their complete event children snapshot.\n */\nexport function writeTreeCalcCompleteEventChildren(\n  writeTree: WriteTree,\n  treePath: Path,\n  completeServerChildren: ChildrenNode | null\n) {\n  let completeChildren = ChildrenNode.EMPTY_NODE as Node;\n  const topLevelSet = compoundWriteGetCompleteNode(\n    writeTree.visibleWrites,\n    treePath\n  );\n  if (topLevelSet) {\n    if (!topLevelSet.isLeafNode()) {\n      // we're shadowing everything. Return the children.\n      topLevelSet.forEachChild(PRIORITY_INDEX, (childName, childSnap) => {\n        completeChildren = completeChildren.updateImmediateChild(\n          childName,\n          childSnap\n        );\n      });\n    }\n    return completeChildren;\n  } else if (completeServerChildren) {\n    // Layer any children we have on top of this\n    // We know we don't have a top-level set, so just enumerate existing children\n    const merge = compoundWriteChildCompoundWrite(\n      writeTree.visibleWrites,\n      treePath\n    );\n    completeServerChildren.forEachChild(\n      PRIORITY_INDEX,\n      (childName, childNode) => {\n        const node = compoundWriteApply(\n          compoundWriteChildCompoundWrite(merge, new Path(childName)),\n          childNode\n        );\n        completeChildren = completeChildren.updateImmediateChild(\n          childName,\n          node\n        );\n      }\n    );\n    // Add any complete children we have from the set\n    compoundWriteGetCompleteChildren(merge).forEach(namedNode => {\n      completeChildren = completeChildren.updateImmediateChild(\n        namedNode.name,\n        namedNode.node\n      );\n    });\n    return completeChildren;\n  } else {\n    // We don't have anything to layer on top of. Layer on any children we have\n    // Note that we can return an empty snap if we have a defined delete\n    const merge = compoundWriteChildCompoundWrite(\n      writeTree.visibleWrites,\n      treePath\n    );\n    compoundWriteGetCompleteChildren(merge).forEach(namedNode => {\n      completeChildren = completeChildren.updateImmediateChild(\n        namedNode.name,\n        namedNode.node\n      );\n    });\n    return completeChildren;\n  }\n}\n\n/**\n * Given that the underlying server data has updated, determine what, if anything, needs to be\n * applied to the event cache.\n *\n * Possibilities:\n *\n * 1. No writes are shadowing. Events should be raised, the snap to be applied comes from the server data\n *\n * 2. Some write is completely shadowing. No events to be raised\n *\n * 3. Is partially shadowed. Events\n *\n * Either existingEventSnap or existingServerSnap must exist\n */\nexport function writeTreeCalcEventCacheAfterServerOverwrite(\n  writeTree: WriteTree,\n  treePath: Path,\n  childPath: Path,\n  existingEventSnap: Node | null,\n  existingServerSnap: Node | null\n): Node | null {\n  assert(\n    existingEventSnap || existingServerSnap,\n    'Either existingEventSnap or existingServerSnap must exist'\n  );\n  const path = pathChild(treePath, childPath);\n  if (compoundWriteHasCompleteWrite(writeTree.visibleWrites, path)) {\n    // At this point we can probably guarantee that we're in case 2, meaning no events\n    // May need to check visibility while doing the findRootMostValueAndPath call\n    return null;\n  } else {\n    // No complete shadowing. We're either partially shadowing or not shadowing at all.\n    const childMerge = compoundWriteChildCompoundWrite(\n      writeTree.visibleWrites,\n      path\n    );\n    if (compoundWriteIsEmpty(childMerge)) {\n      // We're not shadowing at all. Case 1\n      return existingServerSnap.getChild(childPath);\n    } else {\n      // This could be more efficient if the serverNode + updates doesn't change the eventSnap\n      // However this is tricky to find out, since user updates don't necessary change the server\n      // snap, e.g. priority updates on empty nodes, or deep deletes. Another special case is if the server\n      // adds nodes, but doesn't change any existing writes. It is therefore not enough to\n      // only check if the updates change the serverNode.\n      // Maybe check if the merge tree contains these special cases and only do a full overwrite in that case?\n      return compoundWriteApply(\n        childMerge,\n        existingServerSnap.getChild(childPath)\n      );\n    }\n  }\n}\n\n/**\n * Returns a complete child for a given server snap after applying all user writes or null if there is no\n * complete child for this ChildKey.\n */\nexport function writeTreeCalcCompleteChild(\n  writeTree: WriteTree,\n  treePath: Path,\n  childKey: string,\n  existingServerSnap: CacheNode\n): Node | null {\n  const path = pathChild(treePath, childKey);\n  const shadowingNode = compoundWriteGetCompleteNode(\n    writeTree.visibleWrites,\n    path\n  );\n  if (shadowingNode != null) {\n    return shadowingNode;\n  } else {\n    if (existingServerSnap.isCompleteForChild(childKey)) {\n      const childMerge = compoundWriteChildCompoundWrite(\n        writeTree.visibleWrites,\n        path\n      );\n      return compoundWriteApply(\n        childMerge,\n        existingServerSnap.getNode().getImmediateChild(childKey)\n      );\n    } else {\n      return null;\n    }\n  }\n}\n\n/**\n * Returns a node if there is a complete overwrite for this path. More specifically, if there is a write at\n * a higher path, this will return the child of that write relative to the write and this path.\n * Returns null if there is no write at this path.\n */\nexport function writeTreeShadowingWrite(\n  writeTree: WriteTree,\n  path: Path\n): Node | null {\n  return compoundWriteGetCompleteNode(writeTree.visibleWrites, path);\n}\n\n/**\n * This method is used when processing child remove events on a query. If we can, we pull in children that were outside\n * the window, but may now be in the window.\n */\nexport function writeTreeCalcIndexedSlice(\n  writeTree: WriteTree,\n  treePath: Path,\n  completeServerData: Node | null,\n  startPost: NamedNode,\n  count: number,\n  reverse: boolean,\n  index: Index\n): NamedNode[] {\n  let toIterate: Node;\n  const merge = compoundWriteChildCompoundWrite(\n    writeTree.visibleWrites,\n    treePath\n  );\n  const shadowingNode = compoundWriteGetCompleteNode(merge, newEmptyPath());\n  if (shadowingNode != null) {\n    toIterate = shadowingNode;\n  } else if (completeServerData != null) {\n    toIterate = compoundWriteApply(merge, completeServerData);\n  } else {\n    // no children to iterate on\n    return [];\n  }\n  toIterate = toIterate.withIndex(index);\n  if (!toIterate.isEmpty() && !toIterate.isLeafNode()) {\n    const nodes = [];\n    const cmp = index.getCompare();\n    const iter = reverse\n      ? (toIterate as ChildrenNode).getReverseIteratorFrom(startPost, index)\n      : (toIterate as ChildrenNode).getIteratorFrom(startPost, index);\n    let next = iter.getNext();\n    while (next && nodes.length < count) {\n      if (cmp(next, startPost) !== 0) {\n        nodes.push(next);\n      }\n      next = iter.getNext();\n    }\n    return nodes;\n  } else {\n    return [];\n  }\n}\n\nexport function newWriteTree(): WriteTree {\n  return {\n    visibleWrites: CompoundWrite.empty(),\n    allWrites: [],\n    lastWriteId: -1\n  };\n}\n\n/**\n * WriteTree tracks all pending user-initiated writes and has methods to calculate the result of merging them\n * with underlying server data (to create \"event cache\" data).  Pending writes are added with addOverwrite()\n * and addMerge(), and removed with removeWrite().\n */\nexport interface WriteTree {\n  /**\n   * A tree tracking the result of applying all visible writes.  This does not include transactions with\n   * applyLocally=false or writes that are completely shadowed by other writes.\n   */\n  visibleWrites: CompoundWrite;\n\n  /**\n   * A list of all pending writes, regardless of visibility and shadowed-ness.  Used to calculate arbitrary\n   * sets of the changed data, such as hidden writes (from transactions) or changes with certain writes excluded (also\n   * used by transactions).\n   */\n  allWrites: WriteRecord[];\n\n  lastWriteId: number;\n}\n\n/**\n * If possible, returns a complete event cache, using the underlying server data if possible. In addition, can be used\n * to get a cache that includes hidden writes, and excludes arbitrary writes. Note that customizing the returned node\n * can lead to a more expensive calculation.\n *\n * @param writeIdsToExclude - Optional writes to exclude.\n * @param includeHiddenWrites - Defaults to false, whether or not to layer on writes with visible set to false\n */\nexport function writeTreeRefCalcCompleteEventCache(\n  writeTreeRef: WriteTreeRef,\n  completeServerCache: Node | null,\n  writeIdsToExclude?: number[],\n  includeHiddenWrites?: boolean\n): Node | null {\n  return writeTreeCalcCompleteEventCache(\n    writeTreeRef.writeTree,\n    writeTreeRef.treePath,\n    completeServerCache,\n    writeIdsToExclude,\n    includeHiddenWrites\n  );\n}\n\n/**\n * If possible, returns a children node containing all of the complete children we have data for. The returned data is a\n * mix of the given server data and write data.\n *\n */\nexport function writeTreeRefCalcCompleteEventChildren(\n  writeTreeRef: WriteTreeRef,\n  completeServerChildren: ChildrenNode | null\n): ChildrenNode {\n  return writeTreeCalcCompleteEventChildren(\n    writeTreeRef.writeTree,\n    writeTreeRef.treePath,\n    completeServerChildren\n  ) as ChildrenNode;\n}\n\n/**\n * Given that either the underlying server data has updated or the outstanding writes have updated, determine what,\n * if anything, needs to be applied to the event cache.\n *\n * Possibilities:\n *\n * 1. No writes are shadowing. Events should be raised, the snap to be applied comes from the server data\n *\n * 2. Some write is completely shadowing. No events to be raised\n *\n * 3. Is partially shadowed. Events should be raised\n *\n * Either existingEventSnap or existingServerSnap must exist, this is validated via an assert\n *\n *\n */\nexport function writeTreeRefCalcEventCacheAfterServerOverwrite(\n  writeTreeRef: WriteTreeRef,\n  path: Path,\n  existingEventSnap: Node | null,\n  existingServerSnap: Node | null\n): Node | null {\n  return writeTreeCalcEventCacheAfterServerOverwrite(\n    writeTreeRef.writeTree,\n    writeTreeRef.treePath,\n    path,\n    existingEventSnap,\n    existingServerSnap\n  );\n}\n\n/**\n * Returns a node if there is a complete overwrite for this path. More specifically, if there is a write at\n * a higher path, this will return the child of that write relative to the write and this path.\n * Returns null if there is no write at this path.\n *\n */\nexport function writeTreeRefShadowingWrite(\n  writeTreeRef: WriteTreeRef,\n  path: Path\n): Node | null {\n  return writeTreeShadowingWrite(\n    writeTreeRef.writeTree,\n    pathChild(writeTreeRef.treePath, path)\n  );\n}\n\n/**\n * This method is used when processing child remove events on a query. If we can, we pull in children that were outside\n * the window, but may now be in the window\n */\nexport function writeTreeRefCalcIndexedSlice(\n  writeTreeRef: WriteTreeRef,\n  completeServerData: Node | null,\n  startPost: NamedNode,\n  count: number,\n  reverse: boolean,\n  index: Index\n): NamedNode[] {\n  return writeTreeCalcIndexedSlice(\n    writeTreeRef.writeTree,\n    writeTreeRef.treePath,\n    completeServerData,\n    startPost,\n    count,\n    reverse,\n    index\n  );\n}\n\n/**\n * Returns a complete child for a given server snap after applying all user writes or null if there is no\n * complete child for this ChildKey.\n */\nexport function writeTreeRefCalcCompleteChild(\n  writeTreeRef: WriteTreeRef,\n  childKey: string,\n  existingServerCache: CacheNode\n): Node | null {\n  return writeTreeCalcCompleteChild(\n    writeTreeRef.writeTree,\n    writeTreeRef.treePath,\n    childKey,\n    existingServerCache\n  );\n}\n\n/**\n * Return a WriteTreeRef for a child.\n */\nexport function writeTreeRefChild(\n  writeTreeRef: WriteTreeRef,\n  childName: string\n): WriteTreeRef {\n  return newWriteTreeRef(\n    pathChild(writeTreeRef.treePath, childName),\n    writeTreeRef.writeTree\n  );\n}\n\nexport function newWriteTreeRef(\n  path: Path,\n  writeTree: WriteTree\n): WriteTreeRef {\n  return {\n    treePath: path,\n    writeTree\n  };\n}\n\n/**\n * A WriteTreeRef wraps a WriteTree and a path, for convenient access to a particular subtree.  All of the methods\n * just proxy to the underlying WriteTree.\n *\n */\nexport interface WriteTreeRef {\n  /**\n   * The path to this particular write tree ref. Used for calling methods on writeTree_ while exposing a simpler\n   * interface to callers.\n   */\n  readonly treePath: Path;\n\n  /**\n   * * A reference to the actual tree of write data. All methods are pass-through to the tree, but with the appropriate\n   * path prefixed.\n   *\n   * This lets us make cheap references to points in the tree for sync points without having to copy and maintain all of\n   * the data.\n   */\n  readonly writeTree: WriteTree;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, assertionError } from '@firebase/util';\n\nimport {\n  Change,\n  ChangeType,\n  changeChildAdded,\n  changeChildChanged,\n  changeChildRemoved\n} from './Change';\n\nexport class ChildChangeAccumulator {\n  private readonly changeMap: Map<string, Change> = new Map();\n\n  trackChildChange(change: Change) {\n    const type = change.type;\n    const childKey = change.childName!;\n    assert(\n      type === ChangeType.CHILD_ADDED ||\n        type === ChangeType.CHILD_CHANGED ||\n        type === ChangeType.CHILD_REMOVED,\n      'Only child changes supported for tracking'\n    );\n    assert(\n      childKey !== '.priority',\n      'Only non-priority child changes can be tracked.'\n    );\n    const oldChange = this.changeMap.get(childKey);\n    if (oldChange) {\n      const oldType = oldChange.type;\n      if (\n        type === ChangeType.CHILD_ADDED &&\n        oldType === ChangeType.CHILD_REMOVED\n      ) {\n        this.changeMap.set(\n          childKey,\n          changeChildChanged(\n            childKey,\n            change.snapshotNode,\n            oldChange.snapshotNode\n          )\n        );\n      } else if (\n        type === ChangeType.CHILD_REMOVED &&\n        oldType === ChangeType.CHILD_ADDED\n      ) {\n        this.changeMap.delete(childKey);\n      } else if (\n        type === ChangeType.CHILD_REMOVED &&\n        oldType === ChangeType.CHILD_CHANGED\n      ) {\n        this.changeMap.set(\n          childKey,\n          changeChildRemoved(childKey, oldChange.oldSnap)\n        );\n      } else if (\n        type === ChangeType.CHILD_CHANGED &&\n        oldType === ChangeType.CHILD_ADDED\n      ) {\n        this.changeMap.set(\n          childKey,\n          changeChildAdded(childKey, change.snapshotNode)\n        );\n      } else if (\n        type === ChangeType.CHILD_CHANGED &&\n        oldType === ChangeType.CHILD_CHANGED\n      ) {\n        this.changeMap.set(\n          childKey,\n          changeChildChanged(childKey, change.snapshotNode, oldChange.oldSnap)\n        );\n      } else {\n        throw assertionError(\n          'Illegal combination of changes: ' +\n            change +\n            ' occurred after ' +\n            oldChange\n        );\n      }\n    } else {\n      this.changeMap.set(childKey, change);\n    }\n  }\n\n  getChanges(): Change[] {\n    return Array.from(this.changeMap.values());\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Index } from '../snap/indexes/Index';\nimport { NamedNode, Node } from '../snap/Node';\nimport {\n  WriteTreeRef,\n  writeTreeRefCalcCompleteChild,\n  writeTreeRefCalcIndexedSlice\n} from '../WriteTree';\n\nimport { CacheNode } from './CacheNode';\nimport { ViewCache, viewCacheGetCompleteServerSnap } from './ViewCache';\n\n/**\n * Since updates to filtered nodes might require nodes to be pulled in from \"outside\" the node, this interface\n * can help to get complete children that can be pulled in.\n * A class implementing this interface takes potentially multiple sources (e.g. user writes, server data from\n * other views etc.) to try it's best to get a complete child that might be useful in pulling into the view.\n *\n * @interface\n */\nexport interface CompleteChildSource {\n  getCompleteChild(childKey: string): Node | null;\n\n  getChildAfterChild(\n    index: Index,\n    child: NamedNode,\n    reverse: boolean\n  ): NamedNode | null;\n}\n\n/**\n * An implementation of CompleteChildSource that never returns any additional children\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport class NoCompleteChildSource_ implements CompleteChildSource {\n  getCompleteChild(childKey?: string): Node | null {\n    return null;\n  }\n  getChildAfterChild(\n    index?: Index,\n    child?: NamedNode,\n    reverse?: boolean\n  ): NamedNode | null {\n    return null;\n  }\n}\n\n/**\n * Singleton instance.\n */\nexport const NO_COMPLETE_CHILD_SOURCE = new NoCompleteChildSource_();\n\n/**\n * An implementation of CompleteChildSource that uses a WriteTree in addition to any other server data or\n * old event caches available to calculate complete children.\n */\nexport class WriteTreeCompleteChildSource implements CompleteChildSource {\n  constructor(\n    private writes_: WriteTreeRef,\n    private viewCache_: ViewCache,\n    private optCompleteServerCache_: Node | null = null\n  ) {}\n  getCompleteChild(childKey: string): Node | null {\n    const node = this.viewCache_.eventCache;\n    if (node.isCompleteForChild(childKey)) {\n      return node.getNode().getImmediateChild(childKey);\n    } else {\n      const serverNode =\n        this.optCompleteServerCache_ != null\n          ? new CacheNode(this.optCompleteServerCache_, true, false)\n          : this.viewCache_.serverCache;\n      return writeTreeRefCalcCompleteChild(this.writes_, childKey, serverNode);\n    }\n  }\n  getChildAfterChild(\n    index: Index,\n    child: NamedNode,\n    reverse: boolean\n  ): NamedNode | null {\n    const completeServerData =\n      this.optCompleteServerCache_ != null\n        ? this.optCompleteServerCache_\n        : viewCacheGetCompleteServerSnap(this.viewCache_);\n    const nodes = writeTreeRefCalcIndexedSlice(\n      this.writes_,\n      completeServerData,\n      child,\n      1,\n      reverse,\n      index\n    );\n    if (nodes.length === 0) {\n      return null;\n    } else {\n      return nodes[0];\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, assertionError } from '@firebase/util';\n\nimport { AckUserWrite } from '../operation/AckUserWrite';\nimport { Merge } from '../operation/Merge';\nimport { Operation, OperationType } from '../operation/Operation';\nimport { Overwrite } from '../operation/Overwrite';\nimport { ChildrenNode } from '../snap/ChildrenNode';\nimport { KEY_INDEX } from '../snap/indexes/KeyIndex';\nimport { Node } from '../snap/Node';\nimport { ImmutableTree } from '../util/ImmutableTree';\nimport {\n  newEmptyPath,\n  Path,\n  pathChild,\n  pathGetBack,\n  pathGetFront,\n  pathGetLength,\n  pathIsEmpty,\n  pathParent,\n  pathPopFront\n} from '../util/Path';\nimport {\n  WriteTreeRef,\n  writeTreeRefCalcCompleteChild,\n  writeTreeRefCalcCompleteEventCache,\n  writeTreeRefCalcCompleteEventChildren,\n  writeTreeRefCalcEventCacheAfterServerOverwrite,\n  writeTreeRefShadowingWrite\n} from '../WriteTree';\n\nimport { Change, changeValue } from './Change';\nimport { ChildChangeAccumulator } from './ChildChangeAccumulator';\nimport {\n  CompleteChildSource,\n  NO_COMPLETE_CHILD_SOURCE,\n  WriteTreeCompleteChildSource\n} from './CompleteChildSource';\nimport { NodeFilter } from './filter/NodeFilter';\nimport {\n  ViewCache,\n  viewCacheGetCompleteEventSnap,\n  viewCacheGetCompleteServerSnap,\n  viewCacheUpdateEventSnap,\n  viewCacheUpdateServerSnap\n} from './ViewCache';\n\nexport interface ProcessorResult {\n  readonly viewCache: ViewCache;\n  readonly changes: Change[];\n}\n\nexport interface ViewProcessor {\n  readonly filter: NodeFilter;\n}\n\nexport function newViewProcessor(filter: NodeFilter): ViewProcessor {\n  return { filter };\n}\n\nexport function viewProcessorAssertIndexed(\n  viewProcessor: ViewProcessor,\n  viewCache: ViewCache\n): void {\n  assert(\n    viewCache.eventCache.getNode().isIndexed(viewProcessor.filter.getIndex()),\n    'Event snap not indexed'\n  );\n  assert(\n    viewCache.serverCache.getNode().isIndexed(viewProcessor.filter.getIndex()),\n    'Server snap not indexed'\n  );\n}\n\nexport function viewProcessorApplyOperation(\n  viewProcessor: ViewProcessor,\n  oldViewCache: ViewCache,\n  operation: Operation,\n  writesCache: WriteTreeRef,\n  completeCache: Node | null\n): ProcessorResult {\n  const accumulator = new ChildChangeAccumulator();\n  let newViewCache, filterServerNode;\n  if (operation.type === OperationType.OVERWRITE) {\n    const overwrite = operation as Overwrite;\n    if (overwrite.source.fromUser) {\n      newViewCache = viewProcessorApplyUserOverwrite(\n        viewProcessor,\n        oldViewCache,\n        overwrite.path,\n        overwrite.snap,\n        writesCache,\n        completeCache,\n        accumulator\n      );\n    } else {\n      assert(overwrite.source.fromServer, 'Unknown source.');\n      // We filter the node if it's a tagged update or the node has been previously filtered  and the\n      // update is not at the root in which case it is ok (and necessary) to mark the node unfiltered\n      // again\n      filterServerNode =\n        overwrite.source.tagged ||\n        (oldViewCache.serverCache.isFiltered() && !pathIsEmpty(overwrite.path));\n      newViewCache = viewProcessorApplyServerOverwrite(\n        viewProcessor,\n        oldViewCache,\n        overwrite.path,\n        overwrite.snap,\n        writesCache,\n        completeCache,\n        filterServerNode,\n        accumulator\n      );\n    }\n  } else if (operation.type === OperationType.MERGE) {\n    const merge = operation as Merge;\n    if (merge.source.fromUser) {\n      newViewCache = viewProcessorApplyUserMerge(\n        viewProcessor,\n        oldViewCache,\n        merge.path,\n        merge.children,\n        writesCache,\n        completeCache,\n        accumulator\n      );\n    } else {\n      assert(merge.source.fromServer, 'Unknown source.');\n      // We filter the node if it's a tagged update or the node has been previously filtered\n      filterServerNode =\n        merge.source.tagged || oldViewCache.serverCache.isFiltered();\n      newViewCache = viewProcessorApplyServerMerge(\n        viewProcessor,\n        oldViewCache,\n        merge.path,\n        merge.children,\n        writesCache,\n        completeCache,\n        filterServerNode,\n        accumulator\n      );\n    }\n  } else if (operation.type === OperationType.ACK_USER_WRITE) {\n    const ackUserWrite = operation as AckUserWrite;\n    if (!ackUserWrite.revert) {\n      newViewCache = viewProcessorAckUserWrite(\n        viewProcessor,\n        oldViewCache,\n        ackUserWrite.path,\n        ackUserWrite.affectedTree,\n        writesCache,\n        completeCache,\n        accumulator\n      );\n    } else {\n      newViewCache = viewProcessorRevertUserWrite(\n        viewProcessor,\n        oldViewCache,\n        ackUserWrite.path,\n        writesCache,\n        completeCache,\n        accumulator\n      );\n    }\n  } else if (operation.type === OperationType.LISTEN_COMPLETE) {\n    newViewCache = viewProcessorListenComplete(\n      viewProcessor,\n      oldViewCache,\n      operation.path,\n      writesCache,\n      accumulator\n    );\n  } else {\n    throw assertionError('Unknown operation type: ' + operation.type);\n  }\n  const changes = accumulator.getChanges();\n  viewProcessorMaybeAddValueEvent(oldViewCache, newViewCache, changes);\n  return { viewCache: newViewCache, changes };\n}\n\nfunction viewProcessorMaybeAddValueEvent(\n  oldViewCache: ViewCache,\n  newViewCache: ViewCache,\n  accumulator: Change[]\n): void {\n  const eventSnap = newViewCache.eventCache;\n  if (eventSnap.isFullyInitialized()) {\n    const isLeafOrEmpty =\n      eventSnap.getNode().isLeafNode() || eventSnap.getNode().isEmpty();\n    const oldCompleteSnap = viewCacheGetCompleteEventSnap(oldViewCache);\n    if (\n      accumulator.length > 0 ||\n      !oldViewCache.eventCache.isFullyInitialized() ||\n      (isLeafOrEmpty && !eventSnap.getNode().equals(oldCompleteSnap)) ||\n      !eventSnap.getNode().getPriority().equals(oldCompleteSnap.getPriority())\n    ) {\n      accumulator.push(\n        changeValue(viewCacheGetCompleteEventSnap(newViewCache))\n      );\n    }\n  }\n}\n\nfunction viewProcessorGenerateEventCacheAfterServerEvent(\n  viewProcessor: ViewProcessor,\n  viewCache: ViewCache,\n  changePath: Path,\n  writesCache: WriteTreeRef,\n  source: CompleteChildSource,\n  accumulator: ChildChangeAccumulator\n): ViewCache {\n  const oldEventSnap = viewCache.eventCache;\n  if (writeTreeRefShadowingWrite(writesCache, changePath) != null) {\n    // we have a shadowing write, ignore changes\n    return viewCache;\n  } else {\n    let newEventCache, serverNode;\n    if (pathIsEmpty(changePath)) {\n      // TODO: figure out how this plays with \"sliding ack windows\"\n      assert(\n        viewCache.serverCache.isFullyInitialized(),\n        'If change path is empty, we must have complete server data'\n      );\n      if (viewCache.serverCache.isFiltered()) {\n        // We need to special case this, because we need to only apply writes to complete children, or\n        // we might end up raising events for incomplete children. If the server data is filtered deep\n        // writes cannot be guaranteed to be complete\n        const serverCache = viewCacheGetCompleteServerSnap(viewCache);\n        const completeChildren =\n          serverCache instanceof ChildrenNode\n            ? serverCache\n            : ChildrenNode.EMPTY_NODE;\n        const completeEventChildren = writeTreeRefCalcCompleteEventChildren(\n          writesCache,\n          completeChildren\n        );\n        newEventCache = viewProcessor.filter.updateFullNode(\n          viewCache.eventCache.getNode(),\n          completeEventChildren,\n          accumulator\n        );\n      } else {\n        const completeNode = writeTreeRefCalcCompleteEventCache(\n          writesCache,\n          viewCacheGetCompleteServerSnap(viewCache)\n        );\n        newEventCache = viewProcessor.filter.updateFullNode(\n          viewCache.eventCache.getNode(),\n          completeNode,\n          accumulator\n        );\n      }\n    } else {\n      const childKey = pathGetFront(changePath);\n      if (childKey === '.priority') {\n        assert(\n          pathGetLength(changePath) === 1,\n          \"Can't have a priority with additional path components\"\n        );\n        const oldEventNode = oldEventSnap.getNode();\n        serverNode = viewCache.serverCache.getNode();\n        // we might have overwrites for this priority\n        const updatedPriority = writeTreeRefCalcEventCacheAfterServerOverwrite(\n          writesCache,\n          changePath,\n          oldEventNode,\n          serverNode\n        );\n        if (updatedPriority != null) {\n          newEventCache = viewProcessor.filter.updatePriority(\n            oldEventNode,\n            updatedPriority\n          );\n        } else {\n          // priority didn't change, keep old node\n          newEventCache = oldEventSnap.getNode();\n        }\n      } else {\n        const childChangePath = pathPopFront(changePath);\n        // update child\n        let newEventChild;\n        if (oldEventSnap.isCompleteForChild(childKey)) {\n          serverNode = viewCache.serverCache.getNode();\n          const eventChildUpdate = writeTreeRefCalcEventCacheAfterServerOverwrite(\n            writesCache,\n            changePath,\n            oldEventSnap.getNode(),\n            serverNode\n          );\n          if (eventChildUpdate != null) {\n            newEventChild = oldEventSnap\n              .getNode()\n              .getImmediateChild(childKey)\n              .updateChild(childChangePath, eventChildUpdate);\n          } else {\n            // Nothing changed, just keep the old child\n            newEventChild = oldEventSnap.getNode().getImmediateChild(childKey);\n          }\n        } else {\n          newEventChild = writeTreeRefCalcCompleteChild(\n            writesCache,\n            childKey,\n            viewCache.serverCache\n          );\n        }\n        if (newEventChild != null) {\n          newEventCache = viewProcessor.filter.updateChild(\n            oldEventSnap.getNode(),\n            childKey,\n            newEventChild,\n            childChangePath,\n            source,\n            accumulator\n          );\n        } else {\n          // no complete child available or no change\n          newEventCache = oldEventSnap.getNode();\n        }\n      }\n    }\n    return viewCacheUpdateEventSnap(\n      viewCache,\n      newEventCache,\n      oldEventSnap.isFullyInitialized() || pathIsEmpty(changePath),\n      viewProcessor.filter.filtersNodes()\n    );\n  }\n}\n\nfunction viewProcessorApplyServerOverwrite(\n  viewProcessor: ViewProcessor,\n  oldViewCache: ViewCache,\n  changePath: Path,\n  changedSnap: Node,\n  writesCache: WriteTreeRef,\n  completeCache: Node | null,\n  filterServerNode: boolean,\n  accumulator: ChildChangeAccumulator\n): ViewCache {\n  const oldServerSnap = oldViewCache.serverCache;\n  let newServerCache;\n  const serverFilter = filterServerNode\n    ? viewProcessor.filter\n    : viewProcessor.filter.getIndexedFilter();\n  if (pathIsEmpty(changePath)) {\n    newServerCache = serverFilter.updateFullNode(\n      oldServerSnap.getNode(),\n      changedSnap,\n      null\n    );\n  } else if (serverFilter.filtersNodes() && !oldServerSnap.isFiltered()) {\n    // we want to filter the server node, but we didn't filter the server node yet, so simulate a full update\n    const newServerNode = oldServerSnap\n      .getNode()\n      .updateChild(changePath, changedSnap);\n    newServerCache = serverFilter.updateFullNode(\n      oldServerSnap.getNode(),\n      newServerNode,\n      null\n    );\n  } else {\n    const childKey = pathGetFront(changePath);\n    if (\n      !oldServerSnap.isCompleteForPath(changePath) &&\n      pathGetLength(changePath) > 1\n    ) {\n      // We don't update incomplete nodes with updates intended for other listeners\n      return oldViewCache;\n    }\n    const childChangePath = pathPopFront(changePath);\n    const childNode = oldServerSnap.getNode().getImmediateChild(childKey);\n    const newChildNode = childNode.updateChild(childChangePath, changedSnap);\n    if (childKey === '.priority') {\n      newServerCache = serverFilter.updatePriority(\n        oldServerSnap.getNode(),\n        newChildNode\n      );\n    } else {\n      newServerCache = serverFilter.updateChild(\n        oldServerSnap.getNode(),\n        childKey,\n        newChildNode,\n        childChangePath,\n        NO_COMPLETE_CHILD_SOURCE,\n        null\n      );\n    }\n  }\n  const newViewCache = viewCacheUpdateServerSnap(\n    oldViewCache,\n    newServerCache,\n    oldServerSnap.isFullyInitialized() || pathIsEmpty(changePath),\n    serverFilter.filtersNodes()\n  );\n  const source = new WriteTreeCompleteChildSource(\n    writesCache,\n    newViewCache,\n    completeCache\n  );\n  return viewProcessorGenerateEventCacheAfterServerEvent(\n    viewProcessor,\n    newViewCache,\n    changePath,\n    writesCache,\n    source,\n    accumulator\n  );\n}\n\nfunction viewProcessorApplyUserOverwrite(\n  viewProcessor: ViewProcessor,\n  oldViewCache: ViewCache,\n  changePath: Path,\n  changedSnap: Node,\n  writesCache: WriteTreeRef,\n  completeCache: Node | null,\n  accumulator: ChildChangeAccumulator\n): ViewCache {\n  const oldEventSnap = oldViewCache.eventCache;\n  let newViewCache, newEventCache;\n  const source = new WriteTreeCompleteChildSource(\n    writesCache,\n    oldViewCache,\n    completeCache\n  );\n  if (pathIsEmpty(changePath)) {\n    newEventCache = viewProcessor.filter.updateFullNode(\n      oldViewCache.eventCache.getNode(),\n      changedSnap,\n      accumulator\n    );\n    newViewCache = viewCacheUpdateEventSnap(\n      oldViewCache,\n      newEventCache,\n      true,\n      viewProcessor.filter.filtersNodes()\n    );\n  } else {\n    const childKey = pathGetFront(changePath);\n    if (childKey === '.priority') {\n      newEventCache = viewProcessor.filter.updatePriority(\n        oldViewCache.eventCache.getNode(),\n        changedSnap\n      );\n      newViewCache = viewCacheUpdateEventSnap(\n        oldViewCache,\n        newEventCache,\n        oldEventSnap.isFullyInitialized(),\n        oldEventSnap.isFiltered()\n      );\n    } else {\n      const childChangePath = pathPopFront(changePath);\n      const oldChild = oldEventSnap.getNode().getImmediateChild(childKey);\n      let newChild;\n      if (pathIsEmpty(childChangePath)) {\n        // Child overwrite, we can replace the child\n        newChild = changedSnap;\n      } else {\n        const childNode = source.getCompleteChild(childKey);\n        if (childNode != null) {\n          if (\n            pathGetBack(childChangePath) === '.priority' &&\n            childNode.getChild(pathParent(childChangePath)).isEmpty()\n          ) {\n            // This is a priority update on an empty node. If this node exists on the server, the\n            // server will send down the priority in the update, so ignore for now\n            newChild = childNode;\n          } else {\n            newChild = childNode.updateChild(childChangePath, changedSnap);\n          }\n        } else {\n          // There is no complete child node available\n          newChild = ChildrenNode.EMPTY_NODE;\n        }\n      }\n      if (!oldChild.equals(newChild)) {\n        const newEventSnap = viewProcessor.filter.updateChild(\n          oldEventSnap.getNode(),\n          childKey,\n          newChild,\n          childChangePath,\n          source,\n          accumulator\n        );\n        newViewCache = viewCacheUpdateEventSnap(\n          oldViewCache,\n          newEventSnap,\n          oldEventSnap.isFullyInitialized(),\n          viewProcessor.filter.filtersNodes()\n        );\n      } else {\n        newViewCache = oldViewCache;\n      }\n    }\n  }\n  return newViewCache;\n}\n\nfunction viewProcessorCacheHasChild(\n  viewCache: ViewCache,\n  childKey: string\n): boolean {\n  return viewCache.eventCache.isCompleteForChild(childKey);\n}\n\nfunction viewProcessorApplyUserMerge(\n  viewProcessor: ViewProcessor,\n  viewCache: ViewCache,\n  path: Path,\n  changedChildren: ImmutableTree<Node>,\n  writesCache: WriteTreeRef,\n  serverCache: Node | null,\n  accumulator: ChildChangeAccumulator\n): ViewCache {\n  // HACK: In the case of a limit query, there may be some changes that bump things out of the\n  // window leaving room for new items.  It's important we process these changes first, so we\n  // iterate the changes twice, first processing any that affect items currently in view.\n  // TODO: I consider an item \"in view\" if cacheHasChild is true, which checks both the server\n  // and event snap.  I'm not sure if this will result in edge cases when a child is in one but\n  // not the other.\n  let curViewCache = viewCache;\n  changedChildren.foreach((relativePath, childNode) => {\n    const writePath = pathChild(path, relativePath);\n    if (viewProcessorCacheHasChild(viewCache, pathGetFront(writePath))) {\n      curViewCache = viewProcessorApplyUserOverwrite(\n        viewProcessor,\n        curViewCache,\n        writePath,\n        childNode,\n        writesCache,\n        serverCache,\n        accumulator\n      );\n    }\n  });\n\n  changedChildren.foreach((relativePath, childNode) => {\n    const writePath = pathChild(path, relativePath);\n    if (!viewProcessorCacheHasChild(viewCache, pathGetFront(writePath))) {\n      curViewCache = viewProcessorApplyUserOverwrite(\n        viewProcessor,\n        curViewCache,\n        writePath,\n        childNode,\n        writesCache,\n        serverCache,\n        accumulator\n      );\n    }\n  });\n\n  return curViewCache;\n}\n\nfunction viewProcessorApplyMerge(\n  viewProcessor: ViewProcessor,\n  node: Node,\n  merge: ImmutableTree<Node>\n): Node {\n  merge.foreach((relativePath, childNode) => {\n    node = node.updateChild(relativePath, childNode);\n  });\n  return node;\n}\n\nfunction viewProcessorApplyServerMerge(\n  viewProcessor: ViewProcessor,\n  viewCache: ViewCache,\n  path: Path,\n  changedChildren: ImmutableTree<Node>,\n  writesCache: WriteTreeRef,\n  serverCache: Node | null,\n  filterServerNode: boolean,\n  accumulator: ChildChangeAccumulator\n): ViewCache {\n  // If we don't have a cache yet, this merge was intended for a previously listen in the same location. Ignore it and\n  // wait for the complete data update coming soon.\n  if (\n    viewCache.serverCache.getNode().isEmpty() &&\n    !viewCache.serverCache.isFullyInitialized()\n  ) {\n    return viewCache;\n  }\n\n  // HACK: In the case of a limit query, there may be some changes that bump things out of the\n  // window leaving room for new items.  It's important we process these changes first, so we\n  // iterate the changes twice, first processing any that affect items currently in view.\n  // TODO: I consider an item \"in view\" if cacheHasChild is true, which checks both the server\n  // and event snap.  I'm not sure if this will result in edge cases when a child is in one but\n  // not the other.\n  let curViewCache = viewCache;\n  let viewMergeTree;\n  if (pathIsEmpty(path)) {\n    viewMergeTree = changedChildren;\n  } else {\n    viewMergeTree = new ImmutableTree<Node>(null).setTree(\n      path,\n      changedChildren\n    );\n  }\n  const serverNode = viewCache.serverCache.getNode();\n  viewMergeTree.children.inorderTraversal((childKey, childTree) => {\n    if (serverNode.hasChild(childKey)) {\n      const serverChild = viewCache.serverCache\n        .getNode()\n        .getImmediateChild(childKey);\n      const newChild = viewProcessorApplyMerge(\n        viewProcessor,\n        serverChild,\n        childTree\n      );\n      curViewCache = viewProcessorApplyServerOverwrite(\n        viewProcessor,\n        curViewCache,\n        new Path(childKey),\n        newChild,\n        writesCache,\n        serverCache,\n        filterServerNode,\n        accumulator\n      );\n    }\n  });\n  viewMergeTree.children.inorderTraversal((childKey, childMergeTree) => {\n    const isUnknownDeepMerge =\n      !viewCache.serverCache.isCompleteForChild(childKey) &&\n      childMergeTree.value === undefined;\n    if (!serverNode.hasChild(childKey) && !isUnknownDeepMerge) {\n      const serverChild = viewCache.serverCache\n        .getNode()\n        .getImmediateChild(childKey);\n      const newChild = viewProcessorApplyMerge(\n        viewProcessor,\n        serverChild,\n        childMergeTree\n      );\n      curViewCache = viewProcessorApplyServerOverwrite(\n        viewProcessor,\n        curViewCache,\n        new Path(childKey),\n        newChild,\n        writesCache,\n        serverCache,\n        filterServerNode,\n        accumulator\n      );\n    }\n  });\n\n  return curViewCache;\n}\n\nfunction viewProcessorAckUserWrite(\n  viewProcessor: ViewProcessor,\n  viewCache: ViewCache,\n  ackPath: Path,\n  affectedTree: ImmutableTree<boolean>,\n  writesCache: WriteTreeRef,\n  completeCache: Node | null,\n  accumulator: ChildChangeAccumulator\n): ViewCache {\n  if (writeTreeRefShadowingWrite(writesCache, ackPath) != null) {\n    return viewCache;\n  }\n\n  // Only filter server node if it is currently filtered\n  const filterServerNode = viewCache.serverCache.isFiltered();\n\n  // Essentially we'll just get our existing server cache for the affected paths and re-apply it as a server update\n  // now that it won't be shadowed.\n  const serverCache = viewCache.serverCache;\n  if (affectedTree.value != null) {\n    // This is an overwrite.\n    if (\n      (pathIsEmpty(ackPath) && serverCache.isFullyInitialized()) ||\n      serverCache.isCompleteForPath(ackPath)\n    ) {\n      return viewProcessorApplyServerOverwrite(\n        viewProcessor,\n        viewCache,\n        ackPath,\n        serverCache.getNode().getChild(ackPath),\n        writesCache,\n        completeCache,\n        filterServerNode,\n        accumulator\n      );\n    } else if (pathIsEmpty(ackPath)) {\n      // This is a goofy edge case where we are acking data at this location but don't have full data.  We\n      // should just re-apply whatever we have in our cache as a merge.\n      let changedChildren = new ImmutableTree<Node>(null);\n      serverCache.getNode().forEachChild(KEY_INDEX, (name, node) => {\n        changedChildren = changedChildren.set(new Path(name), node);\n      });\n      return viewProcessorApplyServerMerge(\n        viewProcessor,\n        viewCache,\n        ackPath,\n        changedChildren,\n        writesCache,\n        completeCache,\n        filterServerNode,\n        accumulator\n      );\n    } else {\n      return viewCache;\n    }\n  } else {\n    // This is a merge.\n    let changedChildren = new ImmutableTree<Node>(null);\n    affectedTree.foreach((mergePath, value) => {\n      const serverCachePath = pathChild(ackPath, mergePath);\n      if (serverCache.isCompleteForPath(serverCachePath)) {\n        changedChildren = changedChildren.set(\n          mergePath,\n          serverCache.getNode().getChild(serverCachePath)\n        );\n      }\n    });\n    return viewProcessorApplyServerMerge(\n      viewProcessor,\n      viewCache,\n      ackPath,\n      changedChildren,\n      writesCache,\n      completeCache,\n      filterServerNode,\n      accumulator\n    );\n  }\n}\n\nfunction viewProcessorListenComplete(\n  viewProcessor: ViewProcessor,\n  viewCache: ViewCache,\n  path: Path,\n  writesCache: WriteTreeRef,\n  accumulator: ChildChangeAccumulator\n): ViewCache {\n  const oldServerNode = viewCache.serverCache;\n  const newViewCache = viewCacheUpdateServerSnap(\n    viewCache,\n    oldServerNode.getNode(),\n    oldServerNode.isFullyInitialized() || pathIsEmpty(path),\n    oldServerNode.isFiltered()\n  );\n  return viewProcessorGenerateEventCacheAfterServerEvent(\n    viewProcessor,\n    newViewCache,\n    path,\n    writesCache,\n    NO_COMPLETE_CHILD_SOURCE,\n    accumulator\n  );\n}\n\nfunction viewProcessorRevertUserWrite(\n  viewProcessor: ViewProcessor,\n  viewCache: ViewCache,\n  path: Path,\n  writesCache: WriteTreeRef,\n  completeServerCache: Node | null,\n  accumulator: ChildChangeAccumulator\n): ViewCache {\n  let complete;\n  if (writeTreeRefShadowingWrite(writesCache, path) != null) {\n    return viewCache;\n  } else {\n    const source = new WriteTreeCompleteChildSource(\n      writesCache,\n      viewCache,\n      completeServerCache\n    );\n    const oldEventCache = viewCache.eventCache.getNode();\n    let newEventCache;\n    if (pathIsEmpty(path) || pathGetFront(path) === '.priority') {\n      let newNode;\n      if (viewCache.serverCache.isFullyInitialized()) {\n        newNode = writeTreeRefCalcCompleteEventCache(\n          writesCache,\n          viewCacheGetCompleteServerSnap(viewCache)\n        );\n      } else {\n        const serverChildren = viewCache.serverCache.getNode();\n        assert(\n          serverChildren instanceof ChildrenNode,\n          'serverChildren would be complete if leaf node'\n        );\n        newNode = writeTreeRefCalcCompleteEventChildren(\n          writesCache,\n          serverChildren as ChildrenNode\n        );\n      }\n      newNode = newNode as Node;\n      newEventCache = viewProcessor.filter.updateFullNode(\n        oldEventCache,\n        newNode,\n        accumulator\n      );\n    } else {\n      const childKey = pathGetFront(path);\n      let newChild = writeTreeRefCalcCompleteChild(\n        writesCache,\n        childKey,\n        viewCache.serverCache\n      );\n      if (\n        newChild == null &&\n        viewCache.serverCache.isCompleteForChild(childKey)\n      ) {\n        newChild = oldEventCache.getImmediateChild(childKey);\n      }\n      if (newChild != null) {\n        newEventCache = viewProcessor.filter.updateChild(\n          oldEventCache,\n          childKey,\n          newChild,\n          pathPopFront(path),\n          source,\n          accumulator\n        );\n      } else if (viewCache.eventCache.getNode().hasChild(childKey)) {\n        // No complete child available, delete the existing one, if any\n        newEventCache = viewProcessor.filter.updateChild(\n          oldEventCache,\n          childKey,\n          ChildrenNode.EMPTY_NODE,\n          pathPopFront(path),\n          source,\n          accumulator\n        );\n      } else {\n        newEventCache = oldEventCache;\n      }\n      if (\n        newEventCache.isEmpty() &&\n        viewCache.serverCache.isFullyInitialized()\n      ) {\n        // We might have reverted all child writes. Maybe the old event was a leaf node\n        complete = writeTreeRefCalcCompleteEventCache(\n          writesCache,\n          viewCacheGetCompleteServerSnap(viewCache)\n        );\n        if (complete.isLeafNode()) {\n          newEventCache = viewProcessor.filter.updateFullNode(\n            newEventCache,\n            complete,\n            accumulator\n          );\n        }\n      }\n    }\n    complete =\n      viewCache.serverCache.isFullyInitialized() ||\n      writeTreeRefShadowingWrite(writesCache, newEmptyPath()) != null;\n    return viewCacheUpdateEventSnap(\n      viewCache,\n      newEventCache,\n      complete,\n      viewProcessor.filter.filtersNodes()\n    );\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { Operation, OperationType } from '../operation/Operation';\nimport { ChildrenNode } from '../snap/ChildrenNode';\nimport { PRIORITY_INDEX } from '../snap/indexes/PriorityIndex';\nimport { Node } from '../snap/Node';\nimport { Path, pathGetFront, pathIsEmpty } from '../util/Path';\nimport { WriteTreeRef } from '../WriteTree';\n\nimport { CacheNode } from './CacheNode';\nimport { Change, changeChildAdded, changeValue } from './Change';\nimport { CancelEvent, Event } from './Event';\nimport {\n  EventGenerator,\n  eventGeneratorGenerateEventsForChanges\n} from './EventGenerator';\nimport { EventRegistration, QueryContext } from './EventRegistration';\nimport { IndexedFilter } from './filter/IndexedFilter';\nimport { queryParamsGetNodeFilter } from './QueryParams';\nimport {\n  newViewCache,\n  ViewCache,\n  viewCacheGetCompleteEventSnap,\n  viewCacheGetCompleteServerSnap\n} from './ViewCache';\nimport {\n  newViewProcessor,\n  ViewProcessor,\n  viewProcessorApplyOperation,\n  viewProcessorAssertIndexed\n} from './ViewProcessor';\n\n/**\n * A view represents a specific location and query that has 1 or more event registrations.\n *\n * It does several things:\n *  - Maintains the list of event registrations for this location/query.\n *  - Maintains a cache of the data visible for this location/query.\n *  - Applies new operations (via applyOperation), updates the cache, and based on the event\n *    registrations returns the set of events to be raised.\n */\nexport class View {\n  processor_: ViewProcessor;\n  viewCache_: ViewCache;\n  eventRegistrations_: EventRegistration[] = [];\n  eventGenerator_: EventGenerator;\n\n  constructor(private query_: QueryContext, initialViewCache: ViewCache) {\n    const params = this.query_._queryParams;\n\n    const indexFilter = new IndexedFilter(params.getIndex());\n    const filter = queryParamsGetNodeFilter(params);\n\n    this.processor_ = newViewProcessor(filter);\n\n    const initialServerCache = initialViewCache.serverCache;\n    const initialEventCache = initialViewCache.eventCache;\n\n    // Don't filter server node with other filter than index, wait for tagged listen\n    const serverSnap = indexFilter.updateFullNode(\n      ChildrenNode.EMPTY_NODE,\n      initialServerCache.getNode(),\n      null\n    );\n    const eventSnap = filter.updateFullNode(\n      ChildrenNode.EMPTY_NODE,\n      initialEventCache.getNode(),\n      null\n    );\n    const newServerCache = new CacheNode(\n      serverSnap,\n      initialServerCache.isFullyInitialized(),\n      indexFilter.filtersNodes()\n    );\n    const newEventCache = new CacheNode(\n      eventSnap,\n      initialEventCache.isFullyInitialized(),\n      filter.filtersNodes()\n    );\n\n    this.viewCache_ = newViewCache(newEventCache, newServerCache);\n    this.eventGenerator_ = new EventGenerator(this.query_);\n  }\n\n  get query(): QueryContext {\n    return this.query_;\n  }\n}\n\nexport function viewGetServerCache(view: View): Node | null {\n  return view.viewCache_.serverCache.getNode();\n}\n\nexport function viewGetCompleteNode(view: View): Node | null {\n  return viewCacheGetCompleteEventSnap(view.viewCache_);\n}\n\nexport function viewGetCompleteServerCache(\n  view: View,\n  path: Path\n): Node | null {\n  const cache = viewCacheGetCompleteServerSnap(view.viewCache_);\n  if (cache) {\n    // If this isn't a \"loadsAllData\" view, then cache isn't actually a complete cache and\n    // we need to see if it contains the child we're interested in.\n    if (\n      view.query._queryParams.loadsAllData() ||\n      (!pathIsEmpty(path) &&\n        !cache.getImmediateChild(pathGetFront(path)).isEmpty())\n    ) {\n      return cache.getChild(path);\n    }\n  }\n  return null;\n}\n\nexport function viewIsEmpty(view: View): boolean {\n  return view.eventRegistrations_.length === 0;\n}\n\nexport function viewAddEventRegistration(\n  view: View,\n  eventRegistration: EventRegistration\n) {\n  view.eventRegistrations_.push(eventRegistration);\n}\n\n/**\n * @param eventRegistration - If null, remove all callbacks.\n * @param cancelError - If a cancelError is provided, appropriate cancel events will be returned.\n * @returns Cancel events, if cancelError was provided.\n */\nexport function viewRemoveEventRegistration(\n  view: View,\n  eventRegistration: EventRegistration | null,\n  cancelError?: Error\n): Event[] {\n  const cancelEvents: CancelEvent[] = [];\n  if (cancelError) {\n    assert(\n      eventRegistration == null,\n      'A cancel should cancel all event registrations.'\n    );\n    const path = view.query._path;\n    view.eventRegistrations_.forEach(registration => {\n      const maybeEvent = registration.createCancelEvent(cancelError, path);\n      if (maybeEvent) {\n        cancelEvents.push(maybeEvent);\n      }\n    });\n  }\n\n  if (eventRegistration) {\n    let remaining = [];\n    for (let i = 0; i < view.eventRegistrations_.length; ++i) {\n      const existing = view.eventRegistrations_[i];\n      if (!existing.matches(eventRegistration)) {\n        remaining.push(existing);\n      } else if (eventRegistration.hasAnyCallback()) {\n        // We're removing just this one\n        remaining = remaining.concat(view.eventRegistrations_.slice(i + 1));\n        break;\n      }\n    }\n    view.eventRegistrations_ = remaining;\n  } else {\n    view.eventRegistrations_ = [];\n  }\n  return cancelEvents;\n}\n\n/**\n * Applies the given Operation, updates our cache, and returns the appropriate events.\n */\nexport function viewApplyOperation(\n  view: View,\n  operation: Operation,\n  writesCache: WriteTreeRef,\n  completeServerCache: Node | null\n): Event[] {\n  if (\n    operation.type === OperationType.MERGE &&\n    operation.source.queryId !== null\n  ) {\n    assert(\n      viewCacheGetCompleteServerSnap(view.viewCache_),\n      'We should always have a full cache before handling merges'\n    );\n    assert(\n      viewCacheGetCompleteEventSnap(view.viewCache_),\n      'Missing event cache, even though we have a server cache'\n    );\n  }\n\n  const oldViewCache = view.viewCache_;\n  const result = viewProcessorApplyOperation(\n    view.processor_,\n    oldViewCache,\n    operation,\n    writesCache,\n    completeServerCache\n  );\n  viewProcessorAssertIndexed(view.processor_, result.viewCache);\n\n  assert(\n    result.viewCache.serverCache.isFullyInitialized() ||\n      !oldViewCache.serverCache.isFullyInitialized(),\n    'Once a server snap is complete, it should never go back'\n  );\n\n  view.viewCache_ = result.viewCache;\n\n  return viewGenerateEventsForChanges_(\n    view,\n    result.changes,\n    result.viewCache.eventCache.getNode(),\n    null\n  );\n}\n\nexport function viewGetInitialEvents(\n  view: View,\n  registration: EventRegistration\n): Event[] {\n  const eventSnap = view.viewCache_.eventCache;\n  const initialChanges: Change[] = [];\n  if (!eventSnap.getNode().isLeafNode()) {\n    const eventNode = eventSnap.getNode() as ChildrenNode;\n    eventNode.forEachChild(PRIORITY_INDEX, (key, childNode) => {\n      initialChanges.push(changeChildAdded(key, childNode));\n    });\n  }\n  if (eventSnap.isFullyInitialized()) {\n    initialChanges.push(changeValue(eventSnap.getNode()));\n  }\n  return viewGenerateEventsForChanges_(\n    view,\n    initialChanges,\n    eventSnap.getNode(),\n    registration\n  );\n}\n\nfunction viewGenerateEventsForChanges_(\n  view: View,\n  changes: Change[],\n  eventCache: Node,\n  eventRegistration?: EventRegistration\n): Event[] {\n  const registrations = eventRegistration\n    ? [eventRegistration]\n    : view.eventRegistrations_;\n  return eventGeneratorGenerateEventsForChanges(\n    view.eventGenerator_,\n    changes,\n    eventCache,\n    registrations\n  );\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { ReferenceConstructor } from '../exp/Reference';\n\nimport { Operation } from './operation/Operation';\nimport { ChildrenNode } from './snap/ChildrenNode';\nimport { Node } from './snap/Node';\nimport { Path } from './util/Path';\nimport { CacheNode } from './view/CacheNode';\nimport { Event } from './view/Event';\nimport { EventRegistration, QueryContext } from './view/EventRegistration';\nimport {\n  View,\n  viewAddEventRegistration,\n  viewApplyOperation,\n  viewGetCompleteServerCache,\n  viewGetInitialEvents,\n  viewIsEmpty,\n  viewRemoveEventRegistration\n} from './view/View';\nimport { newViewCache } from './view/ViewCache';\nimport {\n  WriteTreeRef,\n  writeTreeRefCalcCompleteEventCache,\n  writeTreeRefCalcCompleteEventChildren\n} from './WriteTree';\n\nlet referenceConstructor: ReferenceConstructor;\n\n/**\n * SyncPoint represents a single location in a SyncTree with 1 or more event registrations, meaning we need to\n * maintain 1 or more Views at this location to cache server data and raise appropriate events for server changes\n * and user writes (set, transaction, update).\n *\n * It's responsible for:\n *  - Maintaining the set of 1 or more views necessary at this location (a SyncPoint with 0 views should be removed).\n *  - Proxying user / server operations to the views as appropriate (i.e. applyServerOverwrite,\n *    applyUserOverwrite, etc.)\n */\nexport class SyncPoint {\n  /**\n   * The Views being tracked at this location in the tree, stored as a map where the key is a\n   * queryId and the value is the View for that query.\n   *\n   * NOTE: This list will be quite small (usually 1, but perhaps 2 or 3; any more is an odd use case).\n   */\n  readonly views: Map<string, View> = new Map();\n}\n\nexport function syncPointSetReferenceConstructor(\n  val: ReferenceConstructor\n): void {\n  assert(\n    !referenceConstructor,\n    '__referenceConstructor has already been defined'\n  );\n  referenceConstructor = val;\n}\n\nfunction syncPointGetReferenceConstructor(): ReferenceConstructor {\n  assert(referenceConstructor, 'Reference.ts has not been loaded');\n  return referenceConstructor;\n}\n\nexport function syncPointIsEmpty(syncPoint: SyncPoint): boolean {\n  return syncPoint.views.size === 0;\n}\n\nexport function syncPointApplyOperation(\n  syncPoint: SyncPoint,\n  operation: Operation,\n  writesCache: WriteTreeRef,\n  optCompleteServerCache: Node | null\n): Event[] {\n  const queryId = operation.source.queryId;\n  if (queryId !== null) {\n    const view = syncPoint.views.get(queryId);\n    assert(view != null, 'SyncTree gave us an op for an invalid query.');\n    return viewApplyOperation(\n      view,\n      operation,\n      writesCache,\n      optCompleteServerCache\n    );\n  } else {\n    let events: Event[] = [];\n\n    for (const view of syncPoint.views.values()) {\n      events = events.concat(\n        viewApplyOperation(view, operation, writesCache, optCompleteServerCache)\n      );\n    }\n\n    return events;\n  }\n}\n\n/**\n * Get a view for the specified query.\n *\n * @param query - The query to return a view for\n * @param writesCache\n * @param serverCache\n * @param serverCacheComplete\n * @returns Events to raise.\n */\nexport function syncPointGetView(\n  syncPoint: SyncPoint,\n  query: QueryContext,\n  writesCache: WriteTreeRef,\n  serverCache: Node | null,\n  serverCacheComplete: boolean\n): View {\n  const queryId = query._queryIdentifier;\n  const view = syncPoint.views.get(queryId);\n  if (!view) {\n    // TODO: make writesCache take flag for complete server node\n    let eventCache = writeTreeRefCalcCompleteEventCache(\n      writesCache,\n      serverCacheComplete ? serverCache : null\n    );\n    let eventCacheComplete = false;\n    if (eventCache) {\n      eventCacheComplete = true;\n    } else if (serverCache instanceof ChildrenNode) {\n      eventCache = writeTreeRefCalcCompleteEventChildren(\n        writesCache,\n        serverCache\n      );\n      eventCacheComplete = false;\n    } else {\n      eventCache = ChildrenNode.EMPTY_NODE;\n      eventCacheComplete = false;\n    }\n    const viewCache = newViewCache(\n      new CacheNode(eventCache, eventCacheComplete, false),\n      new CacheNode(serverCache, serverCacheComplete, false)\n    );\n    return new View(query, viewCache);\n  }\n  return view;\n}\n\n/**\n * Add an event callback for the specified query.\n *\n * @param query\n * @param eventRegistration\n * @param writesCache\n * @param serverCache - Complete server cache, if we have it.\n * @param serverCacheComplete\n * @returns Events to raise.\n */\nexport function syncPointAddEventRegistration(\n  syncPoint: SyncPoint,\n  query: QueryContext,\n  eventRegistration: EventRegistration,\n  writesCache: WriteTreeRef,\n  serverCache: Node | null,\n  serverCacheComplete: boolean\n): Event[] {\n  const view = syncPointGetView(\n    syncPoint,\n    query,\n    writesCache,\n    serverCache,\n    serverCacheComplete\n  );\n  if (!syncPoint.views.has(query._queryIdentifier)) {\n    syncPoint.views.set(query._queryIdentifier, view);\n  }\n  // This is guaranteed to exist now, we just created anything that was missing\n  viewAddEventRegistration(view, eventRegistration);\n  return viewGetInitialEvents(view, eventRegistration);\n}\n\n/**\n * Remove event callback(s).  Return cancelEvents if a cancelError is specified.\n *\n * If query is the default query, we'll check all views for the specified eventRegistration.\n * If eventRegistration is null, we'll remove all callbacks for the specified view(s).\n *\n * @param eventRegistration - If null, remove all callbacks.\n * @param cancelError - If a cancelError is provided, appropriate cancel events will be returned.\n * @returns removed queries and any cancel events\n */\nexport function syncPointRemoveEventRegistration(\n  syncPoint: SyncPoint,\n  query: QueryContext,\n  eventRegistration: EventRegistration | null,\n  cancelError?: Error\n): { removed: QueryContext[]; events: Event[] } {\n  const queryId = query._queryIdentifier;\n  const removed: QueryContext[] = [];\n  let cancelEvents: Event[] = [];\n  const hadCompleteView = syncPointHasCompleteView(syncPoint);\n  if (queryId === 'default') {\n    // When you do ref.off(...), we search all views for the registration to remove.\n    for (const [viewQueryId, view] of syncPoint.views.entries()) {\n      cancelEvents = cancelEvents.concat(\n        viewRemoveEventRegistration(view, eventRegistration, cancelError)\n      );\n      if (viewIsEmpty(view)) {\n        syncPoint.views.delete(viewQueryId);\n\n        // We'll deal with complete views later.\n        if (!view.query._queryParams.loadsAllData()) {\n          removed.push(view.query);\n        }\n      }\n    }\n  } else {\n    // remove the callback from the specific view.\n    const view = syncPoint.views.get(queryId);\n    if (view) {\n      cancelEvents = cancelEvents.concat(\n        viewRemoveEventRegistration(view, eventRegistration, cancelError)\n      );\n      if (viewIsEmpty(view)) {\n        syncPoint.views.delete(queryId);\n\n        // We'll deal with complete views later.\n        if (!view.query._queryParams.loadsAllData()) {\n          removed.push(view.query);\n        }\n      }\n    }\n  }\n\n  if (hadCompleteView && !syncPointHasCompleteView(syncPoint)) {\n    // We removed our last complete view.\n    removed.push(\n      new (syncPointGetReferenceConstructor())(query._repo, query._path)\n    );\n  }\n\n  return { removed, events: cancelEvents };\n}\n\nexport function syncPointGetQueryViews(syncPoint: SyncPoint): View[] {\n  const result = [];\n  for (const view of syncPoint.views.values()) {\n    if (!view.query._queryParams.loadsAllData()) {\n      result.push(view);\n    }\n  }\n  return result;\n}\n\n/**\n * @param path - The path to the desired complete snapshot\n * @returns A complete cache, if it exists\n */\nexport function syncPointGetCompleteServerCache(\n  syncPoint: SyncPoint,\n  path: Path\n): Node | null {\n  let serverCache: Node | null = null;\n  for (const view of syncPoint.views.values()) {\n    serverCache = serverCache || viewGetCompleteServerCache(view, path);\n  }\n  return serverCache;\n}\n\nexport function syncPointViewForQuery(\n  syncPoint: SyncPoint,\n  query: QueryContext\n): View | null {\n  const params = query._queryParams;\n  if (params.loadsAllData()) {\n    return syncPointGetCompleteView(syncPoint);\n  } else {\n    const queryId = query._queryIdentifier;\n    return syncPoint.views.get(queryId);\n  }\n}\n\nexport function syncPointViewExistsForQuery(\n  syncPoint: SyncPoint,\n  query: QueryContext\n): boolean {\n  return syncPointViewForQuery(syncPoint, query) != null;\n}\n\nexport function syncPointHasCompleteView(syncPoint: SyncPoint): boolean {\n  return syncPointGetCompleteView(syncPoint) != null;\n}\n\nexport function syncPointGetCompleteView(syncPoint: SyncPoint): View | null {\n  for (const view of syncPoint.views.values()) {\n    if (view.query._queryParams.loadsAllData()) {\n      return view;\n    }\n  }\n  return null;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { ReferenceConstructor } from '../exp/Reference';\n\nimport { AckUserWrite } from './operation/AckUserWrite';\nimport { ListenComplete } from './operation/ListenComplete';\nimport { Merge } from './operation/Merge';\nimport {\n  newOperationSourceServer,\n  newOperationSourceServerTaggedQuery,\n  newOperationSourceUser,\n  Operation\n} from './operation/Operation';\nimport { Overwrite } from './operation/Overwrite';\nimport { ChildrenNode } from './snap/ChildrenNode';\nimport { Node } from './snap/Node';\nimport {\n  SyncPoint,\n  syncPointAddEventRegistration,\n  syncPointApplyOperation,\n  syncPointGetCompleteServerCache,\n  syncPointGetCompleteView,\n  syncPointGetQueryViews,\n  syncPointGetView,\n  syncPointHasCompleteView,\n  syncPointIsEmpty,\n  syncPointRemoveEventRegistration,\n  syncPointViewExistsForQuery,\n  syncPointViewForQuery\n} from './SyncPoint';\nimport { ImmutableTree } from './util/ImmutableTree';\nimport {\n  newEmptyPath,\n  newRelativePath,\n  Path,\n  pathGetFront,\n  pathIsEmpty\n} from './util/Path';\nimport { each, errorForServerCode } from './util/util';\nimport { CacheNode } from './view/CacheNode';\nimport { Event } from './view/Event';\nimport { EventRegistration, QueryContext } from './view/EventRegistration';\nimport { View, viewGetCompleteNode, viewGetServerCache } from './view/View';\nimport {\n  newWriteTree,\n  WriteTree,\n  writeTreeAddMerge,\n  writeTreeAddOverwrite,\n  writeTreeCalcCompleteEventCache,\n  writeTreeChildWrites,\n  writeTreeGetWrite,\n  WriteTreeRef,\n  writeTreeRefChild,\n  writeTreeRemoveWrite\n} from './WriteTree';\n\nlet referenceConstructor: ReferenceConstructor;\n\nexport function syncTreeSetReferenceConstructor(\n  val: ReferenceConstructor\n): void {\n  assert(\n    !referenceConstructor,\n    '__referenceConstructor has already been defined'\n  );\n  referenceConstructor = val;\n}\n\nfunction syncTreeGetReferenceConstructor(): ReferenceConstructor {\n  assert(referenceConstructor, 'Reference.ts has not been loaded');\n  return referenceConstructor;\n}\n\nexport interface ListenProvider {\n  startListening(\n    query: QueryContext,\n    tag: number | null,\n    hashFn: () => string,\n    onComplete: (a: string, b?: unknown) => Event[]\n  ): Event[];\n\n  stopListening(a: QueryContext, b: number | null): void;\n}\n\n/**\n * Static tracker for next query tag.\n */\nlet syncTreeNextQueryTag_ = 1;\n\n/**\n * SyncTree is the central class for managing event callback registration, data caching, views\n * (query processing), and event generation.  There are typically two SyncTree instances for\n * each Repo, one for the normal Firebase data, and one for the .info data.\n *\n * It has a number of responsibilities, including:\n *  - Tracking all user event callbacks (registered via addEventRegistration() and removeEventRegistration()).\n *  - Applying and caching data changes for user set(), transaction(), and update() calls\n *    (applyUserOverwrite(), applyUserMerge()).\n *  - Applying and caching data changes for server data changes (applyServerOverwrite(),\n *    applyServerMerge()).\n *  - Generating user-facing events for server and user changes (all of the apply* methods\n *    return the set of events that need to be raised as a result).\n *  - Maintaining the appropriate set of server listens to ensure we are always subscribed\n *    to the correct set of paths and queries to satisfy the current set of user event\n *    callbacks (listens are started/stopped using the provided listenProvider).\n *\n * NOTE: Although SyncTree tracks event callbacks and calculates events to raise, the actual\n * events are returned to the caller rather than raised synchronously.\n *\n */\nexport class SyncTree {\n  /**\n   * Tree of SyncPoints.  There's a SyncPoint at any location that has 1 or more views.\n   */\n  syncPointTree_: ImmutableTree<SyncPoint> = new ImmutableTree<SyncPoint>(null);\n\n  /**\n   * A tree of all pending user writes (user-initiated set()'s, transaction()'s, update()'s, etc.).\n   */\n  pendingWriteTree_: WriteTree = newWriteTree();\n\n  readonly tagToQueryMap: Map<number, string> = new Map();\n  readonly queryToTagMap: Map<string, number> = new Map();\n\n  /**\n   * @param listenProvider_ - Used by SyncTree to start / stop listening\n   *   to server data.\n   */\n  constructor(public listenProvider_: ListenProvider) {}\n}\n\n/**\n * Apply the data changes for a user-generated set() or transaction() call.\n *\n * @returns Events to raise.\n */\nexport function syncTreeApplyUserOverwrite(\n  syncTree: SyncTree,\n  path: Path,\n  newData: Node,\n  writeId: number,\n  visible?: boolean\n): Event[] {\n  // Record pending write.\n  writeTreeAddOverwrite(\n    syncTree.pendingWriteTree_,\n    path,\n    newData,\n    writeId,\n    visible\n  );\n\n  if (!visible) {\n    return [];\n  } else {\n    return syncTreeApplyOperationToSyncPoints_(\n      syncTree,\n      new Overwrite(newOperationSourceUser(), path, newData)\n    );\n  }\n}\n\n/**\n * Apply the data from a user-generated update() call\n *\n * @returns Events to raise.\n */\nexport function syncTreeApplyUserMerge(\n  syncTree: SyncTree,\n  path: Path,\n  changedChildren: { [k: string]: Node },\n  writeId: number\n): Event[] {\n  // Record pending merge.\n  writeTreeAddMerge(syncTree.pendingWriteTree_, path, changedChildren, writeId);\n\n  const changeTree = ImmutableTree.fromObject(changedChildren);\n\n  return syncTreeApplyOperationToSyncPoints_(\n    syncTree,\n    new Merge(newOperationSourceUser(), path, changeTree)\n  );\n}\n\n/**\n * Acknowledge a pending user write that was previously registered with applyUserOverwrite() or applyUserMerge().\n *\n * @param revert - True if the given write failed and needs to be reverted\n * @returns Events to raise.\n */\nexport function syncTreeAckUserWrite(\n  syncTree: SyncTree,\n  writeId: number,\n  revert: boolean = false\n) {\n  const write = writeTreeGetWrite(syncTree.pendingWriteTree_, writeId);\n  const needToReevaluate = writeTreeRemoveWrite(\n    syncTree.pendingWriteTree_,\n    writeId\n  );\n  if (!needToReevaluate) {\n    return [];\n  } else {\n    let affectedTree = new ImmutableTree<boolean>(null);\n    if (write.snap != null) {\n      // overwrite\n      affectedTree = affectedTree.set(newEmptyPath(), true);\n    } else {\n      each(write.children, (pathString: string) => {\n        affectedTree = affectedTree.set(new Path(pathString), true);\n      });\n    }\n    return syncTreeApplyOperationToSyncPoints_(\n      syncTree,\n      new AckUserWrite(write.path, affectedTree, revert)\n    );\n  }\n}\n\n/**\n * Apply new server data for the specified path..\n *\n * @returns Events to raise.\n */\nexport function syncTreeApplyServerOverwrite(\n  syncTree: SyncTree,\n  path: Path,\n  newData: Node\n): Event[] {\n  return syncTreeApplyOperationToSyncPoints_(\n    syncTree,\n    new Overwrite(newOperationSourceServer(), path, newData)\n  );\n}\n\n/**\n * Apply new server data to be merged in at the specified path.\n *\n * @returns Events to raise.\n */\nexport function syncTreeApplyServerMerge(\n  syncTree: SyncTree,\n  path: Path,\n  changedChildren: { [k: string]: Node }\n): Event[] {\n  const changeTree = ImmutableTree.fromObject(changedChildren);\n\n  return syncTreeApplyOperationToSyncPoints_(\n    syncTree,\n    new Merge(newOperationSourceServer(), path, changeTree)\n  );\n}\n\n/**\n * Apply a listen complete for a query\n *\n * @returns Events to raise.\n */\nexport function syncTreeApplyListenComplete(\n  syncTree: SyncTree,\n  path: Path\n): Event[] {\n  return syncTreeApplyOperationToSyncPoints_(\n    syncTree,\n    new ListenComplete(newOperationSourceServer(), path)\n  );\n}\n\n/**\n * Apply a listen complete for a tagged query\n *\n * @returns Events to raise.\n */\nexport function syncTreeApplyTaggedListenComplete(\n  syncTree: SyncTree,\n  path: Path,\n  tag: number\n): Event[] {\n  const queryKey = syncTreeQueryKeyForTag_(syncTree, tag);\n  if (queryKey) {\n    const r = syncTreeParseQueryKey_(queryKey);\n    const queryPath = r.path,\n      queryId = r.queryId;\n    const relativePath = newRelativePath(queryPath, path);\n    const op = new ListenComplete(\n      newOperationSourceServerTaggedQuery(queryId),\n      relativePath\n    );\n    return syncTreeApplyTaggedOperation_(syncTree, queryPath, op);\n  } else {\n    // We've already removed the query. No big deal, ignore the update\n    return [];\n  }\n}\n\n/**\n * Remove event callback(s).\n *\n * If query is the default query, we'll check all queries for the specified eventRegistration.\n * If eventRegistration is null, we'll remove all callbacks for the specified query/queries.\n *\n * @param eventRegistration - If null, all callbacks are removed.\n * @param cancelError - If a cancelError is provided, appropriate cancel events will be returned.\n * @returns Cancel events, if cancelError was provided.\n */\nexport function syncTreeRemoveEventRegistration(\n  syncTree: SyncTree,\n  query: QueryContext,\n  eventRegistration: EventRegistration | null,\n  cancelError?: Error\n): Event[] {\n  // Find the syncPoint first. Then deal with whether or not it has matching listeners\n  const path = query._path;\n  const maybeSyncPoint = syncTree.syncPointTree_.get(path);\n  let cancelEvents: Event[] = [];\n  // A removal on a default query affects all queries at that location. A removal on an indexed query, even one without\n  // other query constraints, does *not* affect all queries at that location. So this check must be for 'default', and\n  // not loadsAllData().\n  if (\n    maybeSyncPoint &&\n    (query._queryIdentifier === 'default' ||\n      syncPointViewExistsForQuery(maybeSyncPoint, query))\n  ) {\n    const removedAndEvents = syncPointRemoveEventRegistration(\n      maybeSyncPoint,\n      query,\n      eventRegistration,\n      cancelError\n    );\n    if (syncPointIsEmpty(maybeSyncPoint)) {\n      syncTree.syncPointTree_ = syncTree.syncPointTree_.remove(path);\n    }\n    const removed = removedAndEvents.removed;\n    cancelEvents = removedAndEvents.events;\n    // We may have just removed one of many listeners and can short-circuit this whole process\n    // We may also not have removed a default listener, in which case all of the descendant listeners should already be\n    // properly set up.\n    //\n    // Since indexed queries can shadow if they don't have other query constraints, check for loadsAllData(), instead of\n    // queryId === 'default'\n    const removingDefault =\n      -1 !==\n      removed.findIndex(query => {\n        return query._queryParams.loadsAllData();\n      });\n    const covered = syncTree.syncPointTree_.findOnPath(\n      path,\n      (relativePath, parentSyncPoint) =>\n        syncPointHasCompleteView(parentSyncPoint)\n    );\n\n    if (removingDefault && !covered) {\n      const subtree = syncTree.syncPointTree_.subtree(path);\n      // There are potentially child listeners. Determine what if any listens we need to send before executing the\n      // removal\n      if (!subtree.isEmpty()) {\n        // We need to fold over our subtree and collect the listeners to send\n        const newViews = syncTreeCollectDistinctViewsForSubTree_(subtree);\n\n        // Ok, we've collected all the listens we need. Set them up.\n        for (let i = 0; i < newViews.length; ++i) {\n          const view = newViews[i],\n            newQuery = view.query;\n          const listener = syncTreeCreateListenerForView_(syncTree, view);\n          syncTree.listenProvider_.startListening(\n            syncTreeQueryForListening_(newQuery),\n            syncTreeTagForQuery_(syncTree, newQuery),\n            listener.hashFn,\n            listener.onComplete\n          );\n        }\n      } else {\n        // There's nothing below us, so nothing we need to start listening on\n      }\n    }\n    // If we removed anything and we're not covered by a higher up listen, we need to stop listening on this query\n    // The above block has us covered in terms of making sure we're set up on listens lower in the tree.\n    // Also, note that if we have a cancelError, it's already been removed at the provider level.\n    if (!covered && removed.length > 0 && !cancelError) {\n      // If we removed a default, then we weren't listening on any of the other queries here. Just cancel the one\n      // default. Otherwise, we need to iterate through and cancel each individual query\n      if (removingDefault) {\n        // We don't tag default listeners\n        const defaultTag: number | null = null;\n        syncTree.listenProvider_.stopListening(\n          syncTreeQueryForListening_(query),\n          defaultTag\n        );\n      } else {\n        removed.forEach((queryToRemove: QueryContext) => {\n          const tagToRemove = syncTree.queryToTagMap.get(\n            syncTreeMakeQueryKey_(queryToRemove)\n          );\n          syncTree.listenProvider_.stopListening(\n            syncTreeQueryForListening_(queryToRemove),\n            tagToRemove\n          );\n        });\n      }\n    }\n    // Now, clear all of the tags we're tracking for the removed listens\n    syncTreeRemoveTags_(syncTree, removed);\n  } else {\n    // No-op, this listener must've been already removed\n  }\n  return cancelEvents;\n}\n\n/**\n * Apply new server data for the specified tagged query.\n *\n * @returns Events to raise.\n */\nexport function syncTreeApplyTaggedQueryOverwrite(\n  syncTree: SyncTree,\n  path: Path,\n  snap: Node,\n  tag: number\n): Event[] {\n  const queryKey = syncTreeQueryKeyForTag_(syncTree, tag);\n  if (queryKey != null) {\n    const r = syncTreeParseQueryKey_(queryKey);\n    const queryPath = r.path,\n      queryId = r.queryId;\n    const relativePath = newRelativePath(queryPath, path);\n    const op = new Overwrite(\n      newOperationSourceServerTaggedQuery(queryId),\n      relativePath,\n      snap\n    );\n    return syncTreeApplyTaggedOperation_(syncTree, queryPath, op);\n  } else {\n    // Query must have been removed already\n    return [];\n  }\n}\n\n/**\n * Apply server data to be merged in for the specified tagged query.\n *\n * @returns Events to raise.\n */\nexport function syncTreeApplyTaggedQueryMerge(\n  syncTree: SyncTree,\n  path: Path,\n  changedChildren: { [k: string]: Node },\n  tag: number\n): Event[] {\n  const queryKey = syncTreeQueryKeyForTag_(syncTree, tag);\n  if (queryKey) {\n    const r = syncTreeParseQueryKey_(queryKey);\n    const queryPath = r.path,\n      queryId = r.queryId;\n    const relativePath = newRelativePath(queryPath, path);\n    const changeTree = ImmutableTree.fromObject(changedChildren);\n    const op = new Merge(\n      newOperationSourceServerTaggedQuery(queryId),\n      relativePath,\n      changeTree\n    );\n    return syncTreeApplyTaggedOperation_(syncTree, queryPath, op);\n  } else {\n    // We've already removed the query. No big deal, ignore the update\n    return [];\n  }\n}\n\n/**\n * Add an event callback for the specified query.\n *\n * @returns Events to raise.\n */\nexport function syncTreeAddEventRegistration(\n  syncTree: SyncTree,\n  query: QueryContext,\n  eventRegistration: EventRegistration\n): Event[] {\n  const path = query._path;\n\n  let serverCache: Node | null = null;\n  let foundAncestorDefaultView = false;\n  // Any covering writes will necessarily be at the root, so really all we need to find is the server cache.\n  // Consider optimizing this once there's a better understanding of what actual behavior will be.\n  syncTree.syncPointTree_.foreachOnPath(path, (pathToSyncPoint, sp) => {\n    const relativePath = newRelativePath(pathToSyncPoint, path);\n    serverCache =\n      serverCache || syncPointGetCompleteServerCache(sp, relativePath);\n    foundAncestorDefaultView =\n      foundAncestorDefaultView || syncPointHasCompleteView(sp);\n  });\n  let syncPoint = syncTree.syncPointTree_.get(path);\n  if (!syncPoint) {\n    syncPoint = new SyncPoint();\n    syncTree.syncPointTree_ = syncTree.syncPointTree_.set(path, syncPoint);\n  } else {\n    foundAncestorDefaultView =\n      foundAncestorDefaultView || syncPointHasCompleteView(syncPoint);\n    serverCache =\n      serverCache || syncPointGetCompleteServerCache(syncPoint, newEmptyPath());\n  }\n\n  let serverCacheComplete;\n  if (serverCache != null) {\n    serverCacheComplete = true;\n  } else {\n    serverCacheComplete = false;\n    serverCache = ChildrenNode.EMPTY_NODE;\n    const subtree = syncTree.syncPointTree_.subtree(path);\n    subtree.foreachChild((childName, childSyncPoint) => {\n      const completeCache = syncPointGetCompleteServerCache(\n        childSyncPoint,\n        newEmptyPath()\n      );\n      if (completeCache) {\n        serverCache = serverCache.updateImmediateChild(\n          childName,\n          completeCache\n        );\n      }\n    });\n  }\n\n  const viewAlreadyExists = syncPointViewExistsForQuery(syncPoint, query);\n  if (!viewAlreadyExists && !query._queryParams.loadsAllData()) {\n    // We need to track a tag for this query\n    const queryKey = syncTreeMakeQueryKey_(query);\n    assert(\n      !syncTree.queryToTagMap.has(queryKey),\n      'View does not exist, but we have a tag'\n    );\n    const tag = syncTreeGetNextQueryTag_();\n    syncTree.queryToTagMap.set(queryKey, tag);\n    syncTree.tagToQueryMap.set(tag, queryKey);\n  }\n  const writesCache = writeTreeChildWrites(syncTree.pendingWriteTree_, path);\n  let events = syncPointAddEventRegistration(\n    syncPoint,\n    query,\n    eventRegistration,\n    writesCache,\n    serverCache,\n    serverCacheComplete\n  );\n  if (!viewAlreadyExists && !foundAncestorDefaultView) {\n    const view = syncPointViewForQuery(syncPoint, query);\n    events = events.concat(syncTreeSetupListener_(syncTree, query, view));\n  }\n  return events;\n}\n\n/**\n * Returns a complete cache, if we have one, of the data at a particular path. If the location does not have a\n * listener above it, we will get a false \"null\". This shouldn't be a problem because transactions will always\n * have a listener above, and atomic operations would correctly show a jitter of <increment value> ->\n *     <incremented total> as the write is applied locally and then acknowledged at the server.\n *\n * Note: this method will *include* hidden writes from transaction with applyLocally set to false.\n *\n * @param path - The path to the data we want\n * @param writeIdsToExclude - A specific set to be excluded\n */\nexport function syncTreeCalcCompleteEventCache(\n  syncTree: SyncTree,\n  path: Path,\n  writeIdsToExclude?: number[]\n): Node {\n  const includeHiddenSets = true;\n  const writeTree = syncTree.pendingWriteTree_;\n  const serverCache = syncTree.syncPointTree_.findOnPath(\n    path,\n    (pathSoFar, syncPoint) => {\n      const relativePath = newRelativePath(pathSoFar, path);\n      const serverCache = syncPointGetCompleteServerCache(\n        syncPoint,\n        relativePath\n      );\n      if (serverCache) {\n        return serverCache;\n      }\n    }\n  );\n  return writeTreeCalcCompleteEventCache(\n    writeTree,\n    path,\n    serverCache,\n    writeIdsToExclude,\n    includeHiddenSets\n  );\n}\n\nexport function syncTreeGetServerValue(\n  syncTree: SyncTree,\n  query: QueryContext\n): Node | null {\n  const path = query._path;\n  let serverCache: Node | null = null;\n  // Any covering writes will necessarily be at the root, so really all we need to find is the server cache.\n  // Consider optimizing this once there's a better understanding of what actual behavior will be.\n  syncTree.syncPointTree_.foreachOnPath(path, (pathToSyncPoint, sp) => {\n    const relativePath = newRelativePath(pathToSyncPoint, path);\n    serverCache =\n      serverCache || syncPointGetCompleteServerCache(sp, relativePath);\n  });\n  let syncPoint = syncTree.syncPointTree_.get(path);\n  if (!syncPoint) {\n    syncPoint = new SyncPoint();\n    syncTree.syncPointTree_ = syncTree.syncPointTree_.set(path, syncPoint);\n  } else {\n    serverCache =\n      serverCache || syncPointGetCompleteServerCache(syncPoint, newEmptyPath());\n  }\n  const serverCacheComplete = serverCache != null;\n  const serverCacheNode: CacheNode | null = serverCacheComplete\n    ? new CacheNode(serverCache, true, false)\n    : null;\n  const writesCache: WriteTreeRef | null = writeTreeChildWrites(\n    syncTree.pendingWriteTree_,\n    query._path\n  );\n  const view: View = syncPointGetView(\n    syncPoint,\n    query,\n    writesCache,\n    serverCacheComplete ? serverCacheNode.getNode() : ChildrenNode.EMPTY_NODE,\n    serverCacheComplete\n  );\n  return viewGetCompleteNode(view);\n}\n\n/**\n * A helper method that visits all descendant and ancestor SyncPoints, applying the operation.\n *\n * NOTES:\n * - Descendant SyncPoints will be visited first (since we raise events depth-first).\n *\n * - We call applyOperation() on each SyncPoint passing three things:\n *   1. A version of the Operation that has been made relative to the SyncPoint location.\n *   2. A WriteTreeRef of any writes we have cached at the SyncPoint location.\n *   3. A snapshot Node with cached server data, if we have it.\n *\n * - We concatenate all of the events returned by each SyncPoint and return the result.\n */\nfunction syncTreeApplyOperationToSyncPoints_(\n  syncTree: SyncTree,\n  operation: Operation\n): Event[] {\n  return syncTreeApplyOperationHelper_(\n    operation,\n    syncTree.syncPointTree_,\n    /*serverCache=*/ null,\n    writeTreeChildWrites(syncTree.pendingWriteTree_, newEmptyPath())\n  );\n}\n\n/**\n * Recursive helper for applyOperationToSyncPoints_\n */\nfunction syncTreeApplyOperationHelper_(\n  operation: Operation,\n  syncPointTree: ImmutableTree<SyncPoint>,\n  serverCache: Node | null,\n  writesCache: WriteTreeRef\n): Event[] {\n  if (pathIsEmpty(operation.path)) {\n    return syncTreeApplyOperationDescendantsHelper_(\n      operation,\n      syncPointTree,\n      serverCache,\n      writesCache\n    );\n  } else {\n    const syncPoint = syncPointTree.get(newEmptyPath());\n\n    // If we don't have cached server data, see if we can get it from this SyncPoint.\n    if (serverCache == null && syncPoint != null) {\n      serverCache = syncPointGetCompleteServerCache(syncPoint, newEmptyPath());\n    }\n\n    let events: Event[] = [];\n    const childName = pathGetFront(operation.path);\n    const childOperation = operation.operationForChild(childName);\n    const childTree = syncPointTree.children.get(childName);\n    if (childTree && childOperation) {\n      const childServerCache = serverCache\n        ? serverCache.getImmediateChild(childName)\n        : null;\n      const childWritesCache = writeTreeRefChild(writesCache, childName);\n      events = events.concat(\n        syncTreeApplyOperationHelper_(\n          childOperation,\n          childTree,\n          childServerCache,\n          childWritesCache\n        )\n      );\n    }\n\n    if (syncPoint) {\n      events = events.concat(\n        syncPointApplyOperation(syncPoint, operation, writesCache, serverCache)\n      );\n    }\n\n    return events;\n  }\n}\n\n/**\n * Recursive helper for applyOperationToSyncPoints_\n */\nfunction syncTreeApplyOperationDescendantsHelper_(\n  operation: Operation,\n  syncPointTree: ImmutableTree<SyncPoint>,\n  serverCache: Node | null,\n  writesCache: WriteTreeRef\n): Event[] {\n  const syncPoint = syncPointTree.get(newEmptyPath());\n\n  // If we don't have cached server data, see if we can get it from this SyncPoint.\n  if (serverCache == null && syncPoint != null) {\n    serverCache = syncPointGetCompleteServerCache(syncPoint, newEmptyPath());\n  }\n\n  let events: Event[] = [];\n  syncPointTree.children.inorderTraversal((childName, childTree) => {\n    const childServerCache = serverCache\n      ? serverCache.getImmediateChild(childName)\n      : null;\n    const childWritesCache = writeTreeRefChild(writesCache, childName);\n    const childOperation = operation.operationForChild(childName);\n    if (childOperation) {\n      events = events.concat(\n        syncTreeApplyOperationDescendantsHelper_(\n          childOperation,\n          childTree,\n          childServerCache,\n          childWritesCache\n        )\n      );\n    }\n  });\n\n  if (syncPoint) {\n    events = events.concat(\n      syncPointApplyOperation(syncPoint, operation, writesCache, serverCache)\n    );\n  }\n\n  return events;\n}\n\nfunction syncTreeCreateListenerForView_(\n  syncTree: SyncTree,\n  view: View\n): { hashFn(): string; onComplete(a: string, b?: unknown): Event[] } {\n  const query = view.query;\n  const tag = syncTreeTagForQuery_(syncTree, query);\n\n  return {\n    hashFn: () => {\n      const cache = viewGetServerCache(view) || ChildrenNode.EMPTY_NODE;\n      return cache.hash();\n    },\n    onComplete: (status: string): Event[] => {\n      if (status === 'ok') {\n        if (tag) {\n          return syncTreeApplyTaggedListenComplete(syncTree, query._path, tag);\n        } else {\n          return syncTreeApplyListenComplete(syncTree, query._path);\n        }\n      } else {\n        // If a listen failed, kill all of the listeners here, not just the one that triggered the error.\n        // Note that this may need to be scoped to just this listener if we change permissions on filtered children\n        const error = errorForServerCode(status, query);\n        return syncTreeRemoveEventRegistration(\n          syncTree,\n          query,\n          /*eventRegistration*/ null,\n          error\n        );\n      }\n    }\n  };\n}\n\n/**\n * Return the tag associated with the given query.\n */\nfunction syncTreeTagForQuery_(\n  syncTree: SyncTree,\n  query: QueryContext\n): number | null {\n  const queryKey = syncTreeMakeQueryKey_(query);\n  return syncTree.queryToTagMap.get(queryKey);\n}\n\n/**\n * Given a query, computes a \"queryKey\" suitable for use in our queryToTagMap_.\n */\nfunction syncTreeMakeQueryKey_(query: QueryContext): string {\n  return query._path.toString() + '$' + query._queryIdentifier;\n}\n\n/**\n * Return the query associated with the given tag, if we have one\n */\nfunction syncTreeQueryKeyForTag_(\n  syncTree: SyncTree,\n  tag: number\n): string | null {\n  return syncTree.tagToQueryMap.get(tag);\n}\n\n/**\n * Given a queryKey (created by makeQueryKey), parse it back into a path and queryId.\n */\nfunction syncTreeParseQueryKey_(\n  queryKey: string\n): { queryId: string; path: Path } {\n  const splitIndex = queryKey.indexOf('$');\n  assert(\n    splitIndex !== -1 && splitIndex < queryKey.length - 1,\n    'Bad queryKey.'\n  );\n  return {\n    queryId: queryKey.substr(splitIndex + 1),\n    path: new Path(queryKey.substr(0, splitIndex))\n  };\n}\n\n/**\n * A helper method to apply tagged operations\n */\nfunction syncTreeApplyTaggedOperation_(\n  syncTree: SyncTree,\n  queryPath: Path,\n  operation: Operation\n): Event[] {\n  const syncPoint = syncTree.syncPointTree_.get(queryPath);\n  assert(syncPoint, \"Missing sync point for query tag that we're tracking\");\n  const writesCache = writeTreeChildWrites(\n    syncTree.pendingWriteTree_,\n    queryPath\n  );\n  return syncPointApplyOperation(syncPoint, operation, writesCache, null);\n}\n\n/**\n * This collapses multiple unfiltered views into a single view, since we only need a single\n * listener for them.\n */\nfunction syncTreeCollectDistinctViewsForSubTree_(\n  subtree: ImmutableTree<SyncPoint>\n): View[] {\n  return subtree.fold<View[]>((relativePath, maybeChildSyncPoint, childMap) => {\n    if (maybeChildSyncPoint && syncPointHasCompleteView(maybeChildSyncPoint)) {\n      const completeView = syncPointGetCompleteView(maybeChildSyncPoint);\n      return [completeView];\n    } else {\n      // No complete view here, flatten any deeper listens into an array\n      let views: View[] = [];\n      if (maybeChildSyncPoint) {\n        views = syncPointGetQueryViews(maybeChildSyncPoint);\n      }\n      each(childMap, (_key: string, childViews: View[]) => {\n        views = views.concat(childViews);\n      });\n      return views;\n    }\n  });\n}\n\n/**\n * Normalizes a query to a query we send the server for listening\n *\n * @returns The normalized query\n */\nfunction syncTreeQueryForListening_(query: QueryContext): QueryContext {\n  if (query._queryParams.loadsAllData() && !query._queryParams.isDefault()) {\n    // We treat queries that load all data as default queries\n    // Cast is necessary because ref() technically returns Firebase which is actually fb.api.Firebase which inherits\n    // from Query\n    return new (syncTreeGetReferenceConstructor())(query._repo, query._path);\n  } else {\n    return query;\n  }\n}\n\nfunction syncTreeRemoveTags_(syncTree: SyncTree, queries: QueryContext[]) {\n  for (let j = 0; j < queries.length; ++j) {\n    const removedQuery = queries[j];\n    if (!removedQuery._queryParams.loadsAllData()) {\n      // We should have a tag for this\n      const removedQueryKey = syncTreeMakeQueryKey_(removedQuery);\n      const removedQueryTag = syncTree.queryToTagMap.get(removedQueryKey);\n      syncTree.queryToTagMap.delete(removedQueryKey);\n      syncTree.tagToQueryMap.delete(removedQueryTag);\n    }\n  }\n}\n\n/**\n * Static accessor for query tags.\n */\nfunction syncTreeGetNextQueryTag_(): number {\n  return syncTreeNextQueryTag_++;\n}\n\n/**\n * For a given new listen, manage the de-duplication of outstanding subscriptions.\n *\n * @returns This method can return events to support synchronous data sources\n */\nfunction syncTreeSetupListener_(\n  syncTree: SyncTree,\n  query: QueryContext,\n  view: View\n): Event[] {\n  const path = query._path;\n  const tag = syncTreeTagForQuery_(syncTree, query);\n  const listener = syncTreeCreateListenerForView_(syncTree, view);\n\n  const events = syncTree.listenProvider_.startListening(\n    syncTreeQueryForListening_(query),\n    tag,\n    listener.hashFn,\n    listener.onComplete\n  );\n\n  const subtree = syncTree.syncPointTree_.subtree(path);\n  // The root of this subtree has our query. We're here because we definitely need to send a listen for that, but we\n  // may need to shadow other listens as well.\n  if (tag) {\n    assert(\n      !syncPointHasCompleteView(subtree.value),\n      \"If we're adding a query, it shouldn't be shadowed\"\n    );\n  } else {\n    // Shadow everything at or below this location, this is a default listener.\n    const queriesToStop = subtree.fold<QueryContext[]>(\n      (relativePath, maybeChildSyncPoint, childMap) => {\n        if (\n          !pathIsEmpty(relativePath) &&\n          maybeChildSyncPoint &&\n          syncPointHasCompleteView(maybeChildSyncPoint)\n        ) {\n          return [syncPointGetCompleteView(maybeChildSyncPoint).query];\n        } else {\n          // No default listener here, flatten any deeper queries into an array\n          let queries: QueryContext[] = [];\n          if (maybeChildSyncPoint) {\n            queries = queries.concat(\n              syncPointGetQueryViews(maybeChildSyncPoint).map(\n                view => view.query\n              )\n            );\n          }\n          each(childMap, (_key: string, childQueries: QueryContext[]) => {\n            queries = queries.concat(childQueries);\n          });\n          return queries;\n        }\n      }\n    );\n    for (let i = 0; i < queriesToStop.length; ++i) {\n      const queryToStop = queriesToStop[i];\n      syncTree.listenProvider_.stopListening(\n        syncTreeQueryForListening_(queryToStop),\n        syncTreeTagForQuery_(syncTree, queryToStop)\n      );\n    }\n  }\n  return events;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { ChildrenNode } from '../snap/ChildrenNode';\nimport { PRIORITY_INDEX } from '../snap/indexes/PriorityIndex';\nimport { LeafNode } from '../snap/LeafNode';\nimport { Node } from '../snap/Node';\nimport { nodeFromJSON } from '../snap/nodeFromJSON';\nimport { SyncTree, syncTreeCalcCompleteEventCache } from '../SyncTree';\n\nimport { Indexable } from './misc';\nimport { Path, pathChild } from './Path';\n\n/* It's critical for performance that we do not calculate actual values from a SyncTree\n * unless and until the value is needed. Because we expose both a SyncTree and Node\n * version of deferred value resolution, we ned a wrapper class that will let us share\n * code.\n *\n * @see https://github.com/firebase/firebase-js-sdk/issues/2487\n */\ninterface ValueProvider {\n  getImmediateChild(childName: string): ValueProvider;\n  node(): Node;\n}\n\nclass ExistingValueProvider implements ValueProvider {\n  constructor(readonly node_: Node) {}\n\n  getImmediateChild(childName: string): ValueProvider {\n    const child = this.node_.getImmediateChild(childName);\n    return new ExistingValueProvider(child);\n  }\n\n  node(): Node {\n    return this.node_;\n  }\n}\n\nclass DeferredValueProvider implements ValueProvider {\n  private syncTree_: SyncTree;\n  private path_: Path;\n\n  constructor(syncTree: SyncTree, path: Path) {\n    this.syncTree_ = syncTree;\n    this.path_ = path;\n  }\n\n  getImmediateChild(childName: string): ValueProvider {\n    const childPath = pathChild(this.path_, childName);\n    return new DeferredValueProvider(this.syncTree_, childPath);\n  }\n\n  node(): Node {\n    return syncTreeCalcCompleteEventCache(this.syncTree_, this.path_);\n  }\n}\n\n/**\n * Generate placeholders for deferred values.\n */\nexport const generateWithValues = function (\n  values: {\n    [k: string]: unknown;\n  } | null\n): { [k: string]: unknown } {\n  values = values || {};\n  values['timestamp'] = values['timestamp'] || new Date().getTime();\n  return values;\n};\n\n/**\n * Value to use when firing local events. When writing server values, fire\n * local events with an approximate value, otherwise return value as-is.\n */\nexport const resolveDeferredLeafValue = function (\n  value: { [k: string]: unknown } | string | number | boolean,\n  existingVal: ValueProvider,\n  serverValues: { [k: string]: unknown }\n): string | number | boolean {\n  if (!value || typeof value !== 'object') {\n    return value as string | number | boolean;\n  }\n  assert('.sv' in value, 'Unexpected leaf node or priority contents');\n\n  if (typeof value['.sv'] === 'string') {\n    return resolveScalarDeferredValue(value['.sv'], existingVal, serverValues);\n  } else if (typeof value['.sv'] === 'object') {\n    return resolveComplexDeferredValue(value['.sv'], existingVal, serverValues);\n  } else {\n    assert(false, 'Unexpected server value: ' + JSON.stringify(value, null, 2));\n  }\n};\n\nconst resolveScalarDeferredValue = function (\n  op: string,\n  existing: ValueProvider,\n  serverValues: { [k: string]: unknown }\n): string | number | boolean {\n  switch (op) {\n    case 'timestamp':\n      return serverValues['timestamp'] as string | number | boolean;\n    default:\n      assert(false, 'Unexpected server value: ' + op);\n  }\n};\n\nconst resolveComplexDeferredValue = function (\n  op: object,\n  existing: ValueProvider,\n  unused: { [k: string]: unknown }\n): string | number | boolean {\n  if (!op.hasOwnProperty('increment')) {\n    assert(false, 'Unexpected server value: ' + JSON.stringify(op, null, 2));\n  }\n  const delta = op['increment'];\n  if (typeof delta !== 'number') {\n    assert(false, 'Unexpected increment value: ' + delta);\n  }\n\n  const existingNode = existing.node();\n  assert(\n    existingNode !== null && typeof existingNode !== 'undefined',\n    'Expected ChildrenNode.EMPTY_NODE for nulls'\n  );\n\n  // Incrementing a non-number sets the value to the incremented amount\n  if (!existingNode.isLeafNode()) {\n    return delta;\n  }\n\n  const leaf = existingNode as LeafNode;\n  const existingVal = leaf.getValue();\n  if (typeof existingVal !== 'number') {\n    return delta;\n  }\n\n  // No need to do over/underflow arithmetic here because JS only handles floats under the covers\n  return existingVal + delta;\n};\n\n/**\n * Recursively replace all deferred values and priorities in the tree with the\n * specified generated replacement values.\n * @param path - path to which write is relative\n * @param node - new data written at path\n * @param syncTree - current data\n */\nexport const resolveDeferredValueTree = function (\n  path: Path,\n  node: Node,\n  syncTree: SyncTree,\n  serverValues: Indexable\n): Node {\n  return resolveDeferredValue(\n    node,\n    new DeferredValueProvider(syncTree, path),\n    serverValues\n  );\n};\n\n/**\n * Recursively replace all deferred values and priorities in the node with the\n * specified generated replacement values.  If there are no server values in the node,\n * it'll be returned as-is.\n */\nexport const resolveDeferredValueSnapshot = function (\n  node: Node,\n  existing: Node,\n  serverValues: Indexable\n): Node {\n  return resolveDeferredValue(\n    node,\n    new ExistingValueProvider(existing),\n    serverValues\n  );\n};\n\nfunction resolveDeferredValue(\n  node: Node,\n  existingVal: ValueProvider,\n  serverValues: Indexable\n): Node {\n  const rawPri = node.getPriority().val() as\n    | Indexable\n    | boolean\n    | null\n    | number\n    | string;\n  const priority = resolveDeferredLeafValue(\n    rawPri,\n    existingVal.getImmediateChild('.priority'),\n    serverValues\n  );\n  let newNode: Node;\n\n  if (node.isLeafNode()) {\n    const leafNode = node as LeafNode;\n    const value = resolveDeferredLeafValue(\n      leafNode.getValue(),\n      existingVal,\n      serverValues\n    );\n    if (\n      value !== leafNode.getValue() ||\n      priority !== leafNode.getPriority().val()\n    ) {\n      return new LeafNode(value, nodeFromJSON(priority));\n    } else {\n      return node;\n    }\n  } else {\n    const childrenNode = node as ChildrenNode;\n    newNode = childrenNode;\n    if (priority !== childrenNode.getPriority().val()) {\n      newNode = newNode.updatePriority(new LeafNode(priority));\n    }\n    childrenNode.forEachChild(PRIORITY_INDEX, (childName, childNode) => {\n      const newChildNode = resolveDeferredValue(\n        childNode,\n        existingVal.getImmediateChild(childName),\n        serverValues\n      );\n      if (newChildNode !== childNode) {\n        newNode = newNode.updateImmediateChild(childName, newChildNode);\n      }\n    });\n    return newNode;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { contains, safeGet } from '@firebase/util';\n\nimport { Path, pathGetFront, pathPopFront } from './Path';\nimport { each } from './util';\n\n/**\n * Node in a Tree.\n */\nexport interface TreeNode<T> {\n  // TODO: Consider making accessors that create children and value lazily or\n  // separate Internal / Leaf 'types'.\n  children: Record<string, TreeNode<T>>;\n  childCount: number;\n  value?: T;\n}\n\n/**\n * A light-weight tree, traversable by path.  Nodes can have both values and children.\n * Nodes are not enumerated (by forEachChild) unless they have a value or non-empty\n * children.\n */\nexport class Tree<T> {\n  /**\n   * @param name - Optional name of the node.\n   * @param parent - Optional parent node.\n   * @param node - Optional node to wrap.\n   */\n  constructor(\n    readonly name: string = '',\n    readonly parent: Tree<T> | null = null,\n    public node: TreeNode<T> = { children: {}, childCount: 0 }\n  ) {}\n}\n\n/**\n * Returns a sub-Tree for the given path.\n *\n * @param pathObj - Path to look up.\n * @returns Tree for path.\n */\nexport function treeSubTree<T>(tree: Tree<T>, pathObj: string | Path): Tree<T> {\n  // TODO: Require pathObj to be Path?\n  let path = pathObj instanceof Path ? pathObj : new Path(pathObj);\n  let child = tree,\n    next = pathGetFront(path);\n  while (next !== null) {\n    const childNode = safeGet(child.node.children, next) || {\n      children: {},\n      childCount: 0\n    };\n    child = new Tree<T>(next, child, childNode);\n    path = pathPopFront(path);\n    next = pathGetFront(path);\n  }\n\n  return child;\n}\n\n/**\n * Returns the data associated with this tree node.\n *\n * @returns The data or null if no data exists.\n */\nexport function treeGetValue<T>(tree: Tree<T>): T | undefined {\n  return tree.node.value;\n}\n\n/**\n * Sets data to this tree node.\n *\n * @param value - Value to set.\n */\nexport function treeSetValue<T>(tree: Tree<T>, value: T | undefined): void {\n  tree.node.value = value;\n  treeUpdateParents(tree);\n}\n\n/**\n * @returns Whether the tree has any children.\n */\nexport function treeHasChildren<T>(tree: Tree<T>): boolean {\n  return tree.node.childCount > 0;\n}\n\n/**\n * @returns Whethe rthe tree is empty (no value or children).\n */\nexport function treeIsEmpty<T>(tree: Tree<T>): boolean {\n  return treeGetValue(tree) === undefined && !treeHasChildren(tree);\n}\n\n/**\n * Calls action for each child of this tree node.\n *\n * @param action - Action to be called for each child.\n */\nexport function treeForEachChild<T>(\n  tree: Tree<T>,\n  action: (tree: Tree<T>) => void\n): void {\n  each(tree.node.children, (child: string, childTree: TreeNode<T>) => {\n    action(new Tree<T>(child, tree, childTree));\n  });\n}\n\n/**\n * Does a depth-first traversal of this node's descendants, calling action for each one.\n *\n * @param action - Action to be called for each child.\n * @param includeSelf - Whether to call action on this node as well. Defaults to\n *   false.\n * @param childrenFirst - Whether to call action on children before calling it on\n *   parent.\n */\nexport function treeForEachDescendant<T>(\n  tree: Tree<T>,\n  action: (tree: Tree<T>) => void,\n  includeSelf?: boolean,\n  childrenFirst?: boolean\n): void {\n  if (includeSelf && !childrenFirst) {\n    action(tree);\n  }\n\n  treeForEachChild(tree, child => {\n    treeForEachDescendant(child, action, true, childrenFirst);\n  });\n\n  if (includeSelf && childrenFirst) {\n    action(tree);\n  }\n}\n\n/**\n * Calls action on each ancestor node.\n *\n * @param action - Action to be called on each parent; return\n *   true to abort.\n * @param includeSelf - Whether to call action on this node as well.\n * @returns true if the action callback returned true.\n */\nexport function treeForEachAncestor<T>(\n  tree: Tree<T>,\n  action: (tree: Tree<T>) => unknown,\n  includeSelf?: boolean\n): boolean {\n  let node = includeSelf ? tree : tree.parent;\n  while (node !== null) {\n    if (action(node)) {\n      return true;\n    }\n    node = node.parent;\n  }\n  return false;\n}\n\n/**\n * Does a depth-first traversal of this node's descendants.  When a descendant with a value\n * is found, action is called on it and traversal does not continue inside the node.\n * Action is *not* called on this node.\n *\n * @param action - Action to be called for each child.\n */\nexport function treeForEachImmediateDescendantWithValue<T>(\n  tree: Tree<T>,\n  action: (tree: Tree<T>) => void\n): void {\n  treeForEachChild(tree, child => {\n    if (treeGetValue(child) !== undefined) {\n      action(child);\n    } else {\n      treeForEachImmediateDescendantWithValue(child, action);\n    }\n  });\n}\n\n/**\n * @returns The path of this tree node, as a Path.\n */\nexport function treeGetPath<T>(tree: Tree<T>) {\n  return new Path(\n    tree.parent === null\n      ? tree.name\n      : treeGetPath(tree.parent) + '/' + tree.name\n  );\n}\n\n/**\n * Adds or removes this child from its parent based on whether it's empty or not.\n */\nfunction treeUpdateParents<T>(tree: Tree<T>) {\n  if (tree.parent !== null) {\n    treeUpdateChild(tree.parent, tree.name, tree);\n  }\n}\n\n/**\n * Adds or removes the passed child to this tree node, depending on whether it's empty.\n *\n * @param childName - The name of the child to update.\n * @param child - The child to update.\n */\nfunction treeUpdateChild<T>(tree: Tree<T>, childName: string, child: Tree<T>) {\n  const childEmpty = treeIsEmpty(child);\n  const childExists = contains(tree.node.children, childName);\n  if (childEmpty && childExists) {\n    delete tree.node.children[childName];\n    tree.node.childCount--;\n    treeUpdateParents(tree);\n  } else if (!childEmpty && !childExists) {\n    tree.node.children[childName] = child.node;\n    tree.node.childCount++;\n    treeUpdateParents(tree);\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  contains,\n  errorPrefix as errorPrefixFxn,\n  safeGet,\n  stringLength\n} from '@firebase/util';\n\nimport { RepoInfo } from '../RepoInfo';\n\nimport {\n  Path,\n  pathChild,\n  pathCompare,\n  pathContains,\n  pathGetBack,\n  pathGetFront,\n  pathSlice,\n  ValidationPath,\n  validationPathPop,\n  validationPathPush,\n  validationPathToErrorString\n} from './Path';\nimport { each, isInvalidJSONNumber } from './util';\n\n/**\n * True for invalid Firebase keys\n */\nexport const INVALID_KEY_REGEX_ = /[\\[\\].#$\\/\\u0000-\\u001F\\u007F]/;\n\n/**\n * True for invalid Firebase paths.\n * Allows '/' in paths.\n */\nexport const INVALID_PATH_REGEX_ = /[\\[\\].#$\\u0000-\\u001F\\u007F]/;\n\n/**\n * Maximum number of characters to allow in leaf value\n */\nexport const MAX_LEAF_SIZE_ = 10 * 1024 * 1024;\n\nexport const isValidKey = function (key: unknown): boolean {\n  return (\n    typeof key === 'string' && key.length !== 0 && !INVALID_KEY_REGEX_.test(key)\n  );\n};\n\nexport const isValidPathString = function (pathString: string): boolean {\n  return (\n    typeof pathString === 'string' &&\n    pathString.length !== 0 &&\n    !INVALID_PATH_REGEX_.test(pathString)\n  );\n};\n\nexport const isValidRootPathString = function (pathString: string): boolean {\n  if (pathString) {\n    // Allow '/.info/' at the beginning.\n    pathString = pathString.replace(/^\\/*\\.info(\\/|$)/, '/');\n  }\n\n  return isValidPathString(pathString);\n};\n\nexport const isValidPriority = function (priority: unknown): boolean {\n  return (\n    priority === null ||\n    typeof priority === 'string' ||\n    (typeof priority === 'number' && !isInvalidJSONNumber(priority)) ||\n    (priority &&\n      typeof priority === 'object' &&\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      contains(priority as any, '.sv'))\n  );\n};\n\n/**\n * Pre-validate a datum passed as an argument to Firebase function.\n */\nexport const validateFirebaseDataArg = function (\n  fnName: string,\n  value: unknown,\n  path: Path,\n  optional: boolean\n) {\n  if (optional && value === undefined) {\n    return;\n  }\n\n  validateFirebaseData(errorPrefixFxn(fnName, 'value'), value, path);\n};\n\n/**\n * Validate a data object client-side before sending to server.\n */\nexport const validateFirebaseData = function (\n  errorPrefix: string,\n  data: unknown,\n  path_: Path | ValidationPath\n) {\n  const path =\n    path_ instanceof Path ? new ValidationPath(path_, errorPrefix) : path_;\n\n  if (data === undefined) {\n    throw new Error(\n      errorPrefix + 'contains undefined ' + validationPathToErrorString(path)\n    );\n  }\n  if (typeof data === 'function') {\n    throw new Error(\n      errorPrefix +\n        'contains a function ' +\n        validationPathToErrorString(path) +\n        ' with contents = ' +\n        data.toString()\n    );\n  }\n  if (isInvalidJSONNumber(data)) {\n    throw new Error(\n      errorPrefix +\n        'contains ' +\n        data.toString() +\n        ' ' +\n        validationPathToErrorString(path)\n    );\n  }\n\n  // Check max leaf size, but try to avoid the utf8 conversion if we can.\n  if (\n    typeof data === 'string' &&\n    data.length > MAX_LEAF_SIZE_ / 3 &&\n    stringLength(data) > MAX_LEAF_SIZE_\n  ) {\n    throw new Error(\n      errorPrefix +\n        'contains a string greater than ' +\n        MAX_LEAF_SIZE_ +\n        ' utf8 bytes ' +\n        validationPathToErrorString(path) +\n        \" ('\" +\n        data.substring(0, 50) +\n        \"...')\"\n    );\n  }\n\n  // TODO = Perf = Consider combining the recursive validation of keys into NodeFromJSON\n  // to save extra walking of large objects.\n  if (data && typeof data === 'object') {\n    let hasDotValue = false;\n    let hasActualChild = false;\n    each(data, (key: string, value: unknown) => {\n      if (key === '.value') {\n        hasDotValue = true;\n      } else if (key !== '.priority' && key !== '.sv') {\n        hasActualChild = true;\n        if (!isValidKey(key)) {\n          throw new Error(\n            errorPrefix +\n              ' contains an invalid key (' +\n              key +\n              ') ' +\n              validationPathToErrorString(path) +\n              '.  Keys must be non-empty strings ' +\n              'and can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\"'\n          );\n        }\n      }\n\n      validationPathPush(path, key);\n      validateFirebaseData(errorPrefix, value, path);\n      validationPathPop(path);\n    });\n\n    if (hasDotValue && hasActualChild) {\n      throw new Error(\n        errorPrefix +\n          ' contains \".value\" child ' +\n          validationPathToErrorString(path) +\n          ' in addition to actual children.'\n      );\n    }\n  }\n};\n\n/**\n * Pre-validate paths passed in the firebase function.\n */\nexport const validateFirebaseMergePaths = function (\n  errorPrefix: string,\n  mergePaths: Path[]\n) {\n  let i, curPath: Path;\n  for (i = 0; i < mergePaths.length; i++) {\n    curPath = mergePaths[i];\n    const keys = pathSlice(curPath);\n    for (let j = 0; j < keys.length; j++) {\n      if (keys[j] === '.priority' && j === keys.length - 1) {\n        // .priority is OK\n      } else if (!isValidKey(keys[j])) {\n        throw new Error(\n          errorPrefix +\n            'contains an invalid key (' +\n            keys[j] +\n            ') in path ' +\n            curPath.toString() +\n            '. Keys must be non-empty strings ' +\n            'and can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\"'\n        );\n      }\n    }\n  }\n\n  // Check that update keys are not descendants of each other.\n  // We rely on the property that sorting guarantees that ancestors come\n  // right before descendants.\n  mergePaths.sort(pathCompare);\n  let prevPath: Path | null = null;\n  for (i = 0; i < mergePaths.length; i++) {\n    curPath = mergePaths[i];\n    if (prevPath !== null && pathContains(prevPath, curPath)) {\n      throw new Error(\n        errorPrefix +\n          'contains a path ' +\n          prevPath.toString() +\n          ' that is ancestor of another path ' +\n          curPath.toString()\n      );\n    }\n    prevPath = curPath;\n  }\n};\n\n/**\n * pre-validate an object passed as an argument to firebase function (\n * must be an object - e.g. for firebase.update()).\n */\nexport const validateFirebaseMergeDataArg = function (\n  fnName: string,\n  data: unknown,\n  path: Path,\n  optional: boolean\n) {\n  if (optional && data === undefined) {\n    return;\n  }\n\n  const errorPrefix = errorPrefixFxn(fnName, 'values');\n\n  if (!(data && typeof data === 'object') || Array.isArray(data)) {\n    throw new Error(\n      errorPrefix + ' must be an object containing the children to replace.'\n    );\n  }\n\n  const mergePaths: Path[] = [];\n  each(data, (key: string, value: unknown) => {\n    const curPath = new Path(key);\n    validateFirebaseData(errorPrefix, value, pathChild(path, curPath));\n    if (pathGetBack(curPath) === '.priority') {\n      if (!isValidPriority(value)) {\n        throw new Error(\n          errorPrefix +\n            \"contains an invalid value for '\" +\n            curPath.toString() +\n            \"', which must be a valid \" +\n            'Firebase priority (a string, finite number, server value, or null).'\n        );\n      }\n    }\n    mergePaths.push(curPath);\n  });\n  validateFirebaseMergePaths(errorPrefix, mergePaths);\n};\n\nexport const validatePriority = function (\n  fnName: string,\n  priority: unknown,\n  optional: boolean\n) {\n  if (optional && priority === undefined) {\n    return;\n  }\n  if (isInvalidJSONNumber(priority)) {\n    throw new Error(\n      errorPrefixFxn(fnName, 'priority') +\n        'is ' +\n        priority.toString() +\n        ', but must be a valid Firebase priority (a string, finite number, ' +\n        'server value, or null).'\n    );\n  }\n  // Special case to allow importing data with a .sv.\n  if (!isValidPriority(priority)) {\n    throw new Error(\n      errorPrefixFxn(fnName, 'priority') +\n        'must be a valid Firebase priority ' +\n        '(a string, finite number, server value, or null).'\n    );\n  }\n};\n\nexport const validateEventType = function (\n  fnName: string,\n  eventType: string,\n  optional: boolean\n) {\n  if (optional && eventType === undefined) {\n    return;\n  }\n\n  switch (eventType) {\n    case 'value':\n    case 'child_added':\n    case 'child_removed':\n    case 'child_changed':\n    case 'child_moved':\n      break;\n    default:\n      throw new Error(\n        errorPrefixFxn(fnName, 'eventType') +\n          'must be a valid event type = \"value\", \"child_added\", \"child_removed\", ' +\n          '\"child_changed\", or \"child_moved\".'\n      );\n  }\n};\n\nexport const validateKey = function (\n  fnName: string,\n  argumentName: string,\n  key: string,\n  optional: boolean\n) {\n  if (optional && key === undefined) {\n    return;\n  }\n  if (!isValidKey(key)) {\n    throw new Error(\n      errorPrefixFxn(fnName, argumentName) +\n        'was an invalid key = \"' +\n        key +\n        '\".  Firebase keys must be non-empty strings and ' +\n        'can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\").'\n    );\n  }\n};\n\nexport const validatePathString = function (\n  fnName: string,\n  argumentName: string,\n  pathString: string,\n  optional: boolean\n) {\n  if (optional && pathString === undefined) {\n    return;\n  }\n\n  if (!isValidPathString(pathString)) {\n    throw new Error(\n      errorPrefixFxn(fnName, argumentName) +\n        'was an invalid path = \"' +\n        pathString +\n        '\". Paths must be non-empty strings and ' +\n        'can\\'t contain \".\", \"#\", \"$\", \"[\", or \"]\"'\n    );\n  }\n};\n\nexport const validateRootPathString = function (\n  fnName: string,\n  argumentName: string,\n  pathString: string,\n  optional: boolean\n) {\n  if (pathString) {\n    // Allow '/.info/' at the beginning.\n    pathString = pathString.replace(/^\\/*\\.info(\\/|$)/, '/');\n  }\n\n  validatePathString(fnName, argumentName, pathString, optional);\n};\n\nexport const validateWritablePath = function (fnName: string, path: Path) {\n  if (pathGetFront(path) === '.info') {\n    throw new Error(fnName + \" failed = Can't modify data under /.info/\");\n  }\n};\n\nexport const validateUrl = function (\n  fnName: string,\n  parsedUrl: { repoInfo: RepoInfo; path: Path }\n) {\n  // TODO = Validate server better.\n  const pathString = parsedUrl.path.toString();\n  if (\n    !(typeof parsedUrl.repoInfo.host === 'string') ||\n    parsedUrl.repoInfo.host.length === 0 ||\n    (!isValidKey(parsedUrl.repoInfo.namespace) &&\n      parsedUrl.repoInfo.host.split(':')[0] !== 'localhost') ||\n    (pathString.length !== 0 && !isValidRootPathString(pathString))\n  ) {\n    throw new Error(\n      errorPrefixFxn(fnName, 'url') +\n        'must be a valid firebase URL and ' +\n        'the path can\\'t contain \".\", \"#\", \"$\", \"[\", or \"]\".'\n    );\n  }\n};\n\nexport const validateBoolean = function (\n  fnName: string,\n  argumentName: string,\n  bool: unknown,\n  optional: boolean\n) {\n  if (optional && bool === undefined) {\n    return;\n  }\n  if (typeof bool !== 'boolean') {\n    throw new Error(\n      errorPrefixFxn(fnName, argumentName) + 'must be a boolean.'\n    );\n  }\n};\n\nexport const validateString = function (\n  fnName: string,\n  argumentName: string,\n  string: unknown,\n  optional: boolean\n) {\n  if (optional && string === undefined) {\n    return;\n  }\n  if (!(typeof string === 'string')) {\n    throw new Error(\n      errorPrefixFxn(fnName, argumentName) + 'must be a valid string.'\n    );\n  }\n};\n\nexport const validateObject = function (\n  fnName: string,\n  argumentName: string,\n  obj: unknown,\n  optional: boolean\n) {\n  if (optional && obj === undefined) {\n    return;\n  }\n  if (!(obj && typeof obj === 'object') || obj === null) {\n    throw new Error(\n      errorPrefixFxn(fnName, argumentName) + 'must be a valid object.'\n    );\n  }\n};\n\nexport const validateObjectContainsKey = function (\n  fnName: string,\n  argumentName: string,\n  obj: unknown,\n  key: string,\n  optional: boolean,\n  optType?: string\n) {\n  const objectContainsKey =\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    obj && typeof obj === 'object' && contains(obj as any, key);\n\n  if (!objectContainsKey) {\n    if (optional) {\n      return;\n    } else {\n      throw new Error(\n        errorPrefixFxn(fnName, argumentName) +\n          'must contain the key \"' +\n          key +\n          '\"'\n      );\n    }\n  }\n\n  if (optType) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const val = safeGet(obj as any, key);\n    if (\n      (optType === 'number' && !(typeof val === 'number')) ||\n      (optType === 'string' && !(typeof val === 'string')) ||\n      (optType === 'boolean' && !(typeof val === 'boolean')) ||\n      (optType === 'function' && !(typeof val === 'function')) ||\n      (optType === 'object' && !(typeof val === 'object') && val)\n    ) {\n      if (optional) {\n        throw new Error(\n          errorPrefixFxn(fnName, argumentName) +\n            'contains invalid value for key \"' +\n            key +\n            '\" (must be of type \"' +\n            optType +\n            '\")'\n        );\n      } else {\n        throw new Error(\n          errorPrefixFxn(fnName, argumentName) +\n            'must contain the key \"' +\n            key +\n            '\" with type \"' +\n            optType +\n            '\"'\n        );\n      }\n    }\n  }\n};\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Path, pathContains, pathEquals } from '../util/Path';\nimport { exceptionGuard, log, logger } from '../util/util';\n\nimport { Event } from './Event';\n\n/**\n * The event queue serves a few purposes:\n * 1. It ensures we maintain event order in the face of event callbacks doing operations that result in more\n *    events being queued.\n * 2. raiseQueuedEvents() handles being called reentrantly nicely.  That is, if in the course of raising events,\n *    raiseQueuedEvents() is called again, the \"inner\" call will pick up raising events where the \"outer\" call\n *    left off, ensuring that the events are still raised synchronously and in order.\n * 3. You can use raiseEventsAtPath and raiseEventsForChangedPath to ensure only relevant previously-queued\n *    events are raised synchronously.\n *\n * NOTE: This can all go away if/when we move to async events.\n *\n */\nexport class EventQueue {\n  eventLists_: EventList[] = [];\n\n  /**\n   * Tracks recursion depth of raiseQueuedEvents_, for debugging purposes.\n   */\n  recursionDepth_ = 0;\n}\n\n/**\n * @param eventDataList - The new events to queue.\n */\nexport function eventQueueQueueEvents(\n  eventQueue: EventQueue,\n  eventDataList: Event[]\n) {\n  // We group events by path, storing them in a single EventList, to make it easier to skip over them quickly.\n  let currList: EventList | null = null;\n  for (let i = 0; i < eventDataList.length; i++) {\n    const data = eventDataList[i];\n    const path = data.getPath();\n    if (currList !== null && !pathEquals(path, currList.path)) {\n      eventQueue.eventLists_.push(currList);\n      currList = null;\n    }\n\n    if (currList === null) {\n      currList = { events: [], path };\n    }\n\n    currList.events.push(data);\n  }\n  if (currList) {\n    eventQueue.eventLists_.push(currList);\n  }\n}\n\n/**\n * Queues the specified events and synchronously raises all events (including previously queued ones)\n * for the specified path.\n *\n * It is assumed that the new events are all for the specified path.\n *\n * @param path - The path to raise events for.\n * @param eventDataList - The new events to raise.\n */\nexport function eventQueueRaiseEventsAtPath(\n  eventQueue: EventQueue,\n  path: Path,\n  eventDataList: Event[]\n) {\n  eventQueueQueueEvents(eventQueue, eventDataList);\n  eventQueueRaiseQueuedEventsMatchingPredicate(eventQueue, eventPath =>\n    pathEquals(eventPath, path)\n  );\n}\n\n/**\n * Queues the specified events and synchronously raises all events (including previously queued ones) for\n * locations related to the specified change path (i.e. all ancestors and descendants).\n *\n * It is assumed that the new events are all related (ancestor or descendant) to the specified path.\n *\n * @param changedPath - The path to raise events for.\n * @param eventDataList - The events to raise\n */\nexport function eventQueueRaiseEventsForChangedPath(\n  eventQueue: EventQueue,\n  changedPath: Path,\n  eventDataList: Event[]\n) {\n  eventQueueQueueEvents(eventQueue, eventDataList);\n  eventQueueRaiseQueuedEventsMatchingPredicate(\n    eventQueue,\n    eventPath =>\n      pathContains(eventPath, changedPath) ||\n      pathContains(changedPath, eventPath)\n  );\n}\n\nfunction eventQueueRaiseQueuedEventsMatchingPredicate(\n  eventQueue: EventQueue,\n  predicate: (path: Path) => boolean\n) {\n  eventQueue.recursionDepth_++;\n\n  let sentAll = true;\n  for (let i = 0; i < eventQueue.eventLists_.length; i++) {\n    const eventList = eventQueue.eventLists_[i];\n    if (eventList) {\n      const eventPath = eventList.path;\n      if (predicate(eventPath)) {\n        eventListRaise(eventQueue.eventLists_[i]);\n        eventQueue.eventLists_[i] = null;\n      } else {\n        sentAll = false;\n      }\n    }\n  }\n\n  if (sentAll) {\n    eventQueue.eventLists_ = [];\n  }\n\n  eventQueue.recursionDepth_--;\n}\n\ninterface EventList {\n  events: Event[];\n  path: Path;\n}\n\n/**\n * Iterates through the list and raises each event\n */\nfunction eventListRaise(eventList: EventList) {\n  for (let i = 0; i < eventList.events.length; i++) {\n    const eventData = eventList.events[i];\n    if (eventData !== null) {\n      eventList.events[i] = null;\n      const eventFn = eventData.getEventRunner();\n      if (logger) {\n        log('event: ' + eventData.toString());\n      }\n      exceptionGuard(eventFn);\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  assert,\n  contains,\n  isEmpty,\n  map,\n  safeGet,\n  stringify\n} from '@firebase/util';\n\nimport { AppCheckTokenProvider } from './AppCheckTokenProvider';\nimport { AuthTokenProvider } from './AuthTokenProvider';\nimport { PersistentConnection } from './PersistentConnection';\nimport { ReadonlyRestClient } from './ReadonlyRestClient';\nimport { RepoInfo } from './RepoInfo';\nimport { ServerActions } from './ServerActions';\nimport { ChildrenNode } from './snap/ChildrenNode';\nimport { Node } from './snap/Node';\nimport { nodeFromJSON } from './snap/nodeFromJSON';\nimport { SnapshotHolder } from './SnapshotHolder';\nimport {\n  newSparseSnapshotTree,\n  SparseSnapshotTree,\n  sparseSnapshotTreeForEachTree,\n  sparseSnapshotTreeForget,\n  sparseSnapshotTreeRemember\n} from './SparseSnapshotTree';\nimport { StatsCollection } from './stats/StatsCollection';\nimport { StatsListener } from './stats/StatsListener';\nimport {\n  statsManagerGetCollection,\n  statsManagerGetOrCreateReporter\n} from './stats/StatsManager';\nimport { StatsReporter, statsReporterIncludeStat } from './stats/StatsReporter';\nimport {\n  SyncTree,\n  syncTreeAckUserWrite,\n  syncTreeAddEventRegistration,\n  syncTreeApplyServerMerge,\n  syncTreeApplyServerOverwrite,\n  syncTreeApplyTaggedQueryMerge,\n  syncTreeApplyTaggedQueryOverwrite,\n  syncTreeApplyUserMerge,\n  syncTreeApplyUserOverwrite,\n  syncTreeCalcCompleteEventCache,\n  syncTreeGetServerValue,\n  syncTreeRemoveEventRegistration\n} from './SyncTree';\nimport { Indexable } from './util/misc';\nimport {\n  newEmptyPath,\n  newRelativePath,\n  Path,\n  pathChild,\n  pathGetFront,\n  pathPopFront\n} from './util/Path';\nimport {\n  generateWithValues,\n  resolveDeferredValueSnapshot,\n  resolveDeferredValueTree\n} from './util/ServerValues';\nimport {\n  Tree,\n  treeForEachAncestor,\n  treeForEachChild,\n  treeForEachDescendant,\n  treeGetPath,\n  treeGetValue,\n  treeHasChildren,\n  treeSetValue,\n  treeSubTree\n} from './util/Tree';\nimport {\n  beingCrawled,\n  each,\n  exceptionGuard,\n  log,\n  LUIDGenerator,\n  warn\n} from './util/util';\nimport { isValidPriority, validateFirebaseData } from './util/validation';\nimport { Event } from './view/Event';\nimport {\n  EventQueue,\n  eventQueueQueueEvents,\n  eventQueueRaiseEventsAtPath,\n  eventQueueRaiseEventsForChangedPath\n} from './view/EventQueue';\nimport { EventRegistration, QueryContext } from './view/EventRegistration';\n\nconst INTERRUPT_REASON = 'repo_interrupt';\n\n/**\n * If a transaction does not succeed after 25 retries, we abort it. Among other\n * things this ensure that if there's ever a bug causing a mismatch between\n * client / server hashes for some data, we won't retry indefinitely.\n */\nconst MAX_TRANSACTION_RETRIES = 25;\n\nconst enum TransactionStatus {\n  // We've run the transaction and updated transactionResultData_ with the result, but it isn't currently sent to the\n  // server. A transaction will go from RUN -> SENT -> RUN if it comes back from the server as rejected due to\n  // mismatched hash.\n  RUN,\n\n  // We've run the transaction and sent it to the server and it's currently outstanding (hasn't come back as accepted\n  // or rejected yet).\n  SENT,\n\n  // Temporary state used to mark completed transactions (whether successful or aborted).  The transaction will be\n  // removed when we get a chance to prune completed ones.\n  COMPLETED,\n\n  // Used when an already-sent transaction needs to be aborted (e.g. due to a conflicting set() call that was made).\n  // If it comes back as unsuccessful, we'll abort it.\n  SENT_NEEDS_ABORT,\n\n  // Temporary state used to mark transactions that need to be aborted.\n  NEEDS_ABORT\n}\n\ninterface Transaction {\n  path: Path;\n  update: (a: unknown) => unknown;\n  onComplete: (\n    error: Error | null,\n    committed: boolean,\n    node: Node | null\n  ) => void;\n  status: TransactionStatus;\n  order: number;\n  applyLocally: boolean;\n  retryCount: number;\n  unwatcher: () => void;\n  abortReason: string | null;\n  currentWriteId: number;\n  currentInputSnapshot: Node | null;\n  currentOutputSnapshotRaw: Node | null;\n  currentOutputSnapshotResolved: Node | null;\n}\n\n/**\n * A connection to a single data repository.\n */\nexport class Repo {\n  /** Key for uniquely identifying this repo, used in RepoManager */\n  readonly key: string;\n\n  dataUpdateCount = 0;\n  infoSyncTree_: SyncTree;\n  serverSyncTree_: SyncTree;\n\n  stats_: StatsCollection;\n  statsListener_: StatsListener | null = null;\n  eventQueue_ = new EventQueue();\n  nextWriteId_ = 1;\n  server_: ServerActions;\n  statsReporter_: StatsReporter;\n  infoData_: SnapshotHolder;\n  interceptServerDataCallback_: ((a: string, b: unknown) => void) | null = null;\n\n  /** A list of data pieces and paths to be set when this client disconnects. */\n  onDisconnect_: SparseSnapshotTree = newSparseSnapshotTree();\n\n  /** Stores queues of outstanding transactions for Firebase locations. */\n  transactionQueueTree_ = new Tree<Transaction[]>();\n\n  // TODO: This should be @private but it's used by test_access.js and internal.js\n  persistentConnection_: PersistentConnection | null = null;\n\n  constructor(\n    public repoInfo_: RepoInfo,\n    public forceRestClient_: boolean,\n    public authTokenProvider_: AuthTokenProvider,\n    public appCheckProvider_: AppCheckTokenProvider\n  ) {\n    // This key is intentionally not updated if RepoInfo is later changed or replaced\n    this.key = this.repoInfo_.toURLString();\n  }\n\n  /**\n   * @returns The URL corresponding to the root of this Firebase.\n   */\n  toString(): string {\n    return (\n      (this.repoInfo_.secure ? 'https://' : 'http://') + this.repoInfo_.host\n    );\n  }\n}\n\nexport function repoStart(\n  repo: Repo,\n  appId: string,\n  authOverride?: object\n): void {\n  repo.stats_ = statsManagerGetCollection(repo.repoInfo_);\n\n  if (repo.forceRestClient_ || beingCrawled()) {\n    repo.server_ = new ReadonlyRestClient(\n      repo.repoInfo_,\n      (\n        pathString: string,\n        data: unknown,\n        isMerge: boolean,\n        tag: number | null\n      ) => {\n        repoOnDataUpdate(repo, pathString, data, isMerge, tag);\n      },\n      repo.authTokenProvider_,\n      repo.appCheckProvider_\n    );\n\n    // Minor hack: Fire onConnect immediately, since there's no actual connection.\n    setTimeout(() => repoOnConnectStatus(repo, /* connectStatus= */ true), 0);\n  } else {\n    // Validate authOverride\n    if (typeof authOverride !== 'undefined' && authOverride !== null) {\n      if (typeof authOverride !== 'object') {\n        throw new Error(\n          'Only objects are supported for option databaseAuthVariableOverride'\n        );\n      }\n      try {\n        stringify(authOverride);\n      } catch (e) {\n        throw new Error('Invalid authOverride provided: ' + e);\n      }\n    }\n\n    repo.persistentConnection_ = new PersistentConnection(\n      repo.repoInfo_,\n      appId,\n      (\n        pathString: string,\n        data: unknown,\n        isMerge: boolean,\n        tag: number | null\n      ) => {\n        repoOnDataUpdate(repo, pathString, data, isMerge, tag);\n      },\n      (connectStatus: boolean) => {\n        repoOnConnectStatus(repo, connectStatus);\n      },\n      (updates: object) => {\n        repoOnServerInfoUpdate(repo, updates);\n      },\n      repo.authTokenProvider_,\n      repo.appCheckProvider_,\n      authOverride\n    );\n\n    repo.server_ = repo.persistentConnection_;\n  }\n\n  repo.authTokenProvider_.addTokenChangeListener(token => {\n    repo.server_.refreshAuthToken(token);\n  });\n\n  repo.appCheckProvider_.addTokenChangeListener(result => {\n    repo.server_.refreshAppCheckToken(result.token);\n  });\n\n  // In the case of multiple Repos for the same repoInfo (i.e. there are multiple Firebase.Contexts being used),\n  // we only want to create one StatsReporter.  As such, we'll report stats over the first Repo created.\n  repo.statsReporter_ = statsManagerGetOrCreateReporter(\n    repo.repoInfo_,\n    () => new StatsReporter(repo.stats_, repo.server_)\n  );\n\n  // Used for .info.\n  repo.infoData_ = new SnapshotHolder();\n  repo.infoSyncTree_ = new SyncTree({\n    startListening: (query, tag, currentHashFn, onComplete) => {\n      let infoEvents: Event[] = [];\n      const node = repo.infoData_.getNode(query._path);\n      // This is possibly a hack, but we have different semantics for .info endpoints. We don't raise null events\n      // on initial data...\n      if (!node.isEmpty()) {\n        infoEvents = syncTreeApplyServerOverwrite(\n          repo.infoSyncTree_,\n          query._path,\n          node\n        );\n        setTimeout(() => {\n          onComplete('ok');\n        }, 0);\n      }\n      return infoEvents;\n    },\n    stopListening: () => {}\n  });\n  repoUpdateInfo(repo, 'connected', false);\n\n  repo.serverSyncTree_ = new SyncTree({\n    startListening: (query, tag, currentHashFn, onComplete) => {\n      repo.server_.listen(query, currentHashFn, tag, (status, data) => {\n        const events = onComplete(status, data);\n        eventQueueRaiseEventsForChangedPath(\n          repo.eventQueue_,\n          query._path,\n          events\n        );\n      });\n      // No synchronous events for network-backed sync trees\n      return [];\n    },\n    stopListening: (query, tag) => {\n      repo.server_.unlisten(query, tag);\n    }\n  });\n}\n\n/**\n * @returns The time in milliseconds, taking the server offset into account if we have one.\n */\nexport function repoServerTime(repo: Repo): number {\n  const offsetNode = repo.infoData_.getNode(new Path('.info/serverTimeOffset'));\n  const offset = (offsetNode.val() as number) || 0;\n  return new Date().getTime() + offset;\n}\n\n/**\n * Generate ServerValues using some variables from the repo object.\n */\nexport function repoGenerateServerValues(repo: Repo): Indexable {\n  return generateWithValues({\n    timestamp: repoServerTime(repo)\n  });\n}\n\n/**\n * Called by realtime when we get new messages from the server.\n */\nfunction repoOnDataUpdate(\n  repo: Repo,\n  pathString: string,\n  data: unknown,\n  isMerge: boolean,\n  tag: number | null\n): void {\n  // For testing.\n  repo.dataUpdateCount++;\n  const path = new Path(pathString);\n  data = repo.interceptServerDataCallback_\n    ? repo.interceptServerDataCallback_(pathString, data)\n    : data;\n  let events = [];\n  if (tag) {\n    if (isMerge) {\n      const taggedChildren = map(\n        data as { [k: string]: unknown },\n        (raw: unknown) => nodeFromJSON(raw)\n      );\n      events = syncTreeApplyTaggedQueryMerge(\n        repo.serverSyncTree_,\n        path,\n        taggedChildren,\n        tag\n      );\n    } else {\n      const taggedSnap = nodeFromJSON(data);\n      events = syncTreeApplyTaggedQueryOverwrite(\n        repo.serverSyncTree_,\n        path,\n        taggedSnap,\n        tag\n      );\n    }\n  } else if (isMerge) {\n    const changedChildren = map(\n      data as { [k: string]: unknown },\n      (raw: unknown) => nodeFromJSON(raw)\n    );\n    events = syncTreeApplyServerMerge(\n      repo.serverSyncTree_,\n      path,\n      changedChildren\n    );\n  } else {\n    const snap = nodeFromJSON(data);\n    events = syncTreeApplyServerOverwrite(repo.serverSyncTree_, path, snap);\n  }\n  let affectedPath = path;\n  if (events.length > 0) {\n    // Since we have a listener outstanding for each transaction, receiving any events\n    // is a proxy for some change having occurred.\n    affectedPath = repoRerunTransactions(repo, path);\n  }\n  eventQueueRaiseEventsForChangedPath(repo.eventQueue_, affectedPath, events);\n}\n\n// TODO: This should be @private but it's used by test_access.js and internal.js\nexport function repoInterceptServerData(\n  repo: Repo,\n  callback: ((a: string, b: unknown) => unknown) | null\n): void {\n  repo.interceptServerDataCallback_ = callback;\n}\n\nfunction repoOnConnectStatus(repo: Repo, connectStatus: boolean): void {\n  repoUpdateInfo(repo, 'connected', connectStatus);\n  if (connectStatus === false) {\n    repoRunOnDisconnectEvents(repo);\n  }\n}\n\nfunction repoOnServerInfoUpdate(repo: Repo, updates: object): void {\n  each(updates, (key: string, value: unknown) => {\n    repoUpdateInfo(repo, key, value);\n  });\n}\n\nfunction repoUpdateInfo(repo: Repo, pathString: string, value: unknown): void {\n  const path = new Path('/.info/' + pathString);\n  const newNode = nodeFromJSON(value);\n  repo.infoData_.updateSnapshot(path, newNode);\n  const events = syncTreeApplyServerOverwrite(\n    repo.infoSyncTree_,\n    path,\n    newNode\n  );\n  eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, events);\n}\n\nfunction repoGetNextWriteId(repo: Repo): number {\n  return repo.nextWriteId_++;\n}\n\n/**\n * The purpose of `getValue` is to return the latest known value\n * satisfying `query`.\n *\n * This method will first check for in-memory cached values\n * belonging to active listeners. If they are found, such values\n * are considered to be the most up-to-date.\n *\n * If the client is not connected, this method will try to\n * establish a connection and request the value for `query`. If\n * the client is not able to retrieve the query result, it reports\n * an error.\n *\n * @param query - The query to surface a value for.\n */\nexport function repoGetValue(repo: Repo, query: QueryContext): Promise<Node> {\n  // Only active queries are cached. There is no persisted cache.\n  const cached = syncTreeGetServerValue(repo.serverSyncTree_, query);\n  if (cached != null) {\n    return Promise.resolve(cached);\n  }\n  return repo.server_.get(query).then(\n    payload => {\n      const node = nodeFromJSON(payload as string).withIndex(\n        query._queryParams.getIndex()\n      );\n      const events = syncTreeApplyServerOverwrite(\n        repo.serverSyncTree_,\n        query._path,\n        node\n      );\n      eventQueueRaiseEventsAtPath(repo.eventQueue_, query._path, events);\n      return Promise.resolve(node);\n    },\n    err => {\n      repoLog(repo, 'get for query ' + stringify(query) + ' failed: ' + err);\n      return Promise.reject(new Error(err as string));\n    }\n  );\n}\n\nexport function repoSetWithPriority(\n  repo: Repo,\n  path: Path,\n  newVal: unknown,\n  newPriority: number | string | null,\n  onComplete: ((status: Error | null, errorReason?: string) => void) | null\n): void {\n  repoLog(repo, 'set', {\n    path: path.toString(),\n    value: newVal,\n    priority: newPriority\n  });\n\n  // TODO: Optimize this behavior to either (a) store flag to skip resolving where possible and / or\n  // (b) store unresolved paths on JSON parse\n  const serverValues = repoGenerateServerValues(repo);\n  const newNodeUnresolved = nodeFromJSON(newVal, newPriority);\n  const existing = syncTreeCalcCompleteEventCache(repo.serverSyncTree_, path);\n  const newNode = resolveDeferredValueSnapshot(\n    newNodeUnresolved,\n    existing,\n    serverValues\n  );\n\n  const writeId = repoGetNextWriteId(repo);\n  const events = syncTreeApplyUserOverwrite(\n    repo.serverSyncTree_,\n    path,\n    newNode,\n    writeId,\n    true\n  );\n  eventQueueQueueEvents(repo.eventQueue_, events);\n  repo.server_.put(\n    path.toString(),\n    newNodeUnresolved.val(/*export=*/ true),\n    (status, errorReason) => {\n      const success = status === 'ok';\n      if (!success) {\n        warn('set at ' + path + ' failed: ' + status);\n      }\n\n      const clearEvents = syncTreeAckUserWrite(\n        repo.serverSyncTree_,\n        writeId,\n        !success\n      );\n      eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, clearEvents);\n      repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\n    }\n  );\n  const affectedPath = repoAbortTransactions(repo, path);\n  repoRerunTransactions(repo, affectedPath);\n  // We queued the events above, so just flush the queue here\n  eventQueueRaiseEventsForChangedPath(repo.eventQueue_, affectedPath, []);\n}\n\nexport function repoUpdate(\n  repo: Repo,\n  path: Path,\n  childrenToMerge: { [k: string]: unknown },\n  onComplete: ((status: Error | null, errorReason?: string) => void) | null\n): void {\n  repoLog(repo, 'update', { path: path.toString(), value: childrenToMerge });\n\n  // Start with our existing data and merge each child into it.\n  let empty = true;\n  const serverValues = repoGenerateServerValues(repo);\n  const changedChildren: { [k: string]: Node } = {};\n  each(childrenToMerge, (changedKey: string, changedValue: unknown) => {\n    empty = false;\n    changedChildren[changedKey] = resolveDeferredValueTree(\n      pathChild(path, changedKey),\n      nodeFromJSON(changedValue),\n      repo.serverSyncTree_,\n      serverValues\n    );\n  });\n\n  if (!empty) {\n    const writeId = repoGetNextWriteId(repo);\n    const events = syncTreeApplyUserMerge(\n      repo.serverSyncTree_,\n      path,\n      changedChildren,\n      writeId\n    );\n    eventQueueQueueEvents(repo.eventQueue_, events);\n    repo.server_.merge(\n      path.toString(),\n      childrenToMerge,\n      (status, errorReason) => {\n        const success = status === 'ok';\n        if (!success) {\n          warn('update at ' + path + ' failed: ' + status);\n        }\n\n        const clearEvents = syncTreeAckUserWrite(\n          repo.serverSyncTree_,\n          writeId,\n          !success\n        );\n        const affectedPath =\n          clearEvents.length > 0 ? repoRerunTransactions(repo, path) : path;\n        eventQueueRaiseEventsForChangedPath(\n          repo.eventQueue_,\n          affectedPath,\n          clearEvents\n        );\n        repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\n      }\n    );\n\n    each(childrenToMerge, (changedPath: string) => {\n      const affectedPath = repoAbortTransactions(\n        repo,\n        pathChild(path, changedPath)\n      );\n      repoRerunTransactions(repo, affectedPath);\n    });\n\n    // We queued the events above, so just flush the queue here\n    eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, []);\n  } else {\n    log(\"update() called with empty data.  Don't do anything.\");\n    repoCallOnCompleteCallback(repo, onComplete, 'ok', undefined);\n  }\n}\n\n/**\n * Applies all of the changes stored up in the onDisconnect_ tree.\n */\nfunction repoRunOnDisconnectEvents(repo: Repo): void {\n  repoLog(repo, 'onDisconnectEvents');\n\n  const serverValues = repoGenerateServerValues(repo);\n  const resolvedOnDisconnectTree = newSparseSnapshotTree();\n  sparseSnapshotTreeForEachTree(\n    repo.onDisconnect_,\n    newEmptyPath(),\n    (path, node) => {\n      const resolved = resolveDeferredValueTree(\n        path,\n        node,\n        repo.serverSyncTree_,\n        serverValues\n      );\n      sparseSnapshotTreeRemember(resolvedOnDisconnectTree, path, resolved);\n    }\n  );\n  let events: Event[] = [];\n\n  sparseSnapshotTreeForEachTree(\n    resolvedOnDisconnectTree,\n    newEmptyPath(),\n    (path, snap) => {\n      events = events.concat(\n        syncTreeApplyServerOverwrite(repo.serverSyncTree_, path, snap)\n      );\n      const affectedPath = repoAbortTransactions(repo, path);\n      repoRerunTransactions(repo, affectedPath);\n    }\n  );\n\n  repo.onDisconnect_ = newSparseSnapshotTree();\n  eventQueueRaiseEventsForChangedPath(repo.eventQueue_, newEmptyPath(), events);\n}\n\nexport function repoOnDisconnectCancel(\n  repo: Repo,\n  path: Path,\n  onComplete: ((status: Error | null, errorReason?: string) => void) | null\n): void {\n  repo.server_.onDisconnectCancel(path.toString(), (status, errorReason) => {\n    if (status === 'ok') {\n      sparseSnapshotTreeForget(repo.onDisconnect_, path);\n    }\n    repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\n  });\n}\n\nexport function repoOnDisconnectSet(\n  repo: Repo,\n  path: Path,\n  value: unknown,\n  onComplete: ((status: Error | null, errorReason?: string) => void) | null\n): void {\n  const newNode = nodeFromJSON(value);\n  repo.server_.onDisconnectPut(\n    path.toString(),\n    newNode.val(/*export=*/ true),\n    (status, errorReason) => {\n      if (status === 'ok') {\n        sparseSnapshotTreeRemember(repo.onDisconnect_, path, newNode);\n      }\n      repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\n    }\n  );\n}\n\nexport function repoOnDisconnectSetWithPriority(\n  repo: Repo,\n  path: Path,\n  value: unknown,\n  priority: unknown,\n  onComplete: ((status: Error | null, errorReason?: string) => void) | null\n): void {\n  const newNode = nodeFromJSON(value, priority);\n  repo.server_.onDisconnectPut(\n    path.toString(),\n    newNode.val(/*export=*/ true),\n    (status, errorReason) => {\n      if (status === 'ok') {\n        sparseSnapshotTreeRemember(repo.onDisconnect_, path, newNode);\n      }\n      repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\n    }\n  );\n}\n\nexport function repoOnDisconnectUpdate(\n  repo: Repo,\n  path: Path,\n  childrenToMerge: { [k: string]: unknown },\n  onComplete: ((status: Error | null, errorReason?: string) => void) | null\n): void {\n  if (isEmpty(childrenToMerge)) {\n    log(\"onDisconnect().update() called with empty data.  Don't do anything.\");\n    repoCallOnCompleteCallback(repo, onComplete, 'ok', undefined);\n    return;\n  }\n\n  repo.server_.onDisconnectMerge(\n    path.toString(),\n    childrenToMerge,\n    (status, errorReason) => {\n      if (status === 'ok') {\n        each(childrenToMerge, (childName: string, childNode: unknown) => {\n          const newChildNode = nodeFromJSON(childNode);\n          sparseSnapshotTreeRemember(\n            repo.onDisconnect_,\n            pathChild(path, childName),\n            newChildNode\n          );\n        });\n      }\n      repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\n    }\n  );\n}\n\nexport function repoAddEventCallbackForQuery(\n  repo: Repo,\n  query: QueryContext,\n  eventRegistration: EventRegistration\n): void {\n  let events;\n  if (pathGetFront(query._path) === '.info') {\n    events = syncTreeAddEventRegistration(\n      repo.infoSyncTree_,\n      query,\n      eventRegistration\n    );\n  } else {\n    events = syncTreeAddEventRegistration(\n      repo.serverSyncTree_,\n      query,\n      eventRegistration\n    );\n  }\n  eventQueueRaiseEventsAtPath(repo.eventQueue_, query._path, events);\n}\n\nexport function repoRemoveEventCallbackForQuery(\n  repo: Repo,\n  query: QueryContext,\n  eventRegistration: EventRegistration\n): void {\n  // These are guaranteed not to raise events, since we're not passing in a cancelError. However, we can future-proof\n  // a little bit by handling the return values anyways.\n  let events;\n  if (pathGetFront(query._path) === '.info') {\n    events = syncTreeRemoveEventRegistration(\n      repo.infoSyncTree_,\n      query,\n      eventRegistration\n    );\n  } else {\n    events = syncTreeRemoveEventRegistration(\n      repo.serverSyncTree_,\n      query,\n      eventRegistration\n    );\n  }\n  eventQueueRaiseEventsAtPath(repo.eventQueue_, query._path, events);\n}\n\nexport function repoInterrupt(repo: Repo): void {\n  if (repo.persistentConnection_) {\n    repo.persistentConnection_.interrupt(INTERRUPT_REASON);\n  }\n}\n\nexport function repoResume(repo: Repo): void {\n  if (repo.persistentConnection_) {\n    repo.persistentConnection_.resume(INTERRUPT_REASON);\n  }\n}\n\nexport function repoStats(repo: Repo, showDelta: boolean = false): void {\n  if (typeof console === 'undefined') {\n    return;\n  }\n\n  let stats: { [k: string]: unknown };\n  if (showDelta) {\n    if (!repo.statsListener_) {\n      repo.statsListener_ = new StatsListener(repo.stats_);\n    }\n    stats = repo.statsListener_.get();\n  } else {\n    stats = repo.stats_.get();\n  }\n\n  const longestName = Object.keys(stats).reduce(\n    (previousValue, currentValue) =>\n      Math.max(currentValue.length, previousValue),\n    0\n  );\n\n  each(stats, (stat: string, value: unknown) => {\n    let paddedStat = stat;\n    // pad stat names to be the same length (plus 2 extra spaces).\n    for (let i = stat.length; i < longestName + 2; i++) {\n      paddedStat += ' ';\n    }\n    console.log(paddedStat + value);\n  });\n}\n\nexport function repoStatsIncrementCounter(repo: Repo, metric: string): void {\n  repo.stats_.incrementCounter(metric);\n  statsReporterIncludeStat(repo.statsReporter_, metric);\n}\n\nfunction repoLog(repo: Repo, ...varArgs: unknown[]): void {\n  let prefix = '';\n  if (repo.persistentConnection_) {\n    prefix = repo.persistentConnection_.id + ':';\n  }\n  log(prefix, ...varArgs);\n}\n\nexport function repoCallOnCompleteCallback(\n  repo: Repo,\n  callback: ((status: Error | null, errorReason?: string) => void) | null,\n  status: string,\n  errorReason?: string | null\n): void {\n  if (callback) {\n    exceptionGuard(() => {\n      if (status === 'ok') {\n        callback(null);\n      } else {\n        const code = (status || 'error').toUpperCase();\n        let message = code;\n        if (errorReason) {\n          message += ': ' + errorReason;\n        }\n\n        const error = new Error(message);\n\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        (error as any).code = code;\n        callback(error);\n      }\n    });\n  }\n}\n\n/**\n * Creates a new transaction, adds it to the transactions we're tracking, and\n * sends it to the server if possible.\n *\n * @param path - Path at which to do transaction.\n * @param transactionUpdate - Update callback.\n * @param onComplete - Completion callback.\n * @param unwatcher - Function that will be called when the transaction no longer\n * need data updates for `path`.\n * @param applyLocally - Whether or not to make intermediate results visible\n */\nexport function repoStartTransaction(\n  repo: Repo,\n  path: Path,\n  transactionUpdate: (a: unknown) => unknown,\n  onComplete: ((error: Error, committed: boolean, node: Node) => void) | null,\n  unwatcher: () => void,\n  applyLocally: boolean\n): void {\n  repoLog(repo, 'transaction on ' + path);\n\n  // Initialize transaction.\n  const transaction: Transaction = {\n    path,\n    update: transactionUpdate,\n    onComplete,\n    // One of TransactionStatus enums.\n    status: null,\n    // Used when combining transactions at different locations to figure out\n    // which one goes first.\n    order: LUIDGenerator(),\n    // Whether to raise local events for this transaction.\n    applyLocally,\n    // Count of how many times we've retried the transaction.\n    retryCount: 0,\n    // Function to call to clean up our .on() listener.\n    unwatcher,\n    // Stores why a transaction was aborted.\n    abortReason: null,\n    currentWriteId: null,\n    currentInputSnapshot: null,\n    currentOutputSnapshotRaw: null,\n    currentOutputSnapshotResolved: null\n  };\n\n  // Run transaction initially.\n  const currentState = repoGetLatestState(repo, path, undefined);\n  transaction.currentInputSnapshot = currentState;\n  const newVal = transaction.update(currentState.val());\n  if (newVal === undefined) {\n    // Abort transaction.\n    transaction.unwatcher();\n    transaction.currentOutputSnapshotRaw = null;\n    transaction.currentOutputSnapshotResolved = null;\n    if (transaction.onComplete) {\n      transaction.onComplete(null, false, transaction.currentInputSnapshot);\n    }\n  } else {\n    validateFirebaseData(\n      'transaction failed: Data returned ',\n      newVal,\n      transaction.path\n    );\n\n    // Mark as run and add to our queue.\n    transaction.status = TransactionStatus.RUN;\n    const queueNode = treeSubTree(repo.transactionQueueTree_, path);\n    const nodeQueue = treeGetValue(queueNode) || [];\n    nodeQueue.push(transaction);\n\n    treeSetValue(queueNode, nodeQueue);\n\n    // Update visibleData and raise events\n    // Note: We intentionally raise events after updating all of our\n    // transaction state, since the user could start new transactions from the\n    // event callbacks.\n    let priorityForNode;\n    if (\n      typeof newVal === 'object' &&\n      newVal !== null &&\n      contains(newVal, '.priority')\n    ) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      priorityForNode = safeGet(newVal as any, '.priority');\n      assert(\n        isValidPriority(priorityForNode),\n        'Invalid priority returned by transaction. ' +\n          'Priority must be a valid string, finite number, server value, or null.'\n      );\n    } else {\n      const currentNode =\n        syncTreeCalcCompleteEventCache(repo.serverSyncTree_, path) ||\n        ChildrenNode.EMPTY_NODE;\n      priorityForNode = currentNode.getPriority().val();\n    }\n\n    const serverValues = repoGenerateServerValues(repo);\n    const newNodeUnresolved = nodeFromJSON(newVal, priorityForNode);\n    const newNode = resolveDeferredValueSnapshot(\n      newNodeUnresolved,\n      currentState,\n      serverValues\n    );\n    transaction.currentOutputSnapshotRaw = newNodeUnresolved;\n    transaction.currentOutputSnapshotResolved = newNode;\n    transaction.currentWriteId = repoGetNextWriteId(repo);\n\n    const events = syncTreeApplyUserOverwrite(\n      repo.serverSyncTree_,\n      path,\n      newNode,\n      transaction.currentWriteId,\n      transaction.applyLocally\n    );\n    eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, events);\n\n    repoSendReadyTransactions(repo, repo.transactionQueueTree_);\n  }\n}\n\n/**\n * @param excludeSets - A specific set to exclude\n */\nfunction repoGetLatestState(\n  repo: Repo,\n  path: Path,\n  excludeSets?: number[]\n): Node {\n  return (\n    syncTreeCalcCompleteEventCache(repo.serverSyncTree_, path, excludeSets) ||\n    ChildrenNode.EMPTY_NODE\n  );\n}\n\n/**\n * Sends any already-run transactions that aren't waiting for outstanding\n * transactions to complete.\n *\n * Externally it's called with no arguments, but it calls itself recursively\n * with a particular transactionQueueTree node to recurse through the tree.\n *\n * @param node - transactionQueueTree node to start at.\n */\nfunction repoSendReadyTransactions(\n  repo: Repo,\n  node: Tree<Transaction[]> = repo.transactionQueueTree_\n): void {\n  // Before recursing, make sure any completed transactions are removed.\n  if (!node) {\n    repoPruneCompletedTransactionsBelowNode(repo, node);\n  }\n\n  if (treeGetValue(node)) {\n    const queue = repoBuildTransactionQueue(repo, node);\n    assert(queue.length > 0, 'Sending zero length transaction queue');\n\n    const allRun = queue.every(\n      (transaction: Transaction) => transaction.status === TransactionStatus.RUN\n    );\n\n    // If they're all run (and not sent), we can send them.  Else, we must wait.\n    if (allRun) {\n      repoSendTransactionQueue(repo, treeGetPath(node), queue);\n    }\n  } else if (treeHasChildren(node)) {\n    treeForEachChild(node, childNode => {\n      repoSendReadyTransactions(repo, childNode);\n    });\n  }\n}\n\n/**\n * Given a list of run transactions, send them to the server and then handle\n * the result (success or failure).\n *\n * @param path - The location of the queue.\n * @param queue - Queue of transactions under the specified location.\n */\nfunction repoSendTransactionQueue(\n  repo: Repo,\n  path: Path,\n  queue: Transaction[]\n): void {\n  // Mark transactions as sent and increment retry count!\n  const setsToIgnore = queue.map(txn => {\n    return txn.currentWriteId;\n  });\n  const latestState = repoGetLatestState(repo, path, setsToIgnore);\n  let snapToSend = latestState;\n  const latestHash = latestState.hash();\n  for (let i = 0; i < queue.length; i++) {\n    const txn = queue[i];\n    assert(\n      txn.status === TransactionStatus.RUN,\n      'tryToSendTransactionQueue_: items in queue should all be run.'\n    );\n    txn.status = TransactionStatus.SENT;\n    txn.retryCount++;\n    const relativePath = newRelativePath(path, txn.path);\n    // If we've gotten to this point, the output snapshot must be defined.\n    snapToSend = snapToSend.updateChild(\n      relativePath /** @type {!Node} */,\n      txn.currentOutputSnapshotRaw\n    );\n  }\n\n  const dataToSend = snapToSend.val(true);\n  const pathToSend = path;\n\n  // Send the put.\n  repo.server_.put(\n    pathToSend.toString(),\n    dataToSend,\n    (status: string) => {\n      repoLog(repo, 'transaction put response', {\n        path: pathToSend.toString(),\n        status\n      });\n\n      let events: Event[] = [];\n      if (status === 'ok') {\n        // Queue up the callbacks and fire them after cleaning up all of our\n        // transaction state, since the callback could trigger more\n        // transactions or sets.\n        const callbacks = [];\n        for (let i = 0; i < queue.length; i++) {\n          queue[i].status = TransactionStatus.COMPLETED;\n          events = events.concat(\n            syncTreeAckUserWrite(repo.serverSyncTree_, queue[i].currentWriteId)\n          );\n          if (queue[i].onComplete) {\n            // We never unset the output snapshot, and given that this\n            // transaction is complete, it should be set\n            callbacks.push(() =>\n              queue[i].onComplete(\n                null,\n                true,\n                queue[i].currentOutputSnapshotResolved\n              )\n            );\n          }\n          queue[i].unwatcher();\n        }\n\n        // Now remove the completed transactions.\n        repoPruneCompletedTransactionsBelowNode(\n          repo,\n          treeSubTree(repo.transactionQueueTree_, path)\n        );\n        // There may be pending transactions that we can now send.\n        repoSendReadyTransactions(repo, repo.transactionQueueTree_);\n\n        eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, events);\n\n        // Finally, trigger onComplete callbacks.\n        for (let i = 0; i < callbacks.length; i++) {\n          exceptionGuard(callbacks[i]);\n        }\n      } else {\n        // transactions are no longer sent.  Update their status appropriately.\n        if (status === 'datastale') {\n          for (let i = 0; i < queue.length; i++) {\n            if (queue[i].status === TransactionStatus.SENT_NEEDS_ABORT) {\n              queue[i].status = TransactionStatus.NEEDS_ABORT;\n            } else {\n              queue[i].status = TransactionStatus.RUN;\n            }\n          }\n        } else {\n          warn(\n            'transaction at ' + pathToSend.toString() + ' failed: ' + status\n          );\n          for (let i = 0; i < queue.length; i++) {\n            queue[i].status = TransactionStatus.NEEDS_ABORT;\n            queue[i].abortReason = status;\n          }\n        }\n\n        repoRerunTransactions(repo, path);\n      }\n    },\n    latestHash\n  );\n}\n\n/**\n * Finds all transactions dependent on the data at changedPath and reruns them.\n *\n * Should be called any time cached data changes.\n *\n * Return the highest path that was affected by rerunning transactions. This\n * is the path at which events need to be raised for.\n *\n * @param changedPath - The path in mergedData that changed.\n * @returns The rootmost path that was affected by rerunning transactions.\n */\nfunction repoRerunTransactions(repo: Repo, changedPath: Path): Path {\n  const rootMostTransactionNode = repoGetAncestorTransactionNode(\n    repo,\n    changedPath\n  );\n  const path = treeGetPath(rootMostTransactionNode);\n\n  const queue = repoBuildTransactionQueue(repo, rootMostTransactionNode);\n  repoRerunTransactionQueue(repo, queue, path);\n\n  return path;\n}\n\n/**\n * Does all the work of rerunning transactions (as well as cleans up aborted\n * transactions and whatnot).\n *\n * @param queue - The queue of transactions to run.\n * @param path - The path the queue is for.\n */\nfunction repoRerunTransactionQueue(\n  repo: Repo,\n  queue: Transaction[],\n  path: Path\n): void {\n  if (queue.length === 0) {\n    return; // Nothing to do!\n  }\n\n  // Queue up the callbacks and fire them after cleaning up all of our\n  // transaction state, since the callback could trigger more transactions or\n  // sets.\n  const callbacks = [];\n  let events: Event[] = [];\n  // Ignore all of the sets we're going to re-run.\n  const txnsToRerun = queue.filter(q => {\n    return q.status === TransactionStatus.RUN;\n  });\n  const setsToIgnore = txnsToRerun.map(q => {\n    return q.currentWriteId;\n  });\n  for (let i = 0; i < queue.length; i++) {\n    const transaction = queue[i];\n    const relativePath = newRelativePath(path, transaction.path);\n    let abortTransaction = false,\n      abortReason;\n    assert(\n      relativePath !== null,\n      'rerunTransactionsUnderNode_: relativePath should not be null.'\n    );\n\n    if (transaction.status === TransactionStatus.NEEDS_ABORT) {\n      abortTransaction = true;\n      abortReason = transaction.abortReason;\n      events = events.concat(\n        syncTreeAckUserWrite(\n          repo.serverSyncTree_,\n          transaction.currentWriteId,\n          true\n        )\n      );\n    } else if (transaction.status === TransactionStatus.RUN) {\n      if (transaction.retryCount >= MAX_TRANSACTION_RETRIES) {\n        abortTransaction = true;\n        abortReason = 'maxretry';\n        events = events.concat(\n          syncTreeAckUserWrite(\n            repo.serverSyncTree_,\n            transaction.currentWriteId,\n            true\n          )\n        );\n      } else {\n        // This code reruns a transaction\n        const currentNode = repoGetLatestState(\n          repo,\n          transaction.path,\n          setsToIgnore\n        );\n        transaction.currentInputSnapshot = currentNode;\n        const newData = queue[i].update(currentNode.val());\n        if (newData !== undefined) {\n          validateFirebaseData(\n            'transaction failed: Data returned ',\n            newData,\n            transaction.path\n          );\n          let newDataNode = nodeFromJSON(newData);\n          const hasExplicitPriority =\n            typeof newData === 'object' &&\n            newData != null &&\n            contains(newData, '.priority');\n          if (!hasExplicitPriority) {\n            // Keep the old priority if there wasn't a priority explicitly specified.\n            newDataNode = newDataNode.updatePriority(currentNode.getPriority());\n          }\n\n          const oldWriteId = transaction.currentWriteId;\n          const serverValues = repoGenerateServerValues(repo);\n          const newNodeResolved = resolveDeferredValueSnapshot(\n            newDataNode,\n            currentNode,\n            serverValues\n          );\n\n          transaction.currentOutputSnapshotRaw = newDataNode;\n          transaction.currentOutputSnapshotResolved = newNodeResolved;\n          transaction.currentWriteId = repoGetNextWriteId(repo);\n          // Mutates setsToIgnore in place\n          setsToIgnore.splice(setsToIgnore.indexOf(oldWriteId), 1);\n          events = events.concat(\n            syncTreeApplyUserOverwrite(\n              repo.serverSyncTree_,\n              transaction.path,\n              newNodeResolved,\n              transaction.currentWriteId,\n              transaction.applyLocally\n            )\n          );\n          events = events.concat(\n            syncTreeAckUserWrite(repo.serverSyncTree_, oldWriteId, true)\n          );\n        } else {\n          abortTransaction = true;\n          abortReason = 'nodata';\n          events = events.concat(\n            syncTreeAckUserWrite(\n              repo.serverSyncTree_,\n              transaction.currentWriteId,\n              true\n            )\n          );\n        }\n      }\n    }\n    eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, events);\n    events = [];\n    if (abortTransaction) {\n      // Abort.\n      queue[i].status = TransactionStatus.COMPLETED;\n\n      // Removing a listener can trigger pruning which can muck with\n      // mergedData/visibleData (as it prunes data). So defer the unwatcher\n      // until we're done.\n      (function (unwatcher) {\n        setTimeout(unwatcher, Math.floor(0));\n      })(queue[i].unwatcher);\n\n      if (queue[i].onComplete) {\n        if (abortReason === 'nodata') {\n          callbacks.push(() =>\n            queue[i].onComplete(null, false, queue[i].currentInputSnapshot)\n          );\n        } else {\n          callbacks.push(() =>\n            queue[i].onComplete(new Error(abortReason), false, null)\n          );\n        }\n      }\n    }\n  }\n\n  // Clean up completed transactions.\n  repoPruneCompletedTransactionsBelowNode(repo, repo.transactionQueueTree_);\n\n  // Now fire callbacks, now that we're in a good, known state.\n  for (let i = 0; i < callbacks.length; i++) {\n    exceptionGuard(callbacks[i]);\n  }\n\n  // Try to send the transaction result to the server.\n  repoSendReadyTransactions(repo, repo.transactionQueueTree_);\n}\n\n/**\n * Returns the rootmost ancestor node of the specified path that has a pending\n * transaction on it, or just returns the node for the given path if there are\n * no pending transactions on any ancestor.\n *\n * @param path - The location to start at.\n * @returns The rootmost node with a transaction.\n */\nfunction repoGetAncestorTransactionNode(\n  repo: Repo,\n  path: Path\n): Tree<Transaction[]> {\n  let front;\n\n  // Start at the root and walk deeper into the tree towards path until we\n  // find a node with pending transactions.\n  let transactionNode = repo.transactionQueueTree_;\n  front = pathGetFront(path);\n  while (front !== null && treeGetValue(transactionNode) === undefined) {\n    transactionNode = treeSubTree(transactionNode, front);\n    path = pathPopFront(path);\n    front = pathGetFront(path);\n  }\n\n  return transactionNode;\n}\n\n/**\n * Builds the queue of all transactions at or below the specified\n * transactionNode.\n *\n * @param transactionNode\n * @returns The generated queue.\n */\nfunction repoBuildTransactionQueue(\n  repo: Repo,\n  transactionNode: Tree<Transaction[]>\n): Transaction[] {\n  // Walk any child transaction queues and aggregate them into a single queue.\n  const transactionQueue: Transaction[] = [];\n  repoAggregateTransactionQueuesForNode(\n    repo,\n    transactionNode,\n    transactionQueue\n  );\n\n  // Sort them by the order the transactions were created.\n  transactionQueue.sort((a, b) => a.order - b.order);\n\n  return transactionQueue;\n}\n\nfunction repoAggregateTransactionQueuesForNode(\n  repo: Repo,\n  node: Tree<Transaction[]>,\n  queue: Transaction[]\n): void {\n  const nodeQueue = treeGetValue(node);\n  if (nodeQueue) {\n    for (let i = 0; i < nodeQueue.length; i++) {\n      queue.push(nodeQueue[i]);\n    }\n  }\n\n  treeForEachChild(node, child => {\n    repoAggregateTransactionQueuesForNode(repo, child, queue);\n  });\n}\n\n/**\n * Remove COMPLETED transactions at or below this node in the transactionQueueTree_.\n */\nfunction repoPruneCompletedTransactionsBelowNode(\n  repo: Repo,\n  node: Tree<Transaction[]>\n): void {\n  const queue = treeGetValue(node);\n  if (queue) {\n    let to = 0;\n    for (let from = 0; from < queue.length; from++) {\n      if (queue[from].status !== TransactionStatus.COMPLETED) {\n        queue[to] = queue[from];\n        to++;\n      }\n    }\n    queue.length = to;\n    treeSetValue(node, queue.length > 0 ? queue : undefined);\n  }\n\n  treeForEachChild(node, childNode => {\n    repoPruneCompletedTransactionsBelowNode(repo, childNode);\n  });\n}\n\n/**\n * Aborts all transactions on ancestors or descendants of the specified path.\n * Called when doing a set() or update() since we consider them incompatible\n * with transactions.\n *\n * @param path - Path for which we want to abort related transactions.\n */\nfunction repoAbortTransactions(repo: Repo, path: Path): Path {\n  const affectedPath = treeGetPath(repoGetAncestorTransactionNode(repo, path));\n\n  const transactionNode = treeSubTree(repo.transactionQueueTree_, path);\n\n  treeForEachAncestor(transactionNode, (node: Tree<Transaction[]>) => {\n    repoAbortTransactionsOnNode(repo, node);\n  });\n\n  repoAbortTransactionsOnNode(repo, transactionNode);\n\n  treeForEachDescendant(transactionNode, (node: Tree<Transaction[]>) => {\n    repoAbortTransactionsOnNode(repo, node);\n  });\n\n  return affectedPath;\n}\n\n/**\n * Abort transactions stored in this transaction queue node.\n *\n * @param node - Node to abort transactions for.\n */\nfunction repoAbortTransactionsOnNode(\n  repo: Repo,\n  node: Tree<Transaction[]>\n): void {\n  const queue = treeGetValue(node);\n  if (queue) {\n    // Queue up the callbacks and fire them after cleaning up all of our\n    // transaction state, since the callback could trigger more transactions\n    // or sets.\n    const callbacks = [];\n\n    // Go through queue.  Any already-sent transactions must be marked for\n    // abort, while the unsent ones can be immediately aborted and removed.\n    let events: Event[] = [];\n    let lastSent = -1;\n    for (let i = 0; i < queue.length; i++) {\n      if (queue[i].status === TransactionStatus.SENT_NEEDS_ABORT) {\n        // Already marked.  No action needed.\n      } else if (queue[i].status === TransactionStatus.SENT) {\n        assert(\n          lastSent === i - 1,\n          'All SENT items should be at beginning of queue.'\n        );\n        lastSent = i;\n        // Mark transaction for abort when it comes back.\n        queue[i].status = TransactionStatus.SENT_NEEDS_ABORT;\n        queue[i].abortReason = 'set';\n      } else {\n        assert(\n          queue[i].status === TransactionStatus.RUN,\n          'Unexpected transaction status in abort'\n        );\n        // We can abort it immediately.\n        queue[i].unwatcher();\n        events = events.concat(\n          syncTreeAckUserWrite(\n            repo.serverSyncTree_,\n            queue[i].currentWriteId,\n            true\n          )\n        );\n        if (queue[i].onComplete) {\n          callbacks.push(\n            queue[i].onComplete.bind(null, new Error('set'), false, null)\n          );\n        }\n      }\n    }\n    if (lastSent === -1) {\n      // We're not waiting for any sent transactions.  We can clear the queue.\n      treeSetValue(node, undefined);\n    } else {\n      // Remove the transactions we aborted.\n      queue.length = lastSent + 1;\n    }\n\n    // Now fire the callbacks.\n    eventQueueRaiseEventsForChangedPath(\n      repo.eventQueue_,\n      treeGetPath(node),\n      events\n    );\n    for (let i = 0; i < callbacks.length; i++) {\n      exceptionGuard(callbacks[i]);\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { RepoInfo } from '../../RepoInfo';\nimport { Path } from '../Path';\nimport { warnIfPageIsSecure, warn, fatal } from '../util';\n\nfunction decodePath(pathString: string): string {\n  let pathStringDecoded = '';\n  const pieces = pathString.split('/');\n  for (let i = 0; i < pieces.length; i++) {\n    if (pieces[i].length > 0) {\n      let piece = pieces[i];\n      try {\n        piece = decodeURIComponent(piece.replace(/\\+/g, ' '));\n      } catch (e) {}\n      pathStringDecoded += '/' + piece;\n    }\n  }\n  return pathStringDecoded;\n}\n\n/**\n * @returns key value hash\n */\nfunction decodeQuery(queryString: string): { [key: string]: string } {\n  const results = {};\n  if (queryString.charAt(0) === '?') {\n    queryString = queryString.substring(1);\n  }\n  for (const segment of queryString.split('&')) {\n    if (segment.length === 0) {\n      continue;\n    }\n    const kv = segment.split('=');\n    if (kv.length === 2) {\n      results[decodeURIComponent(kv[0])] = decodeURIComponent(kv[1]);\n    } else {\n      warn(`Invalid query segment '${segment}' in query '${queryString}'`);\n    }\n  }\n  return results;\n}\n\nexport const parseRepoInfo = function (\n  dataURL: string,\n  nodeAdmin: boolean\n): { repoInfo: RepoInfo; path: Path } {\n  const parsedUrl = parseDatabaseURL(dataURL),\n    namespace = parsedUrl.namespace;\n\n  if (parsedUrl.domain === 'firebase.com') {\n    fatal(\n      parsedUrl.host +\n        ' is no longer supported. ' +\n        'Please use <YOUR FIREBASE>.firebaseio.com instead'\n    );\n  }\n\n  // Catch common error of uninitialized namespace value.\n  if (\n    (!namespace || namespace === 'undefined') &&\n    parsedUrl.domain !== 'localhost'\n  ) {\n    fatal(\n      'Cannot parse Firebase url. Please use https://<YOUR FIREBASE>.firebaseio.com'\n    );\n  }\n\n  if (!parsedUrl.secure) {\n    warnIfPageIsSecure();\n  }\n\n  const webSocketOnly = parsedUrl.scheme === 'ws' || parsedUrl.scheme === 'wss';\n\n  return {\n    repoInfo: new RepoInfo(\n      parsedUrl.host,\n      parsedUrl.secure,\n      namespace,\n      nodeAdmin,\n      webSocketOnly,\n      /*persistenceKey=*/ '',\n      /*includeNamespaceInQueryParams=*/ namespace !== parsedUrl.subdomain\n    ),\n    path: new Path(parsedUrl.pathString)\n  };\n};\n\nexport const parseDatabaseURL = function (\n  dataURL: string\n): {\n  host: string;\n  port: number;\n  domain: string;\n  subdomain: string;\n  secure: boolean;\n  scheme: string;\n  pathString: string;\n  namespace: string;\n} {\n  // Default to empty strings in the event of a malformed string.\n  let host = '',\n    domain = '',\n    subdomain = '',\n    pathString = '',\n    namespace = '';\n\n  // Always default to SSL, unless otherwise specified.\n  let secure = true,\n    scheme = 'https',\n    port = 443;\n\n  // Don't do any validation here. The caller is responsible for validating the result of parsing.\n  if (typeof dataURL === 'string') {\n    // Parse scheme.\n    let colonInd = dataURL.indexOf('//');\n    if (colonInd >= 0) {\n      scheme = dataURL.substring(0, colonInd - 1);\n      dataURL = dataURL.substring(colonInd + 2);\n    }\n\n    // Parse host, path, and query string.\n    let slashInd = dataURL.indexOf('/');\n    if (slashInd === -1) {\n      slashInd = dataURL.length;\n    }\n    let questionMarkInd = dataURL.indexOf('?');\n    if (questionMarkInd === -1) {\n      questionMarkInd = dataURL.length;\n    }\n    host = dataURL.substring(0, Math.min(slashInd, questionMarkInd));\n    if (slashInd < questionMarkInd) {\n      // For pathString, questionMarkInd will always come after slashInd\n      pathString = decodePath(dataURL.substring(slashInd, questionMarkInd));\n    }\n    const queryParams = decodeQuery(\n      dataURL.substring(Math.min(dataURL.length, questionMarkInd))\n    );\n\n    // If we have a port, use scheme for determining if it's secure.\n    colonInd = host.indexOf(':');\n    if (colonInd >= 0) {\n      secure = scheme === 'https' || scheme === 'wss';\n      port = parseInt(host.substring(colonInd + 1), 10);\n    } else {\n      colonInd = host.length;\n    }\n\n    const hostWithoutPort = host.slice(0, colonInd);\n    if (hostWithoutPort.toLowerCase() === 'localhost') {\n      domain = 'localhost';\n    } else if (hostWithoutPort.split('.').length <= 2) {\n      domain = hostWithoutPort;\n    } else {\n      // Interpret the subdomain of a 3 or more component URL as the namespace name.\n      const dotInd = host.indexOf('.');\n      subdomain = host.substring(0, dotInd).toLowerCase();\n      domain = host.substring(dotInd + 1);\n      // Normalize namespaces to lowercase to share storage / connection.\n      namespace = subdomain;\n    }\n    // Always treat the value of the `ns` as the namespace name if it is present.\n    if ('ns' in queryParams) {\n      namespace = queryParams['ns'];\n    }\n  }\n\n  return {\n    host,\n    port,\n    domain,\n    subdomain,\n    secure,\n    scheme,\n    pathString,\n    namespace\n  };\n};\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { stringify } from '@firebase/util';\n\nimport { DataSnapshot as ExpDataSnapshot } from '../../exp/Reference_impl';\nimport { Path } from '../util/Path';\n\nimport { EventRegistration } from './EventRegistration';\n\n/**\n * Encapsulates the data needed to raise an event\n * @interface\n */\nexport interface Event {\n  getPath(): Path;\n\n  getEventType(): string;\n\n  getEventRunner(): () => void;\n\n  toString(): string;\n}\n\n/**\n * One of the following strings: \"value\", \"child_added\", \"child_changed\",\n * \"child_removed\", or \"child_moved.\"\n */\nexport type EventType =\n  | 'value'\n  | 'child_added'\n  | 'child_changed'\n  | 'child_moved'\n  | 'child_removed';\n\n/**\n * Encapsulates the data needed to raise an event\n */\nexport class DataEvent implements Event {\n  /**\n   * @param eventType - One of: value, child_added, child_changed, child_moved, child_removed\n   * @param eventRegistration - The function to call to with the event data. User provided\n   * @param snapshot - The data backing the event\n   * @param prevName - Optional, the name of the previous child for child_* events.\n   */\n  constructor(\n    public eventType: EventType,\n    public eventRegistration: EventRegistration,\n    public snapshot: ExpDataSnapshot,\n    public prevName?: string | null\n  ) {}\n  getPath(): Path {\n    const ref = this.snapshot.ref;\n    if (this.eventType === 'value') {\n      return ref._path;\n    } else {\n      return ref.parent._path;\n    }\n  }\n  getEventType(): string {\n    return this.eventType;\n  }\n  getEventRunner(): () => void {\n    return this.eventRegistration.getEventRunner(this);\n  }\n  toString(): string {\n    return (\n      this.getPath().toString() +\n      ':' +\n      this.eventType +\n      ':' +\n      stringify(this.snapshot.exportVal())\n    );\n  }\n}\n\nexport class CancelEvent implements Event {\n  constructor(\n    public eventRegistration: EventRegistration,\n    public error: Error,\n    public path: Path\n  ) {}\n  getPath(): Path {\n    return this.path;\n  }\n  getEventType(): string {\n    return 'cancel';\n  }\n  getEventRunner(): () => void {\n    return this.eventRegistration.getEventRunner(this);\n  }\n  toString(): string {\n    return this.path.toString() + ':cancel';\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { DataSnapshot } from '../../exp/Reference_impl';\nimport { Repo } from '../Repo';\nimport { Path } from '../util/Path';\n\nimport { Change } from './Change';\nimport { CancelEvent, Event } from './Event';\nimport { QueryParams } from './QueryParams';\n\n/**\n * A user callback. Callbacks issues from the Legacy SDK maintain references\n *  to the original user-issued callbacks, which allows equality\n * comparison by reference even though this callbacks are wrapped before\n * they can be passed to the firebase@exp SDK.\n */\nexport interface UserCallback {\n  (dataSnapshot: DataSnapshot, previousChildName?: string | null): unknown;\n  userCallback?: unknown;\n  context?: object | null;\n}\n\n/**\n * A wrapper class that converts events from the database@exp SDK to the legacy\n * Database SDK. Events are not converted directly as event registration relies\n * on reference comparison of the original user callback (see `matches()`) and\n * relies on equality of the legacy SDK's `context` object.\n */\nexport class CallbackContext {\n  constructor(\n    private readonly snapshotCallback: UserCallback,\n    private readonly cancelCallback?: (error: Error) => unknown\n  ) {}\n\n  onValue(\n    expDataSnapshot: DataSnapshot,\n    previousChildName?: string | null\n  ): void {\n    this.snapshotCallback.call(null, expDataSnapshot, previousChildName);\n  }\n\n  onCancel(error: Error): void {\n    assert(\n      this.hasCancelCallback,\n      'Raising a cancel event on a listener with no cancel callback'\n    );\n    return this.cancelCallback.call(null, error);\n  }\n\n  get hasCancelCallback(): boolean {\n    return !!this.cancelCallback;\n  }\n\n  matches(other: CallbackContext): boolean {\n    return (\n      this.snapshotCallback === other.snapshotCallback ||\n      (this.snapshotCallback.userCallback !== undefined &&\n        this.snapshotCallback.userCallback ===\n          other.snapshotCallback.userCallback &&\n        this.snapshotCallback.context === other.snapshotCallback.context)\n    );\n  }\n}\n\nexport interface QueryContext {\n  readonly _queryIdentifier: string;\n  readonly _queryObject: object;\n  readonly _repo: Repo;\n  readonly _path: Path;\n  readonly _queryParams: QueryParams;\n}\n\n/**\n * An EventRegistration is basically an event type ('value', 'child_added', etc.) and a callback\n * to be notified of that type of event.\n *\n * That said, it can also contain a cancel callback to be notified if the event is canceled.  And\n * currently, this code is organized around the idea that you would register multiple child_ callbacks\n * together, as a single EventRegistration.  Though currently we don't do that.\n */\nexport interface EventRegistration {\n  /**\n   * True if this container has a callback to trigger for this event type\n   */\n  respondsTo(eventType: string): boolean;\n\n  createEvent(change: Change, query: QueryContext): Event;\n\n  /**\n   * Given event data, return a function to trigger the user's callback\n   */\n  getEventRunner(eventData: Event): () => void;\n\n  createCancelEvent(error: Error, path: Path): CancelEvent | null;\n\n  matches(other: EventRegistration): boolean;\n\n  /**\n   * False basically means this is a \"dummy\" callback container being used as a sentinel\n   * to remove all callback containers of a particular type.  (e.g. if the user does\n   * ref.off('value') without specifying a specific callback).\n   *\n   * (TODO: Rework this, since it's hacky)\n   *\n   */\n  hasAnyCallback(): boolean;\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Deferred } from '@firebase/util';\n\nimport {\n  Repo,\n  repoOnDisconnectCancel,\n  repoOnDisconnectSet,\n  repoOnDisconnectSetWithPriority,\n  repoOnDisconnectUpdate\n} from '../core/Repo';\nimport { Path } from '../core/util/Path';\nimport {\n  validateFirebaseDataArg,\n  validateFirebaseMergeDataArg,\n  validatePriority,\n  validateWritablePath\n} from '../core/util/validation';\n\n/**\n * The `onDisconnect` class allows you to write or clear data when your client\n * disconnects from the Database server. These updates occur whether your\n * client disconnects cleanly or not, so you can rely on them to clean up data\n * even if a connection is dropped or a client crashes.\n *\n * The `onDisconnect` class is most commonly used to manage presence in\n * applications where it is useful to detect how many clients are connected and\n * when other clients disconnect. See\n * {@link https://firebase.google.com/docs/database/web/offline-capabilities | Enabling Offline Capabilities in JavaScript}\n * for more information.\n *\n * To avoid problems when a connection is dropped before the requests can be\n * transferred to the Database server, these functions should be called before\n * writing any data.\n *\n * Note that `onDisconnect` operations are only triggered once. If you want an\n * operation to occur each time a disconnect occurs, you'll need to re-establish\n * the `onDisconnect` operations each time you reconnect.\n */\nexport class OnDisconnect {\n  /** @hideconstructor */\n  constructor(private _repo: Repo, private _path: Path) {}\n\n  /**\n   * Cancels all previously queued `onDisconnect()` set or update events for this\n   * location and all children.\n   *\n   * If a write has been queued for this location via a `set()` or `update()` at a\n   * parent location, the write at this location will be canceled, though writes\n   * to sibling locations will still occur.\n   *\n   * @returns Resolves when synchronization to the server is complete.\n   */\n  cancel(): Promise<void> {\n    const deferred = new Deferred<void>();\n    repoOnDisconnectCancel(\n      this._repo,\n      this._path,\n      deferred.wrapCallback(() => {})\n    );\n    return deferred.promise;\n  }\n\n  /**\n   * Ensures the data at this location is deleted when the client is disconnected\n   * (due to closing the browser, navigating to a new page, or network issues).\n   *\n   * @returns Resolves when synchronization to the server is complete.\n   */\n  remove(): Promise<void> {\n    validateWritablePath('OnDisconnect.remove', this._path);\n    const deferred = new Deferred<void>();\n    repoOnDisconnectSet(\n      this._repo,\n      this._path,\n      null,\n      deferred.wrapCallback(() => {})\n    );\n    return deferred.promise;\n  }\n\n  /**\n   * Ensures the data at this location is set to the specified value when the\n   * client is disconnected (due to closing the browser, navigating to a new page,\n   * or network issues).\n   *\n   * `set()` is especially useful for implementing \"presence\" systems, where a\n   * value should be changed or cleared when a user disconnects so that they\n   * appear \"offline\" to other users. See\n   * {@link https://firebase.google.com/docs/database/web/offline-capabilities | Enabling Offline Capabilities in JavaScript}\n   * for more information.\n   *\n   * Note that `onDisconnect` operations are only triggered once. If you want an\n   * operation to occur each time a disconnect occurs, you'll need to re-establish\n   * the `onDisconnect` operations each time.\n   *\n   * @param value - The value to be written to this location on disconnect (can\n   * be an object, array, string, number, boolean, or null).\n   * @returns Resolves when synchronization to the Database is complete.\n   */\n  set(value: unknown): Promise<void> {\n    validateWritablePath('OnDisconnect.set', this._path);\n    validateFirebaseDataArg('OnDisconnect.set', value, this._path, false);\n    const deferred = new Deferred<void>();\n    repoOnDisconnectSet(\n      this._repo,\n      this._path,\n      value,\n      deferred.wrapCallback(() => {})\n    );\n    return deferred.promise;\n  }\n\n  /**\n   * Ensures the data at this location is set to the specified value and priority\n   * when the client is disconnected (due to closing the browser, navigating to a\n   * new page, or network issues).\n   *\n   * @param value - The value to be written to this location on disconnect (can\n   * be an object, array, string, number, boolean, or null).\n   * @param priority - The priority to be written (string, number, or null).\n   * @returns Resolves when synchronization to the Database is complete.\n   */\n  setWithPriority(\n    value: unknown,\n    priority: number | string | null\n  ): Promise<void> {\n    validateWritablePath('OnDisconnect.setWithPriority', this._path);\n    validateFirebaseDataArg(\n      'OnDisconnect.setWithPriority',\n      value,\n      this._path,\n      false\n    );\n    validatePriority('OnDisconnect.setWithPriority', priority, false);\n\n    const deferred = new Deferred<void>();\n    repoOnDisconnectSetWithPriority(\n      this._repo,\n      this._path,\n      value,\n      priority,\n      deferred.wrapCallback(() => {})\n    );\n    return deferred.promise;\n  }\n\n  /**\n   * Writes multiple values at this location when the client is disconnected (due\n   * to closing the browser, navigating to a new page, or network issues).\n   *\n   * The `values` argument contains multiple property-value pairs that will be\n   * written to the Database together. Each child property can either be a simple\n   * property (for example, \"name\") or a relative path (for example, \"name/first\")\n   * from the current location to the data to update.\n   *\n   * As opposed to the `set()` method, `update()` can be use to selectively update\n   * only the referenced properties at the current location (instead of replacing\n   * all the child properties at the current location).\n   *\n   * @param values - Object containing multiple values.\n   * @returns Resolves when synchronization to the Database is complete.\n   */\n  update(values: object): Promise<void> {\n    validateWritablePath('OnDisconnect.update', this._path);\n    validateFirebaseMergeDataArg(\n      'OnDisconnect.update',\n      values,\n      this._path,\n      false\n    );\n    const deferred = new Deferred<void>();\n    repoOnDisconnectUpdate(\n      this._repo,\n      this._path,\n      values as Record<string, unknown>,\n      deferred.wrapCallback(() => {})\n    );\n    return deferred.promise;\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, getModularInstance, Deferred } from '@firebase/util';\n\nimport {\n  Repo,\n  repoAddEventCallbackForQuery,\n  repoGetValue,\n  repoRemoveEventCallbackForQuery,\n  repoServerTime,\n  repoSetWithPriority,\n  repoUpdate\n} from '../core/Repo';\nimport { ChildrenNode } from '../core/snap/ChildrenNode';\nimport { Index } from '../core/snap/indexes/Index';\nimport { KEY_INDEX } from '../core/snap/indexes/KeyIndex';\nimport { PathIndex } from '../core/snap/indexes/PathIndex';\nimport { PRIORITY_INDEX } from '../core/snap/indexes/PriorityIndex';\nimport { VALUE_INDEX } from '../core/snap/indexes/ValueIndex';\nimport { Node } from '../core/snap/Node';\nimport { syncPointSetReferenceConstructor } from '../core/SyncPoint';\nimport { syncTreeSetReferenceConstructor } from '../core/SyncTree';\nimport { parseRepoInfo } from '../core/util/libs/parser';\nimport { nextPushId } from '../core/util/NextPushId';\nimport {\n  Path,\n  pathChild,\n  pathEquals,\n  pathGetBack,\n  pathGetFront,\n  pathIsEmpty,\n  pathParent,\n  pathToUrlEncodedString\n} from '../core/util/Path';\nimport {\n  fatal,\n  MAX_NAME,\n  MIN_NAME,\n  ObjectToUniqueKey\n} from '../core/util/util';\nimport {\n  isValidPriority,\n  validateFirebaseDataArg,\n  validateFirebaseMergeDataArg,\n  validateKey,\n  validatePathString,\n  validatePriority,\n  validateRootPathString,\n  validateUrl,\n  validateWritablePath\n} from '../core/util/validation';\nimport { Change } from '../core/view/Change';\nimport { CancelEvent, DataEvent, EventType } from '../core/view/Event';\nimport {\n  CallbackContext,\n  EventRegistration,\n  QueryContext,\n  UserCallback\n} from '../core/view/EventRegistration';\nimport {\n  QueryParams,\n  queryParamsEndAt,\n  queryParamsEndBefore,\n  queryParamsGetQueryObject,\n  queryParamsLimitToFirst,\n  queryParamsLimitToLast,\n  queryParamsOrderBy,\n  queryParamsStartAfter,\n  queryParamsStartAt\n} from '../core/view/QueryParams';\n\nimport { Database } from './Database';\nimport { OnDisconnect } from './OnDisconnect';\nimport {\n  ListenOptions,\n  Query as Query,\n  DatabaseReference,\n  Unsubscribe,\n  ThenableReference\n} from './Reference';\n\n/**\n * @internal\n */\nexport class QueryImpl implements Query, QueryContext {\n  /**\n   * @hideconstructor\n   */\n  constructor(\n    readonly _repo: Repo,\n    readonly _path: Path,\n    readonly _queryParams: QueryParams,\n    readonly _orderByCalled: boolean\n  ) {}\n\n  get key(): string | null {\n    if (pathIsEmpty(this._path)) {\n      return null;\n    } else {\n      return pathGetBack(this._path);\n    }\n  }\n\n  get ref(): DatabaseReference {\n    return new ReferenceImpl(this._repo, this._path);\n  }\n\n  get _queryIdentifier(): string {\n    const obj = queryParamsGetQueryObject(this._queryParams);\n    const id = ObjectToUniqueKey(obj);\n    return id === '{}' ? 'default' : id;\n  }\n\n  /**\n   * An object representation of the query parameters used by this Query.\n   */\n  get _queryObject(): object {\n    return queryParamsGetQueryObject(this._queryParams);\n  }\n\n  isEqual(other: QueryImpl | null): boolean {\n    other = getModularInstance(other);\n    if (!(other instanceof QueryImpl)) {\n      return false;\n    }\n\n    const sameRepo = this._repo === other._repo;\n    const samePath = pathEquals(this._path, other._path);\n    const sameQueryIdentifier =\n      this._queryIdentifier === other._queryIdentifier;\n\n    return sameRepo && samePath && sameQueryIdentifier;\n  }\n\n  toJSON(): string {\n    return this.toString();\n  }\n\n  toString(): string {\n    return this._repo.toString() + pathToUrlEncodedString(this._path);\n  }\n}\n\n/**\n * Validates that no other order by call has been made\n */\nfunction validateNoPreviousOrderByCall(query: QueryImpl, fnName: string) {\n  if (query._orderByCalled === true) {\n    throw new Error(fnName + \": You can't combine multiple orderBy calls.\");\n  }\n}\n\n/**\n * Validates start/end values for queries.\n */\nfunction validateQueryEndpoints(params: QueryParams) {\n  let startNode = null;\n  let endNode = null;\n  if (params.hasStart()) {\n    startNode = params.getIndexStartValue();\n  }\n  if (params.hasEnd()) {\n    endNode = params.getIndexEndValue();\n  }\n\n  if (params.getIndex() === KEY_INDEX) {\n    const tooManyArgsError =\n      'Query: When ordering by key, you may only pass one argument to ' +\n      'startAt(), endAt(), or equalTo().';\n    const wrongArgTypeError =\n      'Query: When ordering by key, the argument passed to startAt(), startAfter(), ' +\n      'endAt(), endBefore(), or equalTo() must be a string.';\n    if (params.hasStart()) {\n      const startName = params.getIndexStartName();\n      if (startName !== MIN_NAME) {\n        throw new Error(tooManyArgsError);\n      } else if (typeof startNode !== 'string') {\n        throw new Error(wrongArgTypeError);\n      }\n    }\n    if (params.hasEnd()) {\n      const endName = params.getIndexEndName();\n      if (endName !== MAX_NAME) {\n        throw new Error(tooManyArgsError);\n      } else if (typeof endNode !== 'string') {\n        throw new Error(wrongArgTypeError);\n      }\n    }\n  } else if (params.getIndex() === PRIORITY_INDEX) {\n    if (\n      (startNode != null && !isValidPriority(startNode)) ||\n      (endNode != null && !isValidPriority(endNode))\n    ) {\n      throw new Error(\n        'Query: When ordering by priority, the first argument passed to startAt(), ' +\n          'startAfter() endAt(), endBefore(), or equalTo() must be a valid priority value ' +\n          '(null, a number, or a string).'\n      );\n    }\n  } else {\n    assert(\n      params.getIndex() instanceof PathIndex ||\n        params.getIndex() === VALUE_INDEX,\n      'unknown index type.'\n    );\n    if (\n      (startNode != null && typeof startNode === 'object') ||\n      (endNode != null && typeof endNode === 'object')\n    ) {\n      throw new Error(\n        'Query: First argument passed to startAt(), startAfter(), endAt(), endBefore(), or ' +\n          'equalTo() cannot be an object.'\n      );\n    }\n  }\n}\n\n/**\n * Validates that limit* has been called with the correct combination of parameters\n */\nfunction validateLimit(params: QueryParams) {\n  if (\n    params.hasStart() &&\n    params.hasEnd() &&\n    params.hasLimit() &&\n    !params.hasAnchoredLimit()\n  ) {\n    throw new Error(\n      \"Query: Can't combine startAt(), startAfter(), endAt(), endBefore(), and limit(). Use \" +\n        'limitToFirst() or limitToLast() instead.'\n    );\n  }\n}\n\n/**\n * @internal\n */\nexport class ReferenceImpl extends QueryImpl implements DatabaseReference {\n  /** @hideconstructor */\n  constructor(repo: Repo, path: Path) {\n    super(repo, path, new QueryParams(), false);\n  }\n\n  get parent(): ReferenceImpl | null {\n    const parentPath = pathParent(this._path);\n    return parentPath === null\n      ? null\n      : new ReferenceImpl(this._repo, parentPath);\n  }\n\n  get root(): ReferenceImpl {\n    let ref: ReferenceImpl = this;\n    while (ref.parent !== null) {\n      ref = ref.parent;\n    }\n    return ref;\n  }\n}\n\n/**\n * A `DataSnapshot` contains data from a Database location.\n *\n * Any time you read data from the Database, you receive the data as a\n * `DataSnapshot`. A `DataSnapshot` is passed to the event callbacks you attach\n * with `on()` or `once()`. You can extract the contents of the snapshot as a\n * JavaScript object by calling the `val()` method. Alternatively, you can\n * traverse into the snapshot by calling `child()` to return child snapshots\n * (which you could then call `val()` on).\n *\n * A `DataSnapshot` is an efficiently generated, immutable copy of the data at\n * a Database location. It cannot be modified and will never change (to modify\n * data, you always call the `set()` method on a `Reference` directly).\n */\nexport class DataSnapshot {\n  /**\n   * @param _node - A SnapshotNode to wrap.\n   * @param ref - The location this snapshot came from.\n   * @param _index - The iteration order for this snapshot\n   * @hideconstructor\n   */\n  constructor(\n    readonly _node: Node,\n    /**\n     * The location of this DataSnapshot.\n     */\n    readonly ref: DatabaseReference,\n    readonly _index: Index\n  ) {}\n\n  /**\n   * Gets the priority value of the data in this `DataSnapshot`.\n   *\n   * Applications need not use priority but can order collections by\n   * ordinary properties (see\n   * {@link https://firebase.google.com/docs/database/web/lists-of-data#sorting_and_filtering_data |Sorting and filtering data}\n   * ).\n   */\n  get priority(): string | number | null {\n    // typecast here because we never return deferred values or internal priorities (MAX_PRIORITY)\n    return this._node.getPriority().val() as string | number | null;\n  }\n\n  /**\n   * The key (last part of the path) of the location of this `DataSnapshot`.\n   *\n   * The last token in a Database location is considered its key. For example,\n   * \"ada\" is the key for the /users/ada/ node. Accessing the key on any\n   * `DataSnapshot` will return the key for the location that generated it.\n   * However, accessing the key on the root URL of a Database will return\n   * `null`.\n   */\n  get key(): string | null {\n    return this.ref.key;\n  }\n\n  /** Returns the number of child properties of this `DataSnapshot`. */\n  get size(): number {\n    return this._node.numChildren();\n  }\n\n  /**\n   * Gets another `DataSnapshot` for the location at the specified relative path.\n   *\n   * Passing a relative path to the `child()` method of a DataSnapshot returns\n   * another `DataSnapshot` for the location at the specified relative path. The\n   * relative path can either be a simple child name (for example, \"ada\") or a\n   * deeper, slash-separated path (for example, \"ada/name/first\"). If the child\n   * location has no data, an empty `DataSnapshot` (that is, a `DataSnapshot`\n   * whose value is `null`) is returned.\n   *\n   * @param path - A relative path to the location of child data.\n   */\n  child(path: string): DataSnapshot {\n    const childPath = new Path(path);\n    const childRef = child(this.ref, path);\n    return new DataSnapshot(\n      this._node.getChild(childPath),\n      childRef,\n      PRIORITY_INDEX\n    );\n  }\n  /**\n   * Returns true if this `DataSnapshot` contains any data. It is slightly more\n   * efficient than using `snapshot.val() !== null`.\n   */\n  exists(): boolean {\n    return !this._node.isEmpty();\n  }\n\n  /**\n   * Exports the entire contents of the DataSnapshot as a JavaScript object.\n   *\n   * The `exportVal()` method is similar to `val()`, except priority information\n   * is included (if available), making it suitable for backing up your data.\n   *\n   * @returns The DataSnapshot's contents as a JavaScript value (Object,\n   *   Array, string, number, boolean, or `null`).\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  exportVal(): any {\n    return this._node.val(true);\n  }\n\n  /**\n   * Enumerates the top-level children in the `DataSnapshot`.\n   *\n   * Because of the way JavaScript objects work, the ordering of data in the\n   * JavaScript object returned by `val()` is not guaranteed to match the\n   * ordering on the server nor the ordering of `onChildAdded()` events. That is\n   * where `forEach()` comes in handy. It guarantees the children of a\n   * `DataSnapshot` will be iterated in their query order.\n   *\n   * If no explicit `orderBy*()` method is used, results are returned\n   * ordered by key (unless priorities are used, in which case, results are\n   * returned by priority).\n   *\n   * @param action - A function that will be called for each child DataSnapshot.\n   * The callback can return true to cancel further enumeration.\n   * @returns true if enumeration was canceled due to your callback returning\n   * true.\n   */\n  forEach(action: (child: DataSnapshot) => boolean | void): boolean {\n    if (this._node.isLeafNode()) {\n      return false;\n    }\n\n    const childrenNode = this._node as ChildrenNode;\n    // Sanitize the return value to a boolean. ChildrenNode.forEachChild has a weird return type...\n    return !!childrenNode.forEachChild(this._index, (key, node) => {\n      return action(\n        new DataSnapshot(node, child(this.ref, key), PRIORITY_INDEX)\n      );\n    });\n  }\n\n  /**\n   * Returns true if the specified child path has (non-null) data.\n   *\n   * @param path - A relative path to the location of a potential child.\n   * @returns `true` if data exists at the specified child path; else\n   *  `false`.\n   */\n  hasChild(path: string): boolean {\n    const childPath = new Path(path);\n    return !this._node.getChild(childPath).isEmpty();\n  }\n\n  /**\n   * Returns whether or not the `DataSnapshot` has any non-`null` child\n   * properties.\n   *\n   * You can use `hasChildren()` to determine if a `DataSnapshot` has any\n   * children. If it does, you can enumerate them using `forEach()`. If it\n   * doesn't, then either this snapshot contains a primitive value (which can be\n   * retrieved with `val()`) or it is empty (in which case, `val()` will return\n   * `null`).\n   *\n   * @returns true if this snapshot has any children; else false.\n   */\n  hasChildren(): boolean {\n    if (this._node.isLeafNode()) {\n      return false;\n    } else {\n      return !this._node.isEmpty();\n    }\n  }\n\n  /**\n   * Returns a JSON-serializable representation of this object.\n   */\n  toJSON(): object | null {\n    return this.exportVal();\n  }\n\n  /**\n   * Extracts a JavaScript value from a `DataSnapshot`.\n   *\n   * Depending on the data in a `DataSnapshot`, the `val()` method may return a\n   * scalar type (string, number, or boolean), an array, or an object. It may\n   * also return null, indicating that the `DataSnapshot` is empty (contains no\n   * data).\n   *\n   * @returns The DataSnapshot's contents as a JavaScript value (Object,\n   *   Array, string, number, boolean, or `null`).\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  val(): any {\n    return this._node.val();\n  }\n}\n/**\n *\n * Returns a `Reference` representing the location in the Database\n * corresponding to the provided path. If no path is provided, the `Reference`\n * will point to the root of the Database.\n *\n * @param db - The database instance to obtain a reference for.\n * @param path - Optional path representing the location the returned\n *   `Reference` will point. If not provided, the returned `Reference` will\n *   point to the root of the Database.\n * @returns If a path is provided, a `Reference`\n *   pointing to the provided path. Otherwise, a `Reference` pointing to the\n *   root of the Database.\n */\nexport function ref(db: Database, path?: string): DatabaseReference {\n  db = getModularInstance(db);\n  db._checkNotDeleted('ref');\n  return path !== undefined ? child(db._root, path) : db._root;\n}\n\n/**\n * Returns a `Reference` representing the location in the Database\n * corresponding to the provided Firebase URL.\n *\n * An exception is thrown if the URL is not a valid Firebase Database URL or it\n * has a different domain than the current `Database` instance.\n *\n * Note that all query parameters (`orderBy`, `limitToLast`, etc.) are ignored\n * and are not applied to the returned `Reference`.\n *\n * @param db - The database instance to obtain a reference for.\n * @param url - The Firebase URL at which the returned `Reference` will\n *   point.\n * @returns A `Reference` pointing to the provided\n *   Firebase URL.\n */\nexport function refFromURL(db: Database, url: string): DatabaseReference {\n  db = getModularInstance(db);\n  db._checkNotDeleted('refFromURL');\n  const parsedURL = parseRepoInfo(url, db._repo.repoInfo_.nodeAdmin);\n  validateUrl('refFromURL', parsedURL);\n\n  const repoInfo = parsedURL.repoInfo;\n  if (\n    !db._repo.repoInfo_.isCustomHost() &&\n    repoInfo.host !== db._repo.repoInfo_.host\n  ) {\n    fatal(\n      'refFromURL' +\n        ': Host name does not match the current database: ' +\n        '(found ' +\n        repoInfo.host +\n        ' but expected ' +\n        db._repo.repoInfo_.host +\n        ')'\n    );\n  }\n\n  return ref(db, parsedURL.path.toString());\n}\n\n/**\n * Gets a `Reference` for the location at the specified relative path.\n *\n * The relative path can either be a simple child name (for example, \"ada\") or\n * a deeper slash-separated path (for example, \"ada/name/first\").\n *\n * @param parent - The parent location.\n * @param path - A relative path from this location to the desired child\n *   location.\n * @returns The specified child location.\n */\nexport function child(\n  parent: DatabaseReference,\n  path: string\n): DatabaseReference {\n  parent = getModularInstance(parent);\n  if (pathGetFront(parent._path) === null) {\n    validateRootPathString('child', 'path', path, false);\n  } else {\n    validatePathString('child', 'path', path, false);\n  }\n  return new ReferenceImpl(parent._repo, pathChild(parent._path, path));\n}\n\n/**\n * Returns an `OnDisconnect` object - see\n * {@link https://firebase.google.com/docs/database/web/offline-capabilities | Enabling Offline Capabilities in JavaScript}\n * for more information on how to use it.\n *\n * @param ref - The reference to add OnDisconnect triggers for.\n */\nexport function onDisconnect(ref: DatabaseReference): OnDisconnect {\n  ref = getModularInstance(ref) as ReferenceImpl;\n  return new OnDisconnect(ref._repo, ref._path);\n}\n\nexport interface ThenableReferenceImpl\n  extends ReferenceImpl,\n    Pick<Promise<ReferenceImpl>, 'then' | 'catch'> {}\n\n/**\n * Generates a new child location using a unique key and returns its\n * `Reference`.\n *\n * This is the most common pattern for adding data to a collection of items.\n *\n * If you provide a value to `push()`, the value is written to the\n * generated location. If you don't pass a value, nothing is written to the\n * database and the child remains empty (but you can use the `Reference`\n * elsewhere).\n *\n * The unique keys generated by `push()` are ordered by the current time, so the\n * resulting list of items is chronologically sorted. The keys are also\n * designed to be unguessable (they contain 72 random bits of entropy).\n *\n * See {@link https://firebase.google.com/docs/database/web/lists-of-data#append_to_a_list_of_data | Append to a list of data}\n * </br>See {@link ttps://firebase.googleblog.com/2015/02/the-2120-ways-to-ensure-unique_68.html | The 2^120 Ways to Ensure Unique Identifiers}\n *\n * @param parent - The parent location.\n * @param value - Optional value to be written at the generated location.\n * @returns Combined `Promise` and `Reference`; resolves when write is complete,\n * but can be used immediately as the `Reference` to the child location.\n */\nexport function push(\n  parent: DatabaseReference,\n  value?: unknown\n): ThenableReference {\n  parent = getModularInstance(parent);\n  validateWritablePath('push', parent._path);\n  validateFirebaseDataArg('push', value, parent._path, true);\n  const now = repoServerTime(parent._repo);\n  const name = nextPushId(now);\n\n  // push() returns a ThennableReference whose promise is fulfilled with a\n  // regular Reference. We use child() to create handles to two different\n  // references. The first is turned into a ThennableReference below by adding\n  // then() and catch() methods and is used as the return value of push(). The\n  // second remains a regular Reference and is used as the fulfilled value of\n  // the first ThennableReference.\n  const thennablePushRef: Partial<ThenableReferenceImpl> = child(\n    parent,\n    name\n  ) as ReferenceImpl;\n  const pushRef = child(parent, name) as ReferenceImpl;\n\n  let promise: Promise<ReferenceImpl>;\n  if (value != null) {\n    promise = set(pushRef, value).then(() => pushRef);\n  } else {\n    promise = Promise.resolve(pushRef);\n  }\n\n  thennablePushRef.then = promise.then.bind(promise);\n  thennablePushRef.catch = promise.then.bind(promise, undefined);\n  return thennablePushRef as ThenableReferenceImpl;\n}\n\n/**\n * Removes the data at this Database location.\n *\n * Any data at child locations will also be deleted.\n *\n * The effect of the remove will be visible immediately and the corresponding\n * event 'value' will be triggered. Synchronization of the remove to the\n * Firebase servers will also be started, and the returned Promise will resolve\n * when complete. If provided, the onComplete callback will be called\n * asynchronously after synchronization has finished.\n *\n * @param ref - The location to remove.\n * @returns Resolves when remove on server is complete.\n */\nexport function remove(ref: DatabaseReference): Promise<void> {\n  validateWritablePath('remove', ref._path);\n  return set(ref, null);\n}\n\n/**\n * Writes data to this Database location.\n *\n * This will overwrite any data at this location and all child locations.\n *\n * The effect of the write will be visible immediately, and the corresponding\n * events (\"value\", \"child_added\", etc.) will be triggered. Synchronization of\n * the data to the Firebase servers will also be started, and the returned\n * Promise will resolve when complete. If provided, the `onComplete` callback\n * will be called asynchronously after synchronization has finished.\n *\n * Passing `null` for the new value is equivalent to calling `remove()`; namely,\n * all data at this location and all child locations will be deleted.\n *\n * `set()` will remove any priority stored at this location, so if priority is\n * meant to be preserved, you need to use `setWithPriority()` instead.\n *\n * Note that modifying data with `set()` will cancel any pending transactions\n * at that location, so extreme care should be taken if mixing `set()` and\n * `transaction()` to modify the same data.\n *\n * A single `set()` will generate a single \"value\" event at the location where\n * the `set()` was performed.\n *\n * @param ref - The location to write to.\n * @param value - The value to be written (string, number, boolean, object,\n *   array, or null).\n * @returns Resolves when write to server is complete.\n */\nexport function set(ref: DatabaseReference, value: unknown): Promise<void> {\n  ref = getModularInstance(ref);\n  validateWritablePath('set', ref._path);\n  validateFirebaseDataArg('set', value, ref._path, false);\n  const deferred = new Deferred<void>();\n  repoSetWithPriority(\n    ref._repo,\n    ref._path,\n    value,\n    /*priority=*/ null,\n    deferred.wrapCallback(() => {})\n  );\n  return deferred.promise;\n}\n\n/**\n * Sets a priority for the data at this Database location.\n *\n * Applications need not use priority but can order collections by\n * ordinary properties (see\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sorting_and_filtering_data | Sorting and filtering data}\n * ).\n *\n * @param ref - The location to write to.\n * @param priority - The priority to be written (string, number, or null).\n * @returns Resolves when write to server is complete.\n */\nexport function setPriority(\n  ref: DatabaseReference,\n  priority: string | number | null\n): Promise<void> {\n  ref = getModularInstance(ref);\n  validateWritablePath('setPriority', ref._path);\n  validatePriority('setPriority', priority, false);\n  const deferred = new Deferred<void>();\n  repoSetWithPriority(\n    ref._repo,\n    pathChild(ref._path, '.priority'),\n    priority,\n    null,\n    deferred.wrapCallback(() => {})\n  );\n  return deferred.promise;\n}\n\n/**\n * Writes data the Database location. Like `set()` but also specifies the\n * priority for that data.\n *\n * Applications need not use priority but can order collections by\n * ordinary properties (see\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sorting_and_filtering_data | Sorting and filtering data}\n * ).\n *\n * @param ref - The location to write to.\n * @param value - The value to be written (string, number, boolean, object,\n *   array, or null).\n * @param priority - The priority to be written (string, number, or null).\n * @returns Resolves when write to server is complete.\n */\nexport function setWithPriority(\n  ref: DatabaseReference,\n  value: unknown,\n  priority: string | number | null\n): Promise<void> {\n  validateWritablePath('setWithPriority', ref._path);\n  validateFirebaseDataArg('setWithPriority', value, ref._path, false);\n  validatePriority('setWithPriority', priority, false);\n  if (ref.key === '.length' || ref.key === '.keys') {\n    throw 'setWithPriority failed: ' + ref.key + ' is a read-only object.';\n  }\n\n  const deferred = new Deferred<void>();\n  repoSetWithPriority(\n    ref._repo,\n    ref._path,\n    value,\n    priority,\n    deferred.wrapCallback(() => {})\n  );\n  return deferred.promise;\n}\n\n/**\n * Writes multiple values to the Database at once.\n *\n * The `values` argument contains multiple property-value pairs that will be\n * written to the Database together. Each child property can either be a simple\n * property (for example, \"name\") or a relative path (for example,\n * \"name/first\") from the current location to the data to update.\n *\n * As opposed to the `set()` method, `update()` can be use to selectively update\n * only the referenced properties at the current location (instead of replacing\n * all the child properties at the current location).\n *\n * The effect of the write will be visible immediately, and the corresponding\n * events ('value', 'child_added', etc.) will be triggered. Synchronization of\n * the data to the Firebase servers will also be started, and the returned\n * Promise will resolve when complete. If provided, the `onComplete` callback\n * will be called asynchronously after synchronization has finished.\n *\n * A single `update()` will generate a single \"value\" event at the location\n * where the `update()` was performed, regardless of how many children were\n * modified.\n *\n * Note that modifying data with `update()` will cancel any pending\n * transactions at that location, so extreme care should be taken if mixing\n * `update()` and `transaction()` to modify the same data.\n *\n * Passing `null` to `update()` will remove the data at this location.\n *\n * See\n * {@link https://firebase.googleblog.com/2015/09/introducing-multi-location-updates-and_86.html | Introducing multi-location updates and more}.\n *\n * @param ref - The location to write to.\n * @param values - Object containing multiple values.\n * @returns Resolves when update on server is complete.\n */\nexport function update(ref: DatabaseReference, values: object): Promise<void> {\n  validateFirebaseMergeDataArg('update', values, ref._path, false);\n  const deferred = new Deferred<void>();\n  repoUpdate(\n    ref._repo,\n    ref._path,\n    values as Record<string, unknown>,\n    deferred.wrapCallback(() => {})\n  );\n  return deferred.promise;\n}\n\n/**\n * Gets the most up-to-date result for this query.\n *\n * @param query - The query to run.\n * @returns A promise which resolves to the resulting DataSnapshot if a value is\n * available, or rejects if the client is unable to return a value (e.g., if the\n * server is unreachable and there is nothing cached).\n */\nexport function get(query: Query): Promise<DataSnapshot> {\n  query = getModularInstance(query) as QueryImpl;\n  return repoGetValue(query._repo, query).then(node => {\n    return new DataSnapshot(\n      node,\n      new ReferenceImpl(query._repo, query._path),\n      query._queryParams.getIndex()\n    );\n  });\n}\n\n/**\n * Represents registration for 'value' events.\n */\nexport class ValueEventRegistration implements EventRegistration {\n  constructor(private callbackContext: CallbackContext) {}\n\n  respondsTo(eventType: string): boolean {\n    return eventType === 'value';\n  }\n\n  createEvent(change: Change, query: QueryContext): DataEvent {\n    const index = query._queryParams.getIndex();\n    return new DataEvent(\n      'value',\n      this,\n      new DataSnapshot(\n        change.snapshotNode,\n        new ReferenceImpl(query._repo, query._path),\n        index\n      )\n    );\n  }\n\n  getEventRunner(eventData: CancelEvent | DataEvent): () => void {\n    if (eventData.getEventType() === 'cancel') {\n      return () =>\n        this.callbackContext.onCancel((eventData as CancelEvent).error);\n    } else {\n      return () =>\n        this.callbackContext.onValue((eventData as DataEvent).snapshot, null);\n    }\n  }\n\n  createCancelEvent(error: Error, path: Path): CancelEvent | null {\n    if (this.callbackContext.hasCancelCallback) {\n      return new CancelEvent(this, error, path);\n    } else {\n      return null;\n    }\n  }\n\n  matches(other: EventRegistration): boolean {\n    if (!(other instanceof ValueEventRegistration)) {\n      return false;\n    } else if (!other.callbackContext || !this.callbackContext) {\n      // If no callback specified, we consider it to match any callback.\n      return true;\n    } else {\n      return other.callbackContext.matches(this.callbackContext);\n    }\n  }\n\n  hasAnyCallback(): boolean {\n    return this.callbackContext !== null;\n  }\n}\n\n/**\n * Represents the registration of a child_x event.\n */\nexport class ChildEventRegistration implements EventRegistration {\n  constructor(\n    private eventType: string,\n    private callbackContext: CallbackContext | null\n  ) {}\n\n  respondsTo(eventType: string): boolean {\n    let eventToCheck =\n      eventType === 'children_added' ? 'child_added' : eventType;\n    eventToCheck =\n      eventToCheck === 'children_removed' ? 'child_removed' : eventToCheck;\n    return this.eventType === eventToCheck;\n  }\n\n  createCancelEvent(error: Error, path: Path): CancelEvent | null {\n    if (this.callbackContext.hasCancelCallback) {\n      return new CancelEvent(this, error, path);\n    } else {\n      return null;\n    }\n  }\n\n  createEvent(change: Change, query: QueryContext): DataEvent {\n    assert(change.childName != null, 'Child events should have a childName.');\n    const childRef = child(\n      new ReferenceImpl(query._repo, query._path),\n      change.childName\n    );\n    const index = query._queryParams.getIndex();\n    return new DataEvent(\n      change.type as EventType,\n      this,\n      new DataSnapshot(change.snapshotNode, childRef, index),\n      change.prevName\n    );\n  }\n\n  getEventRunner(eventData: CancelEvent | DataEvent): () => void {\n    if (eventData.getEventType() === 'cancel') {\n      return () =>\n        this.callbackContext.onCancel((eventData as CancelEvent).error);\n    } else {\n      return () =>\n        this.callbackContext.onValue(\n          (eventData as DataEvent).snapshot,\n          (eventData as DataEvent).prevName\n        );\n    }\n  }\n\n  matches(other: EventRegistration): boolean {\n    if (other instanceof ChildEventRegistration) {\n      return (\n        this.eventType === other.eventType &&\n        (!this.callbackContext ||\n          !other.callbackContext ||\n          this.callbackContext.matches(other.callbackContext))\n      );\n    }\n\n    return false;\n  }\n\n  hasAnyCallback(): boolean {\n    return !!this.callbackContext;\n  }\n}\n\nfunction addEventListener(\n  query: Query,\n  eventType: EventType,\n  callback: UserCallback,\n  cancelCallbackOrListenOptions?: ((error: Error) => unknown) | ListenOptions,\n  options?: ListenOptions\n) {\n  let cancelCallback: ((error: Error) => unknown) | undefined;\n  if (typeof cancelCallbackOrListenOptions === 'object') {\n    cancelCallback = undefined;\n    options = cancelCallbackOrListenOptions;\n  }\n  if (typeof cancelCallbackOrListenOptions === 'function') {\n    cancelCallback = cancelCallbackOrListenOptions;\n  }\n\n  if (options && options.onlyOnce) {\n    const userCallback = callback;\n    const onceCallback: UserCallback = (dataSnapshot, previousChildName) => {\n      repoRemoveEventCallbackForQuery(query._repo, query, container);\n      userCallback(dataSnapshot, previousChildName);\n    };\n    onceCallback.userCallback = callback.userCallback;\n    onceCallback.context = callback.context;\n    callback = onceCallback;\n  }\n\n  const callbackContext = new CallbackContext(\n    callback,\n    cancelCallback || undefined\n  );\n  const container =\n    eventType === 'value'\n      ? new ValueEventRegistration(callbackContext)\n      : new ChildEventRegistration(eventType, callbackContext);\n  repoAddEventCallbackForQuery(query._repo, query, container);\n  return () => repoRemoveEventCallbackForQuery(query._repo, query, container);\n}\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onValue` event will trigger once with the initial data stored at this\n * location, and then trigger again each time the data changes. The\n * `DataSnapshot` passed to the callback will be for the location at which\n * `on()` was called. It won't trigger until the entire contents has been\n * synchronized. If the location has no data, it will be triggered with an empty\n * `DataSnapshot` (`val()` will return `null`).\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs. The\n * callback will be passed a DataSnapshot.\n * @param cancelCallback - An optional callback that will be notified if your\n * event subscription is ever canceled because your client does not have\n * permission to read this data (or it had permission but has now lost it).\n * This callback will be passed an `Error` object indicating why the failure\n * occurred.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onValue(\n  query: Query,\n  callback: (snapshot: DataSnapshot) => unknown,\n  cancelCallback?: (error: Error) => unknown\n): Unsubscribe;\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onValue` event will trigger once with the initial data stored at this\n * location, and then trigger again each time the data changes. The\n * `DataSnapshot` passed to the callback will be for the location at which\n * `on()` was called. It won't trigger until the entire contents has been\n * synchronized. If the location has no data, it will be triggered with an empty\n * `DataSnapshot` (`val()` will return `null`).\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs. The\n * callback will be passed a DataSnapshot.\n * @param options - An object that can be used to configure `onlyOnce`, which\n * then removes the listener after its first invocation.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onValue(\n  query: Query,\n  callback: (snapshot: DataSnapshot) => unknown,\n  options: ListenOptions\n): Unsubscribe;\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onValue` event will trigger once with the initial data stored at this\n * location, and then trigger again each time the data changes. The\n * `DataSnapshot` passed to the callback will be for the location at which\n * `on()` was called. It won't trigger until the entire contents has been\n * synchronized. If the location has no data, it will be triggered with an empty\n * `DataSnapshot` (`val()` will return `null`).\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs. The\n * callback will be passed a DataSnapshot.\n * @param cancelCallback - An optional callback that will be notified if your\n * event subscription is ever canceled because your client does not have\n * permission to read this data (or it had permission but has now lost it).\n * This callback will be passed an `Error` object indicating why the failure\n * occurred.\n * @param options - An object that can be used to configure `onlyOnce`, which\n * then removes the listener after its first invocation.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onValue(\n  query: Query,\n  callback: (snapshot: DataSnapshot) => unknown,\n  cancelCallback: (error: Error) => unknown,\n  options: ListenOptions\n): Unsubscribe;\n\nexport function onValue(\n  query: Query,\n  callback: (snapshot: DataSnapshot) => unknown,\n  cancelCallbackOrListenOptions?: ((error: Error) => unknown) | ListenOptions,\n  options?: ListenOptions\n): Unsubscribe {\n  return addEventListener(\n    query,\n    'value',\n    callback,\n    cancelCallbackOrListenOptions,\n    options\n  );\n}\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildAdded` event will be triggered once for each initial child at this\n * location, and it will be triggered again every time a new child is added. The\n * `DataSnapshot` passed into the callback will reflect the data for the\n * relevant child. For ordering purposes, it is passed a second argument which\n * is a string containing the key of the previous sibling child by sort order,\n * or `null` if it is the first child.\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param cancelCallback - An optional callback that will be notified if your\n * event subscription is ever canceled because your client does not have\n * permission to read this data (or it had permission but has now lost it).\n * This callback will be passed an `Error` object indicating why the failure\n * occurred.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildAdded(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName?: string | null\n  ) => unknown,\n  cancelCallback?: (error: Error) => unknown\n): Unsubscribe;\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildAdded` event will be triggered once for each initial child at this\n * location, and it will be triggered again every time a new child is added. The\n * `DataSnapshot` passed into the callback will reflect the data for the\n * relevant child. For ordering purposes, it is passed a second argument which\n * is a string containing the key of the previous sibling child by sort order,\n * or `null` if it is the first child.\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param options - An object that can be used to configure `onlyOnce`, which\n * then removes the listener after its first invocation.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildAdded(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName: string | null\n  ) => unknown,\n  options: ListenOptions\n): Unsubscribe;\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildAdded` event will be triggered once for each initial child at this\n * location, and it will be triggered again every time a new child is added. The\n * `DataSnapshot` passed into the callback will reflect the data for the\n * relevant child. For ordering purposes, it is passed a second argument which\n * is a string containing the key of the previous sibling child by sort order,\n * or `null` if it is the first child.\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param cancelCallback - An optional callback that will be notified if your\n * event subscription is ever canceled because your client does not have\n * permission to read this data (or it had permission but has now lost it).\n * This callback will be passed an `Error` object indicating why the failure\n * occurred.\n * @param options - An object that can be used to configure `onlyOnce`, which\n * then removes the listener after its first invocation.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildAdded(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName: string | null\n  ) => unknown,\n  cancelCallback: (error: Error) => unknown,\n  options: ListenOptions\n): Unsubscribe;\n\nexport function onChildAdded(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName: string | null\n  ) => unknown,\n  cancelCallbackOrListenOptions?: ((error: Error) => unknown) | ListenOptions,\n  options?: ListenOptions\n): Unsubscribe {\n  return addEventListener(\n    query,\n    'child_added',\n    callback,\n    cancelCallbackOrListenOptions,\n    options\n  );\n}\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildChanged` event will be triggered when the data stored in a child\n * (or any of its descendants) changes. Note that a single `child_changed` event\n * may represent multiple changes to the child. The `DataSnapshot` passed to the\n * callback will contain the new child contents. For ordering purposes, the\n * callback is also passed a second argument which is a string containing the\n * key of the previous sibling child by sort order, or `null` if it is the first\n * child.\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param cancelCallback - An optional callback that will be notified if your\n * event subscription is ever canceled because your client does not have\n * permission to read this data (or it had permission but has now lost it).\n * This callback will be passed an `Error` object indicating why the failure\n * occurred.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildChanged(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName: string | null\n  ) => unknown,\n  cancelCallback?: (error: Error) => unknown\n): Unsubscribe;\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildChanged` event will be triggered when the data stored in a child\n * (or any of its descendants) changes. Note that a single `child_changed` event\n * may represent multiple changes to the child. The `DataSnapshot` passed to the\n * callback will contain the new child contents. For ordering purposes, the\n * callback is also passed a second argument which is a string containing the\n * key of the previous sibling child by sort order, or `null` if it is the first\n * child.\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param options - An object that can be used to configure `onlyOnce`, which\n * then removes the listener after its first invocation.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildChanged(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName: string | null\n  ) => unknown,\n  options: ListenOptions\n): Unsubscribe;\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildChanged` event will be triggered when the data stored in a child\n * (or any of its descendants) changes. Note that a single `child_changed` event\n * may represent multiple changes to the child. The `DataSnapshot` passed to the\n * callback will contain the new child contents. For ordering purposes, the\n * callback is also passed a second argument which is a string containing the\n * key of the previous sibling child by sort order, or `null` if it is the first\n * child.\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param cancelCallback - An optional callback that will be notified if your\n * event subscription is ever canceled because your client does not have\n * permission to read this data (or it had permission but has now lost it).\n * This callback will be passed an `Error` object indicating why the failure\n * occurred.\n * @param options - An object that can be used to configure `onlyOnce`, which\n * then removes the listener after its first invocation.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildChanged(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName: string | null\n  ) => unknown,\n  cancelCallback: (error: Error) => unknown,\n  options: ListenOptions\n): Unsubscribe;\n\nexport function onChildChanged(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName: string | null\n  ) => unknown,\n  cancelCallbackOrListenOptions?: ((error: Error) => unknown) | ListenOptions,\n  options?: ListenOptions\n): Unsubscribe {\n  return addEventListener(\n    query,\n    'child_changed',\n    callback,\n    cancelCallbackOrListenOptions,\n    options\n  );\n}\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildMoved` event will be triggered when a child's sort order changes\n * such that its position relative to its siblings changes. The `DataSnapshot`\n * passed to the callback will be for the data of the child that has moved. It\n * is also passed a second argument which is a string containing the key of the\n * previous sibling child by sort order, or `null` if it is the first child.\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param cancelCallback - An optional callback that will be notified if your\n * event subscription is ever canceled because your client does not have\n * permission to read this data (or it had permission but has now lost it).\n * This callback will be passed an `Error` object indicating why the failure\n * occurred.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildMoved(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName: string | null\n  ) => unknown,\n  cancelCallback?: (error: Error) => unknown\n): Unsubscribe;\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildMoved` event will be triggered when a child's sort order changes\n * such that its position relative to its siblings changes. The `DataSnapshot`\n * passed to the callback will be for the data of the child that has moved. It\n * is also passed a second argument which is a string containing the key of the\n * previous sibling child by sort order, or `null` if it is the first child.\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param options - An object that can be used to configure `onlyOnce`, which\n * then removes the listener after its first invocation.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildMoved(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName: string | null\n  ) => unknown,\n  options: ListenOptions\n): Unsubscribe;\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildMoved` event will be triggered when a child's sort order changes\n * such that its position relative to its siblings changes. The `DataSnapshot`\n * passed to the callback will be for the data of the child that has moved. It\n * is also passed a second argument which is a string containing the key of the\n * previous sibling child by sort order, or `null` if it is the first child.\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param cancelCallback - An optional callback that will be notified if your\n * event subscription is ever canceled because your client does not have\n * permission to read this data (or it had permission but has now lost it).\n * This callback will be passed an `Error` object indicating why the failure\n * occurred.\n * @param options - An object that can be used to configure `onlyOnce`, which\n * then removes the listener after its first invocation.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildMoved(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName: string | null\n  ) => unknown,\n  cancelCallback: (error: Error) => unknown,\n  options: ListenOptions\n): Unsubscribe;\n\nexport function onChildMoved(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName: string | null\n  ) => unknown,\n  cancelCallbackOrListenOptions?: ((error: Error) => unknown) | ListenOptions,\n  options?: ListenOptions\n): Unsubscribe {\n  return addEventListener(\n    query,\n    'child_moved',\n    callback,\n    cancelCallbackOrListenOptions,\n    options\n  );\n}\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildRemoved` event will be triggered once every time a child is\n * removed. The `DataSnapshot` passed into the callback will be the old data for\n * the child that was removed. A child will get removed when either:\n *\n * - a client explicitly calls `remove()` on that child or one of its ancestors\n * - a client calls `set(null)` on that child or one of its ancestors\n * - that child has all of its children removed\n * - there is a query in effect which now filters out the child (because it's\n *   sort order changed or the max limit was hit)\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param cancelCallback - An optional callback that will be notified if your\n * event subscription is ever canceled because your client does not have\n * permission to read this data (or it had permission but has now lost it).\n * This callback will be passed an `Error` object indicating why the failure\n * occurred.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildRemoved(\n  query: Query,\n  callback: (snapshot: DataSnapshot) => unknown,\n  cancelCallback?: (error: Error) => unknown\n): Unsubscribe;\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildRemoved` event will be triggered once every time a child is\n * removed. The `DataSnapshot` passed into the callback will be the old data for\n * the child that was removed. A child will get removed when either:\n *\n * - a client explicitly calls `remove()` on that child or one of its ancestors\n * - a client calls `set(null)` on that child or one of its ancestors\n * - that child has all of its children removed\n * - there is a query in effect which now filters out the child (because it's\n *   sort order changed or the max limit was hit)\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param options - An object that can be used to configure `onlyOnce`, which\n * then removes the listener after its first invocation.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildRemoved(\n  query: Query,\n  callback: (snapshot: DataSnapshot) => unknown,\n  options: ListenOptions\n): Unsubscribe;\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildRemoved` event will be triggered once every time a child is\n * removed. The `DataSnapshot` passed into the callback will be the old data for\n * the child that was removed. A child will get removed when either:\n *\n * - a client explicitly calls `remove()` on that child or one of its ancestors\n * - a client calls `set(null)` on that child or one of its ancestors\n * - that child has all of its children removed\n * - there is a query in effect which now filters out the child (because it's\n *   sort order changed or the max limit was hit)\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param cancelCallback - An optional callback that will be notified if your\n * event subscription is ever canceled because your client does not have\n * permission to read this data (or it had permission but has now lost it).\n * This callback will be passed an `Error` object indicating why the failure\n * occurred.\n * @param options - An object that can be used to configure `onlyOnce`, which\n * then removes the listener after its first invocation.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildRemoved(\n  query: Query,\n  callback: (snapshot: DataSnapshot) => unknown,\n  cancelCallback: (error: Error) => unknown,\n  options: ListenOptions\n): Unsubscribe;\n\nexport function onChildRemoved(\n  query: Query,\n  callback: (snapshot: DataSnapshot) => unknown,\n  cancelCallbackOrListenOptions?: ((error: Error) => unknown) | ListenOptions,\n  options?: ListenOptions\n): Unsubscribe {\n  return addEventListener(\n    query,\n    'child_removed',\n    callback,\n    cancelCallbackOrListenOptions,\n    options\n  );\n}\n\nexport { EventType };\n\n/**\n * Detaches a callback previously attached with `on()`.\n *\n * Detach a callback previously attached with `on()`. Note that if `on()` was\n * called multiple times with the same eventType and callback, the callback\n * will be called multiple times for each event, and `off()` must be called\n * multiple times to remove the callback. Calling `off()` on a parent listener\n * will not automatically remove listeners registered on child nodes, `off()`\n * must also be called on any child listeners to remove the callback.\n *\n * If a callback is not specified, all callbacks for the specified eventType\n * will be removed. Similarly, if no eventType is specified, all callbacks\n * for the `Reference` will be removed.\n *\n * Individual listeners can also be removed by invoking their unsubscribe\n * callbacks.\n *\n * @param query - The query that the listener was registered with.\n * @param eventType - One of the following strings: \"value\", \"child_added\",\n * \"child_changed\", \"child_removed\", or \"child_moved.\" If omitted, all callbacks\n * for the `Reference` will be removed.\n * @param callback - The callback function that was passed to `on()` or\n * `undefined` to remove all callbacks.\n */\nexport function off(\n  query: Query,\n  eventType?: EventType,\n  callback?: (\n    snapshot: DataSnapshot,\n    previousChildName?: string | null\n  ) => unknown\n): void {\n  let container: EventRegistration | null = null;\n  const expCallback = callback ? new CallbackContext(callback) : null;\n  if (eventType === 'value') {\n    container = new ValueEventRegistration(expCallback);\n  } else if (eventType) {\n    container = new ChildEventRegistration(eventType, expCallback);\n  }\n  repoRemoveEventCallbackForQuery(query._repo, query, container);\n}\n\n/** Describes the different query constraints available in this SDK. */\nexport type QueryConstraintType =\n  | 'endAt'\n  | 'endBefore'\n  | 'startAt'\n  | 'startAfter'\n  | 'limitToFirst'\n  | 'limitToLast'\n  | 'orderByChild'\n  | 'orderByKey'\n  | 'orderByPriority'\n  | 'orderByValue'\n  | 'equalTo';\n\n/**\n * A `QueryConstraint` is used to narrow the set of documents returned by a\n * Database query. `QueryConstraint`s are created by invoking {@link endAt},\n * {@link endBefore}, {@link startAt}, {@link startAfter}, {@link\n * limitToFirst}, {@link limitToLast}, {@link orderByChild},\n * {@link orderByChild}, {@link orderByKey} , {@link orderByPriority} ,\n * {@link orderByValue}  or {@link equalTo} and\n * can then be passed to {@link query} to create a new query instance that\n * also contains this `QueryConstraint`.\n */\nexport abstract class QueryConstraint {\n  /** The type of this query constraints */\n  abstract readonly type: QueryConstraintType;\n\n  /**\n   * Takes the provided `Query` and returns a copy of the `Query` with this\n   * `QueryConstraint` applied.\n   */\n  abstract _apply<T>(query: QueryImpl): QueryImpl;\n}\n\nclass QueryEndAtConstraint extends QueryConstraint {\n  readonly type: 'endAt';\n\n  constructor(\n    private readonly _value: number | string | boolean | null,\n    private readonly _key?: string\n  ) {\n    super();\n  }\n\n  _apply<T>(query: QueryImpl): QueryImpl {\n    validateFirebaseDataArg('endAt', this._value, query._path, true);\n    const newParams = queryParamsEndAt(\n      query._queryParams,\n      this._value,\n      this._key\n    );\n    validateLimit(newParams);\n    validateQueryEndpoints(newParams);\n    if (query._queryParams.hasEnd()) {\n      throw new Error(\n        'endAt: Starting point was already set (by another call to endAt, ' +\n          'endBefore or equalTo).'\n      );\n    }\n    return new QueryImpl(\n      query._repo,\n      query._path,\n      newParams,\n      query._orderByCalled\n    );\n  }\n}\n\n/**\n * Creates a `QueryConstraint` with the specified ending point.\n *\n * Using `startAt()`, `startAfter()`, `endBefore()`, `endAt()` and `equalTo()`\n * allows you to choose arbitrary starting and ending points for your queries.\n *\n * The ending point is inclusive, so children with exactly the specified value\n * will be included in the query. The optional key argument can be used to\n * further limit the range of the query. If it is specified, then children that\n * have exactly the specified value must also have a key name less than or equal\n * to the specified key.\n *\n * You can read more about `endAt()` in\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#filtering_data | Filtering data}.\n *\n * @param value - The value to end at. The argument type depends on which\n * `orderBy*()` function was used in this query. Specify a value that matches\n * the `orderBy*()` type. When used in combination with `orderByKey()`, the\n * value must be a string.\n * @param key - The child key to end at, among the children with the previously\n * specified priority. This argument is only allowed if ordering by child,\n * value, or priority.\n */\nexport function endAt(\n  value: number | string | boolean | null,\n  key?: string\n): QueryConstraint {\n  validateKey('endAt', 'key', key, true);\n  return new QueryEndAtConstraint(value, key);\n}\n\nclass QueryEndBeforeConstraint extends QueryConstraint {\n  readonly type: 'endBefore';\n\n  constructor(\n    private readonly _value: number | string | boolean | null,\n    private readonly _key?: string\n  ) {\n    super();\n  }\n\n  _apply<T>(query: QueryImpl): QueryImpl {\n    validateFirebaseDataArg('endBefore', this._value, query._path, false);\n    const newParams = queryParamsEndBefore(\n      query._queryParams,\n      this._value,\n      this._key\n    );\n    validateLimit(newParams);\n    validateQueryEndpoints(newParams);\n    if (query._queryParams.hasEnd()) {\n      throw new Error(\n        'endBefore: Starting point was already set (by another call to endAt, ' +\n          'endBefore or equalTo).'\n      );\n    }\n    return new QueryImpl(\n      query._repo,\n      query._path,\n      newParams,\n      query._orderByCalled\n    );\n  }\n}\n\n/**\n * Creates a `QueryConstraint` with the specified ending point (exclusive).\n *\n * Using `startAt()`, `startAfter()`, `endBefore()`, `endAt()` and `equalTo()`\n * allows you to choose arbitrary starting and ending points for your queries.\n *\n * The ending point is exclusive. If only a value is provided, children\n * with a value less than the specified value will be included in the query.\n * If a key is specified, then children must have a value lesss than or equal\n * to the specified value and a a key name less than the specified key.\n *\n * @param value - The value to end before. The argument type depends on which\n * `orderBy*()` function was used in this query. Specify a value that matches\n * the `orderBy*()` type. When used in combination with `orderByKey()`, the\n * value must be a string.\n * @param key - The child key to end before, among the children with the\n * previously specified priority. This argument is only allowed if ordering by\n * child, value, or priority.\n */\nexport function endBefore(\n  value: number | string | boolean | null,\n  key?: string\n): QueryConstraint {\n  validateKey('endBefore', 'key', key, true);\n  return new QueryEndBeforeConstraint(value, key);\n}\n\nclass QueryStartAtConstraint extends QueryConstraint {\n  readonly type: 'startAt';\n\n  constructor(\n    private readonly _value: number | string | boolean | null,\n    private readonly _key?: string\n  ) {\n    super();\n  }\n\n  _apply<T>(query: QueryImpl): QueryImpl {\n    validateFirebaseDataArg('startAt', this._value, query._path, true);\n    const newParams = queryParamsStartAt(\n      query._queryParams,\n      this._value,\n      this._key\n    );\n    validateLimit(newParams);\n    validateQueryEndpoints(newParams);\n    if (query._queryParams.hasStart()) {\n      throw new Error(\n        'startAt: Starting point was already set (by another call to startAt, ' +\n          'startBefore or equalTo).'\n      );\n    }\n    return new QueryImpl(\n      query._repo,\n      query._path,\n      newParams,\n      query._orderByCalled\n    );\n  }\n}\n\n/**\n * Creates a `QueryConstraint` with the specified starting point.\n *\n * Using `startAt()`, `startAfter()`, `endBefore()`, `endAt()` and `equalTo()`\n * allows you to choose arbitrary starting and ending points for your queries.\n *\n * The starting point is inclusive, so children with exactly the specified value\n * will be included in the query. The optional key argument can be used to\n * further limit the range of the query. If it is specified, then children that\n * have exactly the specified value must also have a key name greater than or\n * equal to the specified key.\n *\n * You can read more about `startAt()` in\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#filtering_data | Filtering data}.\n *\n * @param value - The value to start at. The argument type depends on which\n * `orderBy*()` function was used in this query. Specify a value that matches\n * the `orderBy*()` type. When used in combination with `orderByKey()`, the\n * value must be a string.\n * @param key - The child key to start at. This argument is only allowed if\n * ordering by child, value, or priority.\n */\nexport function startAt(\n  value: number | string | boolean | null = null,\n  key?: string\n): QueryConstraint {\n  validateKey('startAt', 'key', key, true);\n  return new QueryStartAtConstraint(value, key);\n}\n\nclass QueryStartAfterConstraint extends QueryConstraint {\n  readonly type: 'startAfter';\n\n  constructor(\n    private readonly _value: number | string | boolean | null,\n    private readonly _key?: string\n  ) {\n    super();\n  }\n\n  _apply<T>(query: QueryImpl): QueryImpl {\n    validateFirebaseDataArg('startAfter', this._value, query._path, false);\n    const newParams = queryParamsStartAfter(\n      query._queryParams,\n      this._value,\n      this._key\n    );\n    validateLimit(newParams);\n    validateQueryEndpoints(newParams);\n    if (query._queryParams.hasStart()) {\n      throw new Error(\n        'startAfter: Starting point was already set (by another call to startAt, ' +\n          'startAfter, or equalTo).'\n      );\n    }\n    return new QueryImpl(\n      query._repo,\n      query._path,\n      newParams,\n      query._orderByCalled\n    );\n  }\n}\n\n/**\n * Creates a `QueryConstraint` with the specified starting point (exclusive).\n *\n * Using `startAt()`, `startAfter()`, `endBefore()`, `endAt()` and `equalTo()`\n * allows you to choose arbitrary starting and ending points for your queries.\n *\n * The starting point is exclusive. If only a value is provided, children\n * with a value greater than the specified value will be included in the query.\n * If a key is specified, then children must have a value greater than or equal\n * to the specified value and a a key name greater than the specified key.\n *\n * @param value - The value to start after. The argument type depends on which\n * `orderBy*()` function was used in this query. Specify a value that matches\n * the `orderBy*()` type. When used in combination with `orderByKey()`, the\n * value must be a string.\n * @param key - The child key to start after. This argument is only allowed if\n * ordering by child, value, or priority.\n */\nexport function startAfter(\n  value: number | string | boolean | null,\n  key?: string\n): QueryConstraint {\n  validateKey('startAfter', 'key', key, true);\n  return new QueryStartAfterConstraint(value, key);\n}\n\nclass QueryLimitToFirstConstraint extends QueryConstraint {\n  readonly type: 'limitToFirst';\n\n  constructor(private readonly _limit: number) {\n    super();\n  }\n\n  _apply<T>(query: QueryImpl): QueryImpl {\n    if (query._queryParams.hasLimit()) {\n      throw new Error(\n        'limitToFirst: Limit was already set (by another call to limitToFirst ' +\n          'or limitToLast).'\n      );\n    }\n    return new QueryImpl(\n      query._repo,\n      query._path,\n      queryParamsLimitToFirst(query._queryParams, this._limit),\n      query._orderByCalled\n    );\n  }\n}\n\n/**\n * Creates a new `QueryConstraint` that if limited to the first specific number\n * of children.\n *\n * The `limitToFirst()` method is used to set a maximum number of children to be\n * synced for a given callback. If we set a limit of 100, we will initially only\n * receive up to 100 `child_added` events. If we have fewer than 100 messages\n * stored in our Database, a `child_added` event will fire for each message.\n * However, if we have over 100 messages, we will only receive a `child_added`\n * event for the first 100 ordered messages. As items change, we will receive\n * `child_removed` events for each item that drops out of the active list so\n * that the total number stays at 100.\n *\n * You can read more about `limitToFirst()` in\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#filtering_data | Filtering data}.\n *\n * @param limit - The maximum number of nodes to include in this query.\n */\nexport function limitToFirst(limit: number): QueryConstraint {\n  if (typeof limit !== 'number' || Math.floor(limit) !== limit || limit <= 0) {\n    throw new Error('limitToFirst: First argument must be a positive integer.');\n  }\n  return new QueryLimitToFirstConstraint(limit);\n}\n\nclass QueryLimitToLastConstraint extends QueryConstraint {\n  readonly type: 'limitToLast';\n\n  constructor(private readonly _limit: number) {\n    super();\n  }\n\n  _apply<T>(query: QueryImpl): QueryImpl {\n    if (query._queryParams.hasLimit()) {\n      throw new Error(\n        'limitToLast: Limit was already set (by another call to limitToFirst ' +\n          'or limitToLast).'\n      );\n    }\n    return new QueryImpl(\n      query._repo,\n      query._path,\n      queryParamsLimitToLast(query._queryParams, this._limit),\n      query._orderByCalled\n    );\n  }\n}\n\n/**\n * Creates a new `QueryConstraint` that is limited to return only the last\n * specified number of children.\n *\n * The `limitToLast()` method is used to set a maximum number of children to be\n * synced for a given callback. If we set a limit of 100, we will initially only\n * receive up to 100 `child_added` events. If we have fewer than 100 messages\n * stored in our Database, a `child_added` event will fire for each message.\n * However, if we have over 100 messages, we will only receive a `child_added`\n * event for the last 100 ordered messages. As items change, we will receive\n * `child_removed` events for each item that drops out of the active list so\n * that the total number stays at 100.\n *\n * You can read more about `limitToLast()` in\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#filtering_data | Filtering data}.\n *\n * @param limit - The maximum number of nodes to include in this query.\n */\nexport function limitToLast(limit: number): QueryConstraint {\n  if (typeof limit !== 'number' || Math.floor(limit) !== limit || limit <= 0) {\n    throw new Error('limitToLast: First argument must be a positive integer.');\n  }\n\n  return new QueryLimitToLastConstraint(limit);\n}\n\nclass QueryOrderByChildConstraint extends QueryConstraint {\n  readonly type: 'orderByChild';\n\n  constructor(private readonly _path: string) {\n    super();\n  }\n\n  _apply<T>(query: QueryImpl): QueryImpl {\n    validateNoPreviousOrderByCall(query, 'orderByChild');\n    const parsedPath = new Path(this._path);\n    if (pathIsEmpty(parsedPath)) {\n      throw new Error(\n        'orderByChild: cannot pass in empty path. Use orderByValue() instead.'\n      );\n    }\n    const index = new PathIndex(parsedPath);\n    const newParams = queryParamsOrderBy(query._queryParams, index);\n    validateQueryEndpoints(newParams);\n\n    return new QueryImpl(\n      query._repo,\n      query._path,\n      newParams,\n      /*orderByCalled=*/ true\n    );\n  }\n}\n\n/**\n * Creates a new `QueryConstraint` that orders by the specified child key.\n *\n * Queries can only order by one key at a time. Calling `orderByChild()`\n * multiple times on the same query is an error.\n *\n * Firebase queries allow you to order your data by any child key on the fly.\n * However, if you know in advance what your indexes will be, you can define\n * them via the .indexOn rule in your Security Rules for better performance. See\n * the{@link https://firebase.google.com/docs/database/security/indexing-data}\n * rule for more information.\n *\n * You can read more about `orderByChild()` in\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sort_data | Sort data}.\n *\n * @param path - The path to order by.\n */\nexport function orderByChild(path: string): QueryConstraint {\n  if (path === '$key') {\n    throw new Error(\n      'orderByChild: \"$key\" is invalid.  Use orderByKey() instead.'\n    );\n  } else if (path === '$priority') {\n    throw new Error(\n      'orderByChild: \"$priority\" is invalid.  Use orderByPriority() instead.'\n    );\n  } else if (path === '$value') {\n    throw new Error(\n      'orderByChild: \"$value\" is invalid.  Use orderByValue() instead.'\n    );\n  }\n  validatePathString('orderByChild', 'path', path, false);\n  return new QueryOrderByChildConstraint(path);\n}\n\nclass QueryOrderByKeyConstraint extends QueryConstraint {\n  readonly type: 'orderByKey';\n\n  _apply<T>(query: QueryImpl): QueryImpl {\n    validateNoPreviousOrderByCall(query, 'orderByKey');\n    const newParams = queryParamsOrderBy(query._queryParams, KEY_INDEX);\n    validateQueryEndpoints(newParams);\n    return new QueryImpl(\n      query._repo,\n      query._path,\n      newParams,\n      /*orderByCalled=*/ true\n    );\n  }\n}\n\n/**\n * Creates a new `QueryConstraint` that orders by the key.\n *\n * Sorts the results of a query by their (ascending) key values.\n *\n * You can read more about `orderByKey()` in\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sort_data | Sort data}.\n */\nexport function orderByKey(): QueryConstraint {\n  return new QueryOrderByKeyConstraint();\n}\n\nclass QueryOrderByPriorityConstraint extends QueryConstraint {\n  readonly type: 'orderByPriority';\n\n  _apply<T>(query: QueryImpl): QueryImpl {\n    validateNoPreviousOrderByCall(query, 'orderByPriority');\n    const newParams = queryParamsOrderBy(query._queryParams, PRIORITY_INDEX);\n    validateQueryEndpoints(newParams);\n    return new QueryImpl(\n      query._repo,\n      query._path,\n      newParams,\n      /*orderByCalled=*/ true\n    );\n  }\n}\n\n/**\n * Creates a new `QueryConstraint` that orders by priority.\n *\n * Applications need not use priority but can order collections by\n * ordinary properties (see\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sort_data | Sort data}\n * for alternatives to priority.\n */\nexport function orderByPriority(): QueryConstraint {\n  return new QueryOrderByPriorityConstraint();\n}\n\nclass QueryOrderByValueConstraint extends QueryConstraint {\n  readonly type: 'orderByValue';\n\n  _apply<T>(query: QueryImpl): QueryImpl {\n    validateNoPreviousOrderByCall(query, 'orderByValue');\n    const newParams = queryParamsOrderBy(query._queryParams, VALUE_INDEX);\n    validateQueryEndpoints(newParams);\n    return new QueryImpl(\n      query._repo,\n      query._path,\n      newParams,\n      /*orderByCalled=*/ true\n    );\n  }\n}\n\n/**\n * Creates a new `QueryConstraint` that orders by value.\n *\n * If the children of a query are all scalar values (string, number, or\n * boolean), you can order the results by their (ascending) values.\n *\n * You can read more about `orderByValue()` in\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sort_data | Sort data}.\n */\nexport function orderByValue(): QueryConstraint {\n  return new QueryOrderByValueConstraint();\n}\n\nclass QueryEqualToValueConstraint extends QueryConstraint {\n  readonly type: 'equalTo';\n\n  constructor(\n    private readonly _value: number | string | boolean | null,\n    private readonly _key?: string\n  ) {\n    super();\n  }\n\n  _apply<T>(query: QueryImpl): QueryImpl {\n    validateFirebaseDataArg('equalTo', this._value, query._path, false);\n    if (query._queryParams.hasStart()) {\n      throw new Error(\n        'equalTo: Starting point was already set (by another call to startAt/startAfter or ' +\n          'equalTo).'\n      );\n    }\n    if (query._queryParams.hasEnd()) {\n      throw new Error(\n        'equalTo: Ending point was already set (by another call to endAt/endBefore or ' +\n          'equalTo).'\n      );\n    }\n    return new QueryEndAtConstraint(this._value, this._key)._apply(\n      new QueryStartAtConstraint(this._value, this._key)._apply(query)\n    );\n  }\n}\n\n/**\n * Creates a `QueryConstraint` that includes children that match the specified\n * value.\n *\n * Using `startAt()`, `startAfter()`, `endBefore()`, `endAt()` and `equalTo()`\n * allows you to choose arbitrary starting and ending points for your queries.\n *\n * The optional key argument can be used to further limit the range of the\n * query. If it is specified, then children that have exactly the specified\n * value must also have exactly the specified key as their key name. This can be\n * used to filter result sets with many matches for the same value.\n *\n * You can read more about `equalTo()` in\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#filtering_data | Filtering data}.\n *\n * @param value - The value to match for. The argument type depends on which\n * `orderBy*()` function was used in this query. Specify a value that matches\n * the `orderBy*()` type. When used in combination with `orderByKey()`, the\n * value must be a string.\n * @param key - The child key to start at, among the children with the\n * previously specified priority. This argument is only allowed if ordering by\n * child, value, or priority.\n */\nexport function equalTo(\n  value: number | string | boolean | null,\n  key?: string\n): QueryConstraint {\n  validateKey('equalTo', 'key', key, true);\n  return new QueryEqualToValueConstraint(value, key);\n}\n\n/**\n * Creates a new immutable instance of `Query` that is extended to also include\n * additional query constraints.\n *\n * @param query - The Query instance to use as a base for the new constraints.\n * @param queryConstraints - The list of `QueryConstraint`s to apply.\n * @throws if any of the provided query constraints cannot be combined with the\n * existing or new constraints.\n */\nexport function query(\n  query: Query,\n  ...queryConstraints: QueryConstraint[]\n): Query {\n  let queryImpl = getModularInstance(query) as QueryImpl;\n  for (const constraint of queryConstraints) {\n    queryImpl = constraint._apply(queryImpl);\n  }\n  return queryImpl;\n}\n\n/**\n * Define reference constructor in various modules\n *\n * We are doing this here to avoid several circular\n * dependency issues\n */\nsyncPointSetReferenceConstructor(ReferenceImpl);\nsyncTreeSetReferenceConstructor(ReferenceImpl);\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AppCheckInternalComponentName } from '@firebase/app-check-interop-types';\n// eslint-disable-next-line import/no-extraneous-dependencies\nimport {\n  _FirebaseService,\n  _getProvider,\n  FirebaseApp,\n  getApp\n} from '@firebase/app-exp';\nimport { FirebaseAuthInternalName } from '@firebase/auth-interop-types';\nimport { Provider } from '@firebase/component';\nimport {\n  getModularInstance,\n  createMockUserToken,\n  EmulatorMockTokenOptions\n} from '@firebase/util';\n\nimport { AppCheckTokenProvider } from '../core/AppCheckTokenProvider';\nimport {\n  AuthTokenProvider,\n  EmulatorTokenProvider,\n  FirebaseAuthTokenProvider\n} from '../core/AuthTokenProvider';\nimport { Repo, repoInterrupt, repoResume, repoStart } from '../core/Repo';\nimport { RepoInfo } from '../core/RepoInfo';\nimport { parseRepoInfo } from '../core/util/libs/parser';\nimport { newEmptyPath, pathIsEmpty } from '../core/util/Path';\nimport {\n  fatal,\n  log,\n  enableLogging as enableLoggingImpl\n} from '../core/util/util';\nimport { validateUrl } from '../core/util/validation';\n\nimport { ReferenceImpl } from './Reference_impl';\n\n/**\n * This variable is also defined in the firebase node.js admin SDK. Before\n * modifying this definition, consult the definition in:\n *\n * https://github.com/firebase/firebase-admin-node\n *\n * and make sure the two are consistent.\n */\nconst FIREBASE_DATABASE_EMULATOR_HOST_VAR = 'FIREBASE_DATABASE_EMULATOR_HOST';\n\n/**\n * Creates and caches Repo instances.\n */\nconst repos: {\n  [appName: string]: {\n    [dbUrl: string]: Repo;\n  };\n} = {};\n\n/**\n * If true, new Repos will be created to use ReadonlyRestClient (for testing purposes).\n */\nlet useRestClient = false;\n\n/**\n * Update an existing repo in place to point to a new host/port.\n */\nfunction repoManagerApplyEmulatorSettings(\n  repo: Repo,\n  host: string,\n  port: number,\n  tokenProvider?: AuthTokenProvider\n): void {\n  repo.repoInfo_ = new RepoInfo(\n    `${host}:${port}`,\n    /* secure= */ false,\n    repo.repoInfo_.namespace,\n    repo.repoInfo_.webSocketOnly,\n    repo.repoInfo_.nodeAdmin,\n    repo.repoInfo_.persistenceKey,\n    repo.repoInfo_.includeNamespaceInQueryParams\n  );\n\n  if (tokenProvider) {\n    repo.authTokenProvider_ = tokenProvider;\n  }\n}\n\n/**\n * This function should only ever be called to CREATE a new database instance.\n * @internal\n */\nexport function repoManagerDatabaseFromApp(\n  app: FirebaseApp,\n  authProvider: Provider<FirebaseAuthInternalName>,\n  appCheckProvider?: Provider<AppCheckInternalComponentName>,\n  url?: string,\n  nodeAdmin?: boolean\n): Database {\n  let dbUrl: string | undefined = url || app.options.databaseURL;\n  if (dbUrl === undefined) {\n    if (!app.options.projectId) {\n      fatal(\n        \"Can't determine Firebase Database URL. Be sure to include \" +\n          ' a Project ID when calling firebase.initializeApp().'\n      );\n    }\n\n    log('Using default host for project ', app.options.projectId);\n    dbUrl = `${app.options.projectId}-default-rtdb.firebaseio.com`;\n  }\n\n  let parsedUrl = parseRepoInfo(dbUrl, nodeAdmin);\n  let repoInfo = parsedUrl.repoInfo;\n\n  let isEmulator: boolean;\n\n  let dbEmulatorHost: string | undefined = undefined;\n  if (typeof process !== 'undefined') {\n    dbEmulatorHost = process.env[FIREBASE_DATABASE_EMULATOR_HOST_VAR];\n  }\n\n  if (dbEmulatorHost) {\n    isEmulator = true;\n    dbUrl = `http://${dbEmulatorHost}?ns=${repoInfo.namespace}`;\n    parsedUrl = parseRepoInfo(dbUrl, nodeAdmin);\n    repoInfo = parsedUrl.repoInfo;\n  } else {\n    isEmulator = !parsedUrl.repoInfo.secure;\n  }\n\n  const authTokenProvider =\n    nodeAdmin && isEmulator\n      ? new EmulatorTokenProvider(EmulatorTokenProvider.OWNER)\n      : new FirebaseAuthTokenProvider(app.name, app.options, authProvider);\n\n  validateUrl('Invalid Firebase Database URL', parsedUrl);\n  if (!pathIsEmpty(parsedUrl.path)) {\n    fatal(\n      'Database URL must point to the root of a Firebase Database ' +\n        '(not including a child path).'\n    );\n  }\n\n  const repo = repoManagerCreateRepo(\n    repoInfo,\n    app,\n    authTokenProvider,\n    new AppCheckTokenProvider(app.name, appCheckProvider)\n  );\n  return new Database(repo, app);\n}\n\n/**\n * Remove the repo and make sure it is disconnected.\n *\n */\nfunction repoManagerDeleteRepo(repo: Repo, appName: string): void {\n  const appRepos = repos[appName];\n  // This should never happen...\n  if (!appRepos || appRepos[repo.key] !== repo) {\n    fatal(`Database ${appName}(${repo.repoInfo_}) has already been deleted.`);\n  }\n  repoInterrupt(repo);\n  delete appRepos[repo.key];\n}\n\n/**\n * Ensures a repo doesn't already exist and then creates one using the\n * provided app.\n *\n * @param repoInfo - The metadata about the Repo\n * @returns The Repo object for the specified server / repoName.\n */\nfunction repoManagerCreateRepo(\n  repoInfo: RepoInfo,\n  app: FirebaseApp,\n  authTokenProvider: AuthTokenProvider,\n  appCheckProvider: AppCheckTokenProvider\n): Repo {\n  let appRepos = repos[app.name];\n\n  if (!appRepos) {\n    appRepos = {};\n    repos[app.name] = appRepos;\n  }\n\n  let repo = appRepos[repoInfo.toURLString()];\n  if (repo) {\n    fatal(\n      'Database initialized multiple times. Please make sure the format of the database URL matches with each database() call.'\n    );\n  }\n  repo = new Repo(repoInfo, useRestClient, authTokenProvider, appCheckProvider);\n  appRepos[repoInfo.toURLString()] = repo;\n\n  return repo;\n}\n\n/**\n * Forces us to use ReadonlyRestClient instead of PersistentConnection for new Repos.\n */\nexport function repoManagerForceRestClient(forceRestClient: boolean): void {\n  useRestClient = forceRestClient;\n}\n\n/**\n * Class representing a Firebase Realtime Database.\n */\nexport class Database implements _FirebaseService {\n  /** Represents a database instance. */\n  readonly 'type' = 'database';\n\n  /** Track if the instance has been used (root or repo accessed) */\n  _instanceStarted: boolean = false;\n\n  /** Backing state for root_ */\n  private _rootInternal?: ReferenceImpl;\n\n  /** @hideconstructor */\n  constructor(\n    public _repoInternal: Repo,\n    /** The FirebaseApp associated with this Realtime Database instance. */\n    readonly app: FirebaseApp\n  ) {}\n\n  get _repo(): Repo {\n    if (!this._instanceStarted) {\n      repoStart(\n        this._repoInternal,\n        this.app.options.appId,\n        this.app.options['databaseAuthVariableOverride']\n      );\n      this._instanceStarted = true;\n    }\n    return this._repoInternal;\n  }\n\n  get _root(): ReferenceImpl {\n    if (!this._rootInternal) {\n      this._rootInternal = new ReferenceImpl(this._repo, newEmptyPath());\n    }\n    return this._rootInternal;\n  }\n\n  _delete(): Promise<void> {\n    if (this._rootInternal !== null) {\n      repoManagerDeleteRepo(this._repo, this.app.name);\n      this._repoInternal = null;\n      this._rootInternal = null;\n    }\n    return Promise.resolve();\n  }\n\n  _checkNotDeleted(apiName: string) {\n    if (this._rootInternal === null) {\n      fatal('Cannot call ' + apiName + ' on a deleted database.');\n    }\n  }\n}\n\n/**\n * Returns the instance of the Realtime Database SDK that is associated\n * with the provided {@link @firebase/app#FirebaseApp}. Initializes a new instance with\n * with default settings if no instance exists or if the existing instance uses\n * a custom database URL.\n *\n * @param app - The {@link @firebase/app#FirebaseApp} instance that the returned Realtime\n * Database instance is associated with.\n * @param url - The URL of the Realtime Database instance to connect to. If not\n * provided, the SDK connects to the default instance of the Firebase App.\n * @returns The `FirebaseDatabase` instance of the provided app.\n */\nexport function getDatabase(\n  app: FirebaseApp = getApp(),\n  url?: string\n): Database {\n  return _getProvider(app, 'database-exp').getImmediate({\n    identifier: url\n  }) as Database;\n}\n\n/**\n * Modify the provided instance to communicate with the Realtime Database\n * emulator.\n *\n * <p>Note: This method must be called before performing any other operation.\n *\n * @param db - The instance to modify.\n * @param host - The emulator host (ex: localhost)\n * @param port - The emulator port (ex: 8080)\n * @param options.mockUserToken - the mock auth token to use for unit testing Security Rules\n */\nexport function connectDatabaseEmulator(\n  db: Database,\n  host: string,\n  port: number,\n  options: {\n    mockUserToken?: EmulatorMockTokenOptions | string;\n  } = {}\n): void {\n  db = getModularInstance(db);\n  db._checkNotDeleted('useEmulator');\n  if (db._instanceStarted) {\n    fatal(\n      'Cannot call useEmulator() after instance has already been initialized.'\n    );\n  }\n\n  const repo = db._repoInternal;\n  let tokenProvider: EmulatorTokenProvider | undefined = undefined;\n  if (repo.repoInfo_.nodeAdmin) {\n    if (options.mockUserToken) {\n      fatal(\n        'mockUserToken is not supported by the Admin SDK. For client access with mock users, please use the \"firebase\" package instead of \"firebase-admin\".'\n      );\n    }\n    tokenProvider = new EmulatorTokenProvider(EmulatorTokenProvider.OWNER);\n  } else if (options.mockUserToken) {\n    const token =\n      typeof options.mockUserToken === 'string'\n        ? options.mockUserToken\n        : createMockUserToken(options.mockUserToken, db.app.options.projectId);\n    tokenProvider = new EmulatorTokenProvider(token);\n  }\n\n  // Modify the repo to apply emulator settings\n  repoManagerApplyEmulatorSettings(repo, host, port, tokenProvider);\n}\n\n/**\n * Disconnects from the server (all Database operations will be completed\n * offline).\n *\n * The client automatically maintains a persistent connection to the Database\n * server, which will remain active indefinitely and reconnect when\n * disconnected. However, the `goOffline()` and `goOnline()` methods may be used\n * to control the client connection in cases where a persistent connection is\n * undesirable.\n *\n * While offline, the client will no longer receive data updates from the\n * Database. However, all Database operations performed locally will continue to\n * immediately fire events, allowing your application to continue behaving\n * normally. Additionally, each operation performed locally will automatically\n * be queued and retried upon reconnection to the Database server.\n *\n * To reconnect to the Database and begin receiving remote events, see\n * `goOnline()`.\n *\n * @param db - The instance to disconnect.\n */\nexport function goOffline(db: Database): void {\n  db = getModularInstance(db);\n  db._checkNotDeleted('goOffline');\n  repoInterrupt(db._repo);\n}\n\n/**\n * Reconnects to the server and synchronizes the offline Database state\n * with the server state.\n *\n * This method should be used after disabling the active connection with\n * `goOffline()`. Once reconnected, the client will transmit the proper data\n * and fire the appropriate events so that your client \"catches up\"\n * automatically.\n *\n * @param db - The instance to reconnect.\n */\nexport function goOnline(db: Database): void {\n  db = getModularInstance(db);\n  db._checkNotDeleted('goOnline');\n  repoResume(db._repo);\n}\n\n/**\n * Logs debugging information to the console.\n *\n * @param enabled - Enables logging if `true`, disables logging if `false`.\n * @param persistent - Remembers the logging state between page refreshes if\n * `true`.\n */\nexport function enableLogging(enabled: boolean, persistent?: boolean);\n\n/**\n * Logs debugging information to the console.\n *\n * @param logger - A custom logger function to control how things get logged.\n */\nexport function enableLogging(logger: (message: string) => unknown);\n\nexport function enableLogging(\n  logger: boolean | ((message: string) => unknown),\n  persistent?: boolean\n): void {\n  enableLoggingImpl(logger, persistent);\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst SERVER_TIMESTAMP = {\n  '.sv': 'timestamp'\n};\n\n/**\n * Returns a placeholder value for auto-populating the current timestamp (time\n * since the Unix epoch, in milliseconds) as determined by the Firebase\n * servers.\n */\nexport function serverTimestamp(): object {\n  return SERVER_TIMESTAMP;\n}\n\n/**\n * Returns a placeholder value that can be used to atomically increment the\n * current database value by the provided delta.\n *\n * @param delta - the amount to modify the current value atomically.\n * @returns A placeholder value for modifying data atomically server-side.\n */\nexport function increment(delta: number): object {\n  return {\n    '.sv': {\n      'increment': delta\n    }\n  };\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { getModularInstance, Deferred } from '@firebase/util';\n\nimport { repoStartTransaction } from '../core/Repo';\nimport { PRIORITY_INDEX } from '../core/snap/indexes/PriorityIndex';\nimport { Node } from '../core/snap/Node';\nimport { validateWritablePath } from '../core/util/validation';\n\nimport { DatabaseReference } from './Reference';\nimport { DataSnapshot, onValue, ReferenceImpl } from './Reference_impl';\n\n/** An options object to configure transactions. */\nexport interface TransactionOptions {\n  /**\n   * By default, events are raised each time the transaction update function\n   * runs. So if it is run multiple times, you may see intermediate states. You\n   * can set this to false to suppress these intermediate states and instead\n   * wait until the transaction has completed before events are raised.\n   */\n  readonly applyLocally?: boolean;\n}\n\n/**\n * A type for the resolve value of Firebase.transaction.\n */\nexport class TransactionResult {\n  /** @hideconstructor */\n  constructor(\n    /** Whether the transaction was successfully committed. */\n    readonly committed: boolean,\n    /** The resulting data snapshot. */\n    readonly snapshot: DataSnapshot\n  ) {}\n\n  /** Returns a JSON-serializable representation of this object. */\n  toJSON(): object {\n    return { committed: this.committed, snapshot: this.snapshot.toJSON() };\n  }\n}\n\n/**\n * Atomically modifies the data at this location.\n *\n * Atomically modify the data at this location. Unlike a normal `set()`, which\n * just overwrites the data regardless of its previous value, `transaction()` is\n * used to modify the existing value to a new value, ensuring there are no\n * conflicts with other clients writing to the same location at the same time.\n *\n * To accomplish this, you pass `runTransaction()` an update function which is\n * used to transform the current value into a new value. If another client\n * writes to the location before your new value is successfully written, your\n * update function will be called again with the new current value, and the\n * write will be retried. This will happen repeatedly until your write succeeds\n * without conflict or you abort the transaction by not returning a value from\n * your update function.\n *\n * Note: Modifying data with `set()` will cancel any pending transactions at\n * that location, so extreme care should be taken if mixing `set()` and\n * `transaction()` to update the same data.\n *\n * Note: When using transactions with Security and Firebase Rules in place, be\n * aware that a client needs `.read` access in addition to `.write` access in\n * order to perform a transaction. This is because the client-side nature of\n * transactions requires the client to read the data in order to transactionally\n * update it.\n *\n * @param ref - The location to atomically modify.\n * @param transactionUpdate - A developer-supplied function which will be passed\n * the current data stored at this location (as a JavaScript object). The\n * function should return the new value it would like written (as a JavaScript\n * object). If `undefined` is returned (i.e. you return with no arguments) the\n * transaction will be aborted and the data at this location will not be\n * modified.\n * @param options - An options object to configure transactions.\n * @returns A Promise that can optionally be used instead of the onComplete\n * callback to handle success and failure.\n */\nexport function runTransaction(\n  ref: DatabaseReference,\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  transactionUpdate: (currentData: any) => unknown,\n  options?: TransactionOptions\n): Promise<TransactionResult> {\n  ref = getModularInstance(ref);\n\n  validateWritablePath('Reference.transaction', ref._path);\n\n  if (ref.key === '.length' || ref.key === '.keys') {\n    throw (\n      'Reference.transaction failed: ' + ref.key + ' is a read-only object.'\n    );\n  }\n\n  const applyLocally = options?.applyLocally ?? true;\n  const deferred = new Deferred<TransactionResult>();\n\n  const promiseComplete = (\n    error: Error | null,\n    committed: boolean,\n    node: Node | null\n  ) => {\n    let dataSnapshot: DataSnapshot | null = null;\n    if (error) {\n      deferred.reject(error);\n    } else {\n      dataSnapshot = new DataSnapshot(\n        node,\n        new ReferenceImpl(ref._repo, ref._path),\n        PRIORITY_INDEX\n      );\n      deferred.resolve(new TransactionResult(committed, dataSnapshot));\n    }\n  };\n\n  // Add a watch to make sure we get server updates.\n  const unwatcher = onValue(ref, () => {});\n\n  repoStartTransaction(\n    ref._repo,\n    ref._path,\n    transactionUpdate,\n    promiseComplete,\n    unwatcher,\n    applyLocally\n  );\n\n  return deferred.promise;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { validateArgCount, validateCallback, Compat } from '@firebase/util';\n\nimport { Indexable } from '../core/util/misc';\nimport { warn } from '../core/util/util';\n\n// TODO: revert to import { OnDisconnect as ExpOnDisconnect } from '../../exp/index'; once the modular SDK goes GA\n/**\n * This is a workaround for an issue in the no-modular '@firebase/database' where its typings\n * reference types from `@firebase/app-exp`.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ntype ExpOnDisconnect = any;\n\nexport class OnDisconnect implements Compat<ExpOnDisconnect> {\n  constructor(readonly _delegate: ExpOnDisconnect) {}\n\n  cancel(onComplete?: (a: Error | null) => void): Promise<void> {\n    validateArgCount('OnDisconnect.cancel', 0, 1, arguments.length);\n    validateCallback('OnDisconnect.cancel', 'onComplete', onComplete, true);\n    const result = this._delegate.cancel();\n    if (onComplete) {\n      result.then(\n        () => onComplete(null),\n        error => onComplete(error)\n      );\n    }\n    return result;\n  }\n\n  remove(onComplete?: (a: Error | null) => void): Promise<void> {\n    validateArgCount('OnDisconnect.remove', 0, 1, arguments.length);\n    validateCallback('OnDisconnect.remove', 'onComplete', onComplete, true);\n    const result = this._delegate.remove();\n    if (onComplete) {\n      result.then(\n        () => onComplete(null),\n        error => onComplete(error)\n      );\n    }\n    return result;\n  }\n\n  set(value: unknown, onComplete?: (a: Error | null) => void): Promise<void> {\n    validateArgCount('OnDisconnect.set', 1, 2, arguments.length);\n    validateCallback('OnDisconnect.set', 'onComplete', onComplete, true);\n    const result = this._delegate.set(value);\n    if (onComplete) {\n      result.then(\n        () => onComplete(null),\n        error => onComplete(error)\n      );\n    }\n    return result;\n  }\n\n  setWithPriority(\n    value: unknown,\n    priority: number | string | null,\n    onComplete?: (a: Error | null) => void\n  ): Promise<void> {\n    validateArgCount('OnDisconnect.setWithPriority', 2, 3, arguments.length);\n    validateCallback(\n      'OnDisconnect.setWithPriority',\n      'onComplete',\n      onComplete,\n      true\n    );\n    const result = this._delegate.setWithPriority(value, priority);\n    if (onComplete) {\n      result.then(\n        () => onComplete(null),\n        error => onComplete(error)\n      );\n    }\n    return result;\n  }\n\n  update(\n    objectToMerge: Indexable,\n    onComplete?: (a: Error | null) => void\n  ): Promise<void> {\n    validateArgCount('OnDisconnect.update', 1, 2, arguments.length);\n    if (Array.isArray(objectToMerge)) {\n      const newObjectToMerge: { [k: string]: unknown } = {};\n      for (let i = 0; i < objectToMerge.length; ++i) {\n        newObjectToMerge['' + i] = objectToMerge[i];\n      }\n      objectToMerge = newObjectToMerge;\n      warn(\n        'Passing an Array to firebase.database.onDisconnect().update() is deprecated. Use set() if you want to overwrite the ' +\n          'existing data, or an Object with integer keys if you really do want to only update some of the children.'\n      );\n    }\n    validateCallback('OnDisconnect.update', 'onComplete', onComplete, true);\n    const result = this._delegate.update(objectToMerge);\n    if (onComplete) {\n      result.then(\n        () => onComplete(null),\n        error => onComplete(error)\n      );\n    }\n    return result;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { validateArgCount } from '@firebase/util';\n\nimport { DataSnapshot } from './Reference';\n\nexport class TransactionResult {\n  /**\n   * A type for the resolve value of Firebase.transaction.\n   */\n  constructor(public committed: boolean, public snapshot: DataSnapshot) {}\n\n  // Do not create public documentation. This is intended to make JSON serialization work but is otherwise unnecessary\n  // for end-users\n  toJSON(): object {\n    validateArgCount('TransactionResult.toJSON', 0, 1, arguments.length);\n    return { committed: this.committed, snapshot: this.snapshot.toJSON() };\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Compat,\n  Deferred,\n  errorPrefix,\n  validateArgCount,\n  validateCallback,\n  validateContextObject\n} from '@firebase/util';\n\nimport {\n  OnDisconnect as ExpOnDisconnect,\n  off,\n  onChildAdded,\n  onChildChanged,\n  onChildMoved,\n  onChildRemoved,\n  onValue,\n  EventType,\n  limitToFirst,\n  query,\n  limitToLast,\n  orderByChild,\n  orderByKey,\n  orderByValue,\n  orderByPriority,\n  startAt,\n  startAfter,\n  endAt,\n  endBefore,\n  equalTo,\n  get,\n  set,\n  update,\n  setWithPriority,\n  remove,\n  setPriority,\n  push,\n  runTransaction,\n  _QueryImpl,\n  _ReferenceImpl,\n  child\n} from '../../exp/index'; // import from the exp public API\nimport { warn } from '../core/util/util';\nimport {\n  validateBoolean,\n  validateEventType,\n  validatePathString,\n  validateWritablePath\n} from '../core/util/validation';\nimport { UserCallback } from '../core/view/EventRegistration';\nimport { QueryParams } from '../core/view/QueryParams';\nimport { ThenableReferenceImpl } from '../exp/Reference_impl';\n\nimport { Database } from './Database';\nimport { OnDisconnect } from './onDisconnect';\nimport { TransactionResult } from './TransactionResult';\n\n// TODO: revert to import {  DataSnapshot as ExpDataSnapshot, Query as ExpQuery,\n// Reference as ExpReference,} from '../../exp/index'; once the modular SDK goes GA\n/**\n * This is part of a workaround for an issue in the no-modular '@firebase/database' where its typings\n * reference types from `@firebase/app-exp`.\n */\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\ntype ExpDataSnapshot = any;\ntype ExpQuery = any;\ntype ExpReference = any;\n/* eslint-enable @typescript-eslint/no-explicit-any */\n\n/**\n * Class representing a firebase data snapshot.  It wraps a SnapshotNode and\n * surfaces the public methods (val, forEach, etc.) we want to expose.\n */\nexport class DataSnapshot implements Compat<ExpDataSnapshot> {\n  constructor(\n    readonly _database: Database,\n    readonly _delegate: ExpDataSnapshot\n  ) {}\n\n  /**\n   * Retrieves the snapshot contents as JSON.  Returns null if the snapshot is\n   * empty.\n   *\n   * @returns JSON representation of the DataSnapshot contents, or null if empty.\n   */\n  val(): unknown {\n    validateArgCount('DataSnapshot.val', 0, 0, arguments.length);\n    return this._delegate.val();\n  }\n\n  /**\n   * Returns the snapshot contents as JSON, including priorities of node.  Suitable for exporting\n   * the entire node contents.\n   * @returns JSON representation of the DataSnapshot contents, or null if empty.\n   */\n  exportVal(): unknown {\n    validateArgCount('DataSnapshot.exportVal', 0, 0, arguments.length);\n    return this._delegate.exportVal();\n  }\n\n  // Do not create public documentation. This is intended to make JSON serialization work but is otherwise unnecessary\n  // for end-users\n  toJSON(): unknown {\n    // Optional spacer argument is unnecessary because we're depending on recursion rather than stringifying the content\n    validateArgCount('DataSnapshot.toJSON', 0, 1, arguments.length);\n    return this._delegate.toJSON();\n  }\n\n  /**\n   * Returns whether the snapshot contains a non-null value.\n   *\n   * @returns Whether the snapshot contains a non-null value, or is empty.\n   */\n  exists(): boolean {\n    validateArgCount('DataSnapshot.exists', 0, 0, arguments.length);\n    return this._delegate.exists();\n  }\n\n  /**\n   * Returns a DataSnapshot of the specified child node's contents.\n   *\n   * @param path - Path to a child.\n   * @returns DataSnapshot for child node.\n   */\n  child(path: string): DataSnapshot {\n    validateArgCount('DataSnapshot.child', 0, 1, arguments.length);\n    // Ensure the childPath is a string (can be a number)\n    path = String(path);\n    validatePathString('DataSnapshot.child', 'path', path, false);\n    return new DataSnapshot(this._database, this._delegate.child(path));\n  }\n\n  /**\n   * Returns whether the snapshot contains a child at the specified path.\n   *\n   * @param path - Path to a child.\n   * @returns Whether the child exists.\n   */\n  hasChild(path: string): boolean {\n    validateArgCount('DataSnapshot.hasChild', 1, 1, arguments.length);\n    validatePathString('DataSnapshot.hasChild', 'path', path, false);\n    return this._delegate.hasChild(path);\n  }\n\n  /**\n   * Returns the priority of the object, or null if no priority was set.\n   *\n   * @returns The priority.\n   */\n  getPriority(): string | number | null {\n    validateArgCount('DataSnapshot.getPriority', 0, 0, arguments.length);\n    return this._delegate.priority;\n  }\n\n  /**\n   * Iterates through child nodes and calls the specified action for each one.\n   *\n   * @param action - Callback function to be called\n   * for each child.\n   * @returns True if forEach was canceled by action returning true for\n   * one of the child nodes.\n   */\n  forEach(action: (snapshot: DataSnapshot) => boolean | void): boolean {\n    validateArgCount('DataSnapshot.forEach', 1, 1, arguments.length);\n    validateCallback('DataSnapshot.forEach', 'action', action, false);\n    return this._delegate.forEach(expDataSnapshot =>\n      action(new DataSnapshot(this._database, expDataSnapshot))\n    );\n  }\n\n  /**\n   * Returns whether this DataSnapshot has children.\n   * @returns True if the DataSnapshot contains 1 or more child nodes.\n   */\n  hasChildren(): boolean {\n    validateArgCount('DataSnapshot.hasChildren', 0, 0, arguments.length);\n    return this._delegate.hasChildren();\n  }\n\n  get key() {\n    return this._delegate.key;\n  }\n\n  /**\n   * Returns the number of children for this DataSnapshot.\n   * @returns The number of children that this DataSnapshot contains.\n   */\n  numChildren(): number {\n    validateArgCount('DataSnapshot.numChildren', 0, 0, arguments.length);\n    return this._delegate.size;\n  }\n\n  /**\n   * @returns The Firebase reference for the location this snapshot's data came\n   * from.\n   */\n  getRef(): Reference {\n    validateArgCount('DataSnapshot.ref', 0, 0, arguments.length);\n    return new Reference(this._database, this._delegate.ref);\n  }\n\n  get ref(): Reference {\n    return this.getRef();\n  }\n}\n\nexport interface SnapshotCallback {\n  (dataSnapshot: DataSnapshot, previousChildName?: string | null): unknown;\n}\n\n/**\n * A Query represents a filter to be applied to a firebase location.  This object purely represents the\n * query expression (and exposes our public API to build the query).  The actual query logic is in ViewBase.js.\n *\n * Since every Firebase reference is a query, Firebase inherits from this object.\n */\nexport class Query implements Compat<ExpQuery> {\n  constructor(readonly database: Database, readonly _delegate: ExpQuery) {}\n\n  on(\n    eventType: string,\n    callback: SnapshotCallback,\n    cancelCallbackOrContext?: ((a: Error) => unknown) | object | null,\n    context?: object | null\n  ): SnapshotCallback {\n    validateArgCount('Query.on', 2, 4, arguments.length);\n    validateCallback('Query.on', 'callback', callback, false);\n\n    const ret = Query.getCancelAndContextArgs_(\n      'Query.on',\n      cancelCallbackOrContext,\n      context\n    );\n    const valueCallback: UserCallback = (expSnapshot, previousChildName?) => {\n      callback.call(\n        ret.context,\n        new DataSnapshot(this.database, expSnapshot),\n        previousChildName\n      );\n    };\n    valueCallback.userCallback = callback;\n    valueCallback.context = ret.context;\n    const cancelCallback = ret.cancel?.bind(ret.context);\n\n    switch (eventType) {\n      case 'value':\n        onValue(this._delegate, valueCallback, cancelCallback);\n        return callback;\n      case 'child_added':\n        onChildAdded(this._delegate, valueCallback, cancelCallback);\n        return callback;\n      case 'child_removed':\n        onChildRemoved(this._delegate, valueCallback, cancelCallback);\n        return callback;\n      case 'child_changed':\n        onChildChanged(this._delegate, valueCallback, cancelCallback);\n        return callback;\n      case 'child_moved':\n        onChildMoved(this._delegate, valueCallback, cancelCallback);\n        return callback;\n      default:\n        throw new Error(\n          errorPrefix('Query.on', 'eventType') +\n            'must be a valid event type = \"value\", \"child_added\", \"child_removed\", ' +\n            '\"child_changed\", or \"child_moved\".'\n        );\n    }\n  }\n\n  off(\n    eventType?: string,\n    callback?: SnapshotCallback,\n    context?: object | null\n  ): void {\n    validateArgCount('Query.off', 0, 3, arguments.length);\n    validateEventType('Query.off', eventType, true);\n    validateCallback('Query.off', 'callback', callback, true);\n    validateContextObject('Query.off', 'context', context, true);\n    if (callback) {\n      const valueCallback: UserCallback = () => {};\n      valueCallback.userCallback = callback;\n      valueCallback.context = context;\n      off(this._delegate, eventType as EventType, valueCallback);\n    } else {\n      off(this._delegate, eventType as EventType | undefined);\n    }\n  }\n\n  /**\n   * Get the server-value for this query, or return a cached value if not connected.\n   */\n  get(): Promise<DataSnapshot> {\n    return get(this._delegate).then(expSnapshot => {\n      return new DataSnapshot(this.database, expSnapshot);\n    });\n  }\n\n  /**\n   * Attaches a listener, waits for the first event, and then removes the listener\n   */\n  once(\n    eventType: string,\n    callback?: SnapshotCallback,\n    failureCallbackOrContext?: ((a: Error) => void) | object | null,\n    context?: object | null\n  ): Promise<DataSnapshot> {\n    validateArgCount('Query.once', 1, 4, arguments.length);\n    validateCallback('Query.once', 'callback', callback, true);\n\n    const ret = Query.getCancelAndContextArgs_(\n      'Query.once',\n      failureCallbackOrContext,\n      context\n    );\n    const deferred = new Deferred<DataSnapshot>();\n    const valueCallback: UserCallback = (expSnapshot, previousChildName?) => {\n      const result = new DataSnapshot(this.database, expSnapshot);\n      if (callback) {\n        callback.call(ret.context, result, previousChildName);\n      }\n      deferred.resolve(result);\n    };\n    valueCallback.userCallback = callback;\n    valueCallback.context = ret.context;\n    const cancelCallback = (error: Error) => {\n      if (ret.cancel) {\n        ret.cancel.call(ret.context, error);\n      }\n      deferred.reject(error);\n    };\n\n    switch (eventType) {\n      case 'value':\n        onValue(this._delegate, valueCallback, cancelCallback, {\n          onlyOnce: true\n        });\n        break;\n      case 'child_added':\n        onChildAdded(this._delegate, valueCallback, cancelCallback, {\n          onlyOnce: true\n        });\n        break;\n      case 'child_removed':\n        onChildRemoved(this._delegate, valueCallback, cancelCallback, {\n          onlyOnce: true\n        });\n        break;\n      case 'child_changed':\n        onChildChanged(this._delegate, valueCallback, cancelCallback, {\n          onlyOnce: true\n        });\n        break;\n      case 'child_moved':\n        onChildMoved(this._delegate, valueCallback, cancelCallback, {\n          onlyOnce: true\n        });\n        break;\n      default:\n        throw new Error(\n          errorPrefix('Query.once', 'eventType') +\n            'must be a valid event type = \"value\", \"child_added\", \"child_removed\", ' +\n            '\"child_changed\", or \"child_moved\".'\n        );\n    }\n\n    return deferred.promise;\n  }\n\n  /**\n   * Set a limit and anchor it to the start of the window.\n   */\n  limitToFirst(limit: number): Query {\n    validateArgCount('Query.limitToFirst', 1, 1, arguments.length);\n    return new Query(this.database, query(this._delegate, limitToFirst(limit)));\n  }\n\n  /**\n   * Set a limit and anchor it to the end of the window.\n   */\n  limitToLast(limit: number): Query {\n    validateArgCount('Query.limitToLast', 1, 1, arguments.length);\n    return new Query(this.database, query(this._delegate, limitToLast(limit)));\n  }\n\n  /**\n   * Given a child path, return a new query ordered by the specified grandchild path.\n   */\n  orderByChild(path: string): Query {\n    validateArgCount('Query.orderByChild', 1, 1, arguments.length);\n    return new Query(this.database, query(this._delegate, orderByChild(path)));\n  }\n\n  /**\n   * Return a new query ordered by the KeyIndex\n   */\n  orderByKey(): Query {\n    validateArgCount('Query.orderByKey', 0, 0, arguments.length);\n    return new Query(this.database, query(this._delegate, orderByKey()));\n  }\n\n  /**\n   * Return a new query ordered by the PriorityIndex\n   */\n  orderByPriority(): Query {\n    validateArgCount('Query.orderByPriority', 0, 0, arguments.length);\n    return new Query(this.database, query(this._delegate, orderByPriority()));\n  }\n\n  /**\n   * Return a new query ordered by the ValueIndex\n   */\n  orderByValue(): Query {\n    validateArgCount('Query.orderByValue', 0, 0, arguments.length);\n    return new Query(this.database, query(this._delegate, orderByValue()));\n  }\n\n  startAt(\n    value: number | string | boolean | null = null,\n    name?: string | null\n  ): Query {\n    validateArgCount('Query.startAt', 0, 2, arguments.length);\n    return new Query(\n      this.database,\n      query(this._delegate, startAt(value, name))\n    );\n  }\n\n  startAfter(\n    value: number | string | boolean | null = null,\n    name?: string | null\n  ): Query {\n    validateArgCount('Query.startAfter', 0, 2, arguments.length);\n    return new Query(\n      this.database,\n      query(this._delegate, startAfter(value, name))\n    );\n  }\n\n  endAt(\n    value: number | string | boolean | null = null,\n    name?: string | null\n  ): Query {\n    validateArgCount('Query.endAt', 0, 2, arguments.length);\n    return new Query(this.database, query(this._delegate, endAt(value, name)));\n  }\n\n  endBefore(\n    value: number | string | boolean | null = null,\n    name?: string | null\n  ): Query {\n    validateArgCount('Query.endBefore', 0, 2, arguments.length);\n    return new Query(\n      this.database,\n      query(this._delegate, endBefore(value, name))\n    );\n  }\n\n  /**\n   * Load the selection of children with exactly the specified value, and, optionally,\n   * the specified name.\n   */\n  equalTo(value: number | string | boolean | null, name?: string) {\n    validateArgCount('Query.equalTo', 1, 2, arguments.length);\n    return new Query(\n      this.database,\n      query(this._delegate, equalTo(value, name))\n    );\n  }\n\n  /**\n   * @returns URL for this location.\n   */\n  toString(): string {\n    validateArgCount('Query.toString', 0, 0, arguments.length);\n    return this._delegate.toString();\n  }\n\n  // Do not create public documentation. This is intended to make JSON serialization work but is otherwise unnecessary\n  // for end-users.\n  toJSON() {\n    // An optional spacer argument is unnecessary for a string.\n    validateArgCount('Query.toJSON', 0, 1, arguments.length);\n    return this._delegate.toJSON();\n  }\n\n  /**\n   * Return true if this query and the provided query are equivalent; otherwise, return false.\n   */\n  isEqual(other: Query): boolean {\n    validateArgCount('Query.isEqual', 1, 1, arguments.length);\n    if (!(other instanceof Query)) {\n      const error =\n        'Query.isEqual failed: First argument must be an instance of firebase.database.Query.';\n      throw new Error(error);\n    }\n    return this._delegate.isEqual(other._delegate);\n  }\n\n  /**\n   * Helper used by .on and .once to extract the context and or cancel arguments.\n   * @param fnName - The function name (on or once)\n   *\n   */\n  private static getCancelAndContextArgs_(\n    fnName: string,\n    cancelOrContext?: ((a: Error) => void) | object | null,\n    context?: object | null\n  ): { cancel: ((a: Error) => void) | undefined; context: object | undefined } {\n    const ret: {\n      cancel: ((a: Error) => void) | null;\n      context: object | null;\n    } = { cancel: undefined, context: undefined };\n    if (cancelOrContext && context) {\n      ret.cancel = cancelOrContext as (a: Error) => void;\n      validateCallback(fnName, 'cancel', ret.cancel, true);\n\n      ret.context = context;\n      validateContextObject(fnName, 'context', ret.context, true);\n    } else if (cancelOrContext) {\n      // we have either a cancel callback or a context.\n      if (typeof cancelOrContext === 'object' && cancelOrContext !== null) {\n        // it's a context!\n        ret.context = cancelOrContext;\n      } else if (typeof cancelOrContext === 'function') {\n        ret.cancel = cancelOrContext as (a: Error) => void;\n      } else {\n        throw new Error(\n          errorPrefix(fnName, 'cancelOrContext') +\n            ' must either be a cancel callback or a context object.'\n        );\n      }\n    }\n    return ret;\n  }\n\n  get ref(): Reference {\n    return new Reference(\n      this.database,\n      new _ReferenceImpl(this._delegate._repo, this._delegate._path)\n    );\n  }\n}\n\nexport class Reference extends Query implements Compat<ExpReference> {\n  then: Promise<Reference>['then'];\n  catch: Promise<Reference>['catch'];\n\n  /**\n   * Call options:\n   *   new Reference(Repo, Path) or\n   *   new Reference(url: string, string|RepoManager)\n   *\n   * Externally - this is the firebase.database.Reference type.\n   */\n  constructor(readonly database: Database, readonly _delegate: ExpReference) {\n    super(\n      database,\n      new _QueryImpl(_delegate._repo, _delegate._path, new QueryParams(), false)\n    );\n  }\n\n  /** @returns {?string} */\n  getKey(): string | null {\n    validateArgCount('Reference.key', 0, 0, arguments.length);\n    return this._delegate.key;\n  }\n\n  child(pathString: string): Reference {\n    validateArgCount('Reference.child', 1, 1, arguments.length);\n    if (typeof pathString === 'number') {\n      pathString = String(pathString);\n    }\n    return new Reference(this.database, child(this._delegate, pathString));\n  }\n\n  /** @returns {?Reference} */\n  getParent(): Reference | null {\n    validateArgCount('Reference.parent', 0, 0, arguments.length);\n    const parent = this._delegate.parent;\n    return parent ? new Reference(this.database, parent) : null;\n  }\n\n  /** @returns {!Reference} */\n  getRoot(): Reference {\n    validateArgCount('Reference.root', 0, 0, arguments.length);\n    return new Reference(this.database, this._delegate.root);\n  }\n\n  set(\n    newVal: unknown,\n    onComplete?: (error: Error | null) => void\n  ): Promise<unknown> {\n    validateArgCount('Reference.set', 1, 2, arguments.length);\n    validateCallback('Reference.set', 'onComplete', onComplete, true);\n    const result = set(this._delegate, newVal);\n    if (onComplete) {\n      result.then(\n        () => onComplete(null),\n        error => onComplete(error)\n      );\n    }\n    return result;\n  }\n\n  update(\n    values: object,\n    onComplete?: (a: Error | null) => void\n  ): Promise<unknown> {\n    validateArgCount('Reference.update', 1, 2, arguments.length);\n\n    if (Array.isArray(values)) {\n      const newObjectToMerge: { [k: string]: unknown } = {};\n      for (let i = 0; i < values.length; ++i) {\n        newObjectToMerge['' + i] = values[i];\n      }\n      values = newObjectToMerge;\n      warn(\n        'Passing an Array to Firebase.update() is deprecated. ' +\n          'Use set() if you want to overwrite the existing data, or ' +\n          'an Object with integer keys if you really do want to ' +\n          'only update some of the children.'\n      );\n    }\n    validateWritablePath('Reference.update', this._delegate._path);\n    validateCallback('Reference.update', 'onComplete', onComplete, true);\n\n    const result = update(this._delegate, values);\n    if (onComplete) {\n      result.then(\n        () => onComplete(null),\n        error => onComplete(error)\n      );\n    }\n    return result;\n  }\n\n  setWithPriority(\n    newVal: unknown,\n    newPriority: string | number | null,\n    onComplete?: (a: Error | null) => void\n  ): Promise<unknown> {\n    validateArgCount('Reference.setWithPriority', 2, 3, arguments.length);\n    validateCallback(\n      'Reference.setWithPriority',\n      'onComplete',\n      onComplete,\n      true\n    );\n\n    const result = setWithPriority(this._delegate, newVal, newPriority);\n    if (onComplete) {\n      result.then(\n        () => onComplete(null),\n        error => onComplete(error)\n      );\n    }\n    return result;\n  }\n\n  remove(onComplete?: (a: Error | null) => void): Promise<unknown> {\n    validateArgCount('Reference.remove', 0, 1, arguments.length);\n    validateCallback('Reference.remove', 'onComplete', onComplete, true);\n\n    const result = remove(this._delegate);\n    if (onComplete) {\n      result.then(\n        () => onComplete(null),\n        error => onComplete(error)\n      );\n    }\n    return result;\n  }\n\n  transaction(\n    transactionUpdate: (currentData: unknown) => unknown,\n    onComplete?: (\n      error: Error | null,\n      committed: boolean,\n      dataSnapshot: DataSnapshot | null\n    ) => void,\n    applyLocally?: boolean\n  ): Promise<TransactionResult> {\n    validateArgCount('Reference.transaction', 1, 3, arguments.length);\n    validateCallback(\n      'Reference.transaction',\n      'transactionUpdate',\n      transactionUpdate,\n      false\n    );\n    validateCallback('Reference.transaction', 'onComplete', onComplete, true);\n    validateBoolean(\n      'Reference.transaction',\n      'applyLocally',\n      applyLocally,\n      true\n    );\n\n    const result = runTransaction(this._delegate, transactionUpdate, {\n      applyLocally\n    }).then(\n      transactionResult =>\n        new TransactionResult(\n          transactionResult.committed,\n          new DataSnapshot(this.database, transactionResult.snapshot)\n        )\n    );\n    if (onComplete) {\n      result.then(\n        transactionResult =>\n          onComplete(\n            null,\n            transactionResult.committed,\n            transactionResult.snapshot\n          ),\n        error => onComplete(error, false, null)\n      );\n    }\n    return result;\n  }\n\n  setPriority(\n    priority: string | number | null,\n    onComplete?: (a: Error | null) => void\n  ): Promise<unknown> {\n    validateArgCount('Reference.setPriority', 1, 2, arguments.length);\n    validateCallback('Reference.setPriority', 'onComplete', onComplete, true);\n\n    const result = setPriority(this._delegate, priority);\n    if (onComplete) {\n      result.then(\n        () => onComplete(null),\n        error => onComplete(error)\n      );\n    }\n    return result;\n  }\n\n  push(value?: unknown, onComplete?: (a: Error | null) => void): Reference {\n    validateArgCount('Reference.push', 0, 2, arguments.length);\n    validateCallback('Reference.push', 'onComplete', onComplete, true);\n\n    const expPromise = push(this._delegate, value) as ThenableReferenceImpl;\n    const promise = expPromise.then(\n      expRef => new Reference(this.database, expRef)\n    );\n\n    if (onComplete) {\n      promise.then(\n        () => onComplete(null),\n        error => onComplete(error)\n      );\n    }\n\n    const result = new Reference(this.database, expPromise);\n    result.then = promise.then.bind(promise);\n    result.catch = promise.catch.bind(promise, undefined);\n    return result;\n  }\n\n  onDisconnect(): OnDisconnect {\n    validateWritablePath('Reference.onDisconnect', this._delegate._path);\n    return new OnDisconnect(\n      new ExpOnDisconnect(this._delegate._repo, this._delegate._path)\n    );\n  }\n\n  get key(): string | null {\n    return this.getKey();\n  }\n\n  get parent(): Reference | null {\n    return this.getParent();\n  }\n\n  get root(): Reference {\n    return this.getRoot();\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// eslint-disable-next-line import/no-extraneous-dependencies\n\nimport { FirebaseApp } from '@firebase/app-types';\nimport { FirebaseService } from '@firebase/app-types/private';\nimport {\n  validateArgCount,\n  Compat,\n  EmulatorMockTokenOptions\n} from '@firebase/util';\n\nimport {\n  goOnline,\n  connectDatabaseEmulator,\n  goOffline,\n  ref,\n  refFromURL,\n  increment,\n  serverTimestamp\n} from '../../exp/index'; // import from the exp public API\n\nimport { Reference } from './Reference';\n\n// TODO: revert to import {FirebaseDatabase as ExpDatabase} from '@firebase/database' once modular SDK goes GA\n/**\n * This is a workaround for an issue in the no-modular '@firebase/database' where its typings\n * reference types from `@firebase/app-exp`.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ntype ExpDatabase = any;\n\n/**\n * Class representing a firebase database.\n */\nexport class Database implements FirebaseService, Compat<ExpDatabase> {\n  static readonly ServerValue = {\n    TIMESTAMP: serverTimestamp(),\n    increment: (delta: number) => increment(delta)\n  };\n\n  /**\n   * The constructor should not be called by users of our public API.\n   */\n  constructor(readonly _delegate: ExpDatabase, readonly app: FirebaseApp) {}\n\n  INTERNAL = {\n    delete: () => this._delegate._delete()\n  };\n\n  /**\n   * Modify this instance to communicate with the Realtime Database emulator.\n   *\n   * <p>Note: This method must be called before performing any other operation.\n   *\n   * @param host - the emulator host (ex: localhost)\n   * @param port - the emulator port (ex: 8080)\n   * @param options.mockUserToken - the mock auth token to use for unit testing Security Rules\n   */\n  useEmulator(\n    host: string,\n    port: number,\n    options: {\n      mockUserToken?: EmulatorMockTokenOptions;\n    } = {}\n  ): void {\n    connectDatabaseEmulator(this._delegate, host, port, options);\n  }\n\n  /**\n   * Returns a reference to the root or to the path specified in the provided\n   * argument.\n   *\n   * @param path - The relative string path or an existing Reference to a database\n   * location.\n   * @throws If a Reference is provided, throws if it does not belong to the\n   * same project.\n   * @returns Firebase reference.\n   */\n  ref(path?: string): Reference;\n  ref(path?: Reference): Reference;\n  ref(path?: string | Reference): Reference {\n    validateArgCount('database.ref', 0, 1, arguments.length);\n    if (path instanceof Reference) {\n      const childRef = refFromURL(this._delegate, path.toString());\n      return new Reference(this, childRef);\n    } else {\n      const childRef = ref(this._delegate, path);\n      return new Reference(this, childRef);\n    }\n  }\n\n  /**\n   * Returns a reference to the root or the path specified in url.\n   * We throw a exception if the url is not in the same domain as the\n   * current repo.\n   * @returns Firebase reference.\n   */\n  refFromURL(url: string): Reference {\n    const apiName = 'database.refFromURL';\n    validateArgCount(apiName, 1, 1, arguments.length);\n    const childRef = refFromURL(this._delegate, url);\n    return new Reference(this, childRef);\n  }\n\n  // Make individual repo go offline.\n  goOffline(): void {\n    validateArgCount('database.goOffline', 0, 0, arguments.length);\n    return goOffline(this._delegate);\n  }\n\n  goOnline(): void {\n    validateArgCount('database.goOnline', 0, 0, arguments.length);\n    return goOnline(this._delegate);\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseApp } from '@firebase/app-types';\nimport {\n  FirebaseAuthInternal,\n  FirebaseAuthInternalName\n} from '@firebase/auth-interop-types';\nimport {\n  Component,\n  ComponentContainer,\n  ComponentType,\n  Provider\n} from '@firebase/component';\nimport * as types from '@firebase/database-types';\n\nimport { _repoManagerDatabaseFromApp } from '../../exp/index';\nimport {\n  repoInterceptServerData,\n  repoStats,\n  repoStatsIncrementCounter\n} from '../core/Repo';\nimport { setSDKVersion } from '../core/version';\nimport { BrowserPollConnection } from '../realtime/BrowserPollConnection';\nimport { WebSocketConnection } from '../realtime/WebSocketConnection';\n\nimport { Database } from './Database';\nimport { Reference } from './Reference';\n\n/**\n * INTERNAL methods for internal-use only (tests, etc.).\n *\n * Customers shouldn't use these or else should be aware that they could break at any time.\n */\n\nexport const forceLongPolling = function () {\n  WebSocketConnection.forceDisallow();\n  BrowserPollConnection.forceAllow();\n};\n\nexport const forceWebSockets = function () {\n  BrowserPollConnection.forceDisallow();\n};\n\n/* Used by App Manager */\nexport const isWebSocketsAvailable = function (): boolean {\n  return WebSocketConnection['isAvailable']();\n};\n\nexport const setSecurityDebugCallback = function (\n  ref: Reference,\n  callback: (a: object) => void\n) {\n  const connection = ref._delegate._repo.persistentConnection_;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  (connection as any).securityDebugCallback_ = callback;\n};\n\nexport const stats = function (ref: Reference, showDelta?: boolean) {\n  repoStats(ref._delegate._repo, showDelta);\n};\n\nexport const statsIncrementCounter = function (ref: Reference, metric: string) {\n  repoStatsIncrementCounter(ref._delegate._repo, metric);\n};\n\nexport const dataUpdateCount = function (ref: Reference): number {\n  return ref._delegate._repo.dataUpdateCount;\n};\n\nexport const interceptServerData = function (\n  ref: Reference,\n  callback: ((a: string, b: unknown) => void) | null\n) {\n  return repoInterceptServerData(ref._delegate._repo, callback);\n};\n\n/**\n * Used by console to create a database based on the app,\n * passed database URL and a custom auth implementation.\n *\n * @param app - A valid FirebaseApp-like object\n * @param url - A valid Firebase databaseURL\n * @param version - custom version e.g. firebase-admin version\n * @param customAuthImpl - custom auth implementation\n */\nexport function initStandalone<T>({\n  app,\n  url,\n  version,\n  customAuthImpl,\n  namespace,\n  nodeAdmin = false\n}: {\n  app: FirebaseApp;\n  url: string;\n  version: string;\n  customAuthImpl: FirebaseAuthInternal;\n  namespace: T;\n  nodeAdmin?: boolean;\n}): {\n  instance: types.Database;\n  namespace: T;\n} {\n  setSDKVersion(version);\n\n  /**\n   * ComponentContainer('database-standalone') is just a placeholder that doesn't perform\n   * any actual function.\n   */\n  const authProvider = new Provider<FirebaseAuthInternalName>(\n    'auth-internal',\n    new ComponentContainer('database-standalone')\n  );\n  authProvider.setComponent(\n    new Component('auth-internal', () => customAuthImpl, ComponentType.PRIVATE)\n  );\n\n  return {\n    instance: new Database(\n      _repoManagerDatabaseFromApp(\n        app,\n        authProvider,\n        /* appCheckProvider= */ undefined,\n        url,\n        nodeAdmin\n      ),\n      app\n    ) as types.Database,\n    namespace\n  };\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { PersistentConnection } from '../core/PersistentConnection';\nimport { RepoInfo } from '../core/RepoInfo';\nimport { repoManagerForceRestClient } from '../exp/Database';\nimport { Connection } from '../realtime/Connection';\n\nimport { Query } from './Reference';\n\nexport const DataConnection = PersistentConnection;\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\n(PersistentConnection.prototype as any).simpleListen = function (\n  pathString: string,\n  onComplete: (a: unknown) => void\n) {\n  this.sendRequest('q', { p: pathString }, onComplete);\n};\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\n(PersistentConnection.prototype as any).echo = function (\n  data: unknown,\n  onEcho: (a: unknown) => void\n) {\n  this.sendRequest('echo', { d: data }, onEcho);\n};\n\n// RealTimeConnection properties that we use in tests.\nexport const RealTimeConnection = Connection;\n\nexport const hijackHash = function (newHash: () => string) {\n  const oldPut = PersistentConnection.prototype.put;\n  PersistentConnection.prototype.put = function (\n    pathString,\n    data,\n    onComplete,\n    hash\n  ) {\n    if (hash !== undefined) {\n      hash = newHash();\n    }\n    oldPut.call(this, pathString, data, onComplete, hash);\n  };\n  return function () {\n    PersistentConnection.prototype.put = oldPut;\n  };\n};\n\nexport const ConnectionTarget = RepoInfo;\n\nexport const queryIdentifier = function (query: Query) {\n  return query._delegate._queryIdentifier;\n};\n\n/**\n * Forces the RepoManager to create Repos that use ReadonlyRestClient instead of PersistentConnection.\n */\nexport const forceRestClient = function (forceRestClient: boolean) {\n  repoManagerForceRestClient(forceRestClient);\n};\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// eslint-disable-next-line import/no-extraneous-dependencies\nimport firebase from '@firebase/app';\nimport { FirebaseNamespace } from '@firebase/app-types';\nimport { _FirebaseNamespace } from '@firebase/app-types/private';\nimport { Component, ComponentType } from '@firebase/component';\nimport * as types from '@firebase/database-types';\nimport { isNodeSdk } from '@firebase/util';\n\nimport { name, version } from './package.json';\nimport { Database } from './src/api/Database';\nimport * as INTERNAL from './src/api/internal';\nimport { DataSnapshot, Query, Reference } from './src/api/Reference';\nimport * as TEST_ACCESS from './src/api/test_access';\nimport { enableLogging } from './src/core/util/util';\nimport { setSDKVersion } from './src/core/version';\nimport { repoManagerDatabaseFromApp } from './src/exp/Database';\n\nconst ServerValue = Database.ServerValue;\n\nexport function registerDatabase(instance: FirebaseNamespace) {\n  // set SDK_VERSION\n  setSDKVersion(instance.SDK_VERSION);\n\n  // Register the Database Service with the 'firebase' namespace.\n  const namespace = (instance as _FirebaseNamespace).INTERNAL.registerComponent(\n    new Component(\n      'database',\n      (container, { instanceIdentifier: url }) => {\n        /* Dependencies */\n        // getImmediate for FirebaseApp will always succeed\n        const app = container.getProvider('app').getImmediate();\n        const authProvider = container.getProvider('auth-internal');\n        const appCheckProvider = container.getProvider('app-check-internal');\n\n        return new Database(\n          repoManagerDatabaseFromApp(app, authProvider, appCheckProvider, url),\n          app\n        );\n      },\n      ComponentType.PUBLIC\n    )\n      .setServiceProps(\n        // firebase.database namespace properties\n        {\n          Reference,\n          Query,\n          Database,\n          DataSnapshot,\n          enableLogging,\n          INTERNAL,\n          ServerValue,\n          TEST_ACCESS\n        }\n      )\n      .setMultipleInstances(true)\n  );\n\n  instance.registerVersion(name, version);\n\n  if (isNodeSdk()) {\n    module.exports = namespace;\n  }\n}\n\nregisterDatabase(firebase);\n\n// Types to export for the admin SDK\nexport { Database, Query, Reference, enableLogging, ServerValue };\n\nexport { DataSnapshot } from './src/api/Reference';\nexport { OnDisconnect } from './src/api/onDisconnect';\n\ndeclare module '@firebase/app-types' {\n  interface FirebaseNamespace {\n    database?: {\n      (app?: FirebaseApp): types.FirebaseDatabase;\n      enableLogging: typeof types.enableLogging;\n      ServerValue: types.ServerValue;\n      Database: typeof types.FirebaseDatabase;\n    };\n  }\n  interface FirebaseApp {\n    database?(databaseURL?: string): types.FirebaseDatabase;\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}