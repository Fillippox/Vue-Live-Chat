{"ast":null,"code":"import { vModelText as _vModelText, createElementVNode as _createElementVNode, withDirectives as _withDirectives, toDisplayString as _toDisplayString, withModifiers as _withModifiers, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"error\"\n};\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"button\", null, \"Sign up\", -1 /* HOISTED */);\n\nexport function render(_ctx, _cache) {\n  return _openBlock(), _createElementBlock(\"form\", {\n    onSubmit: _cache[3] || (_cache[3] = _withModifiers((...args) => _ctx.handleSubmit && _ctx.handleSubmit(...args), [\"prevent\"]))\n  }, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    required: \"\",\n    placeholder: \"display name\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.displayName = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, _ctx.displayName]]), _withDirectives(_createElementVNode(\"input\", {\n    type: \"email\",\n    required: \"\",\n    placeholder: \"email\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => _ctx.email = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, _ctx.email]]), _withDirectives(_createElementVNode(\"input\", {\n    type: \"password\",\n    required: \"\",\n    placeholder: \"password\",\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => _ctx.password = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, _ctx.password]]), _createElementVNode(\"div\", _hoisted_1, _toDisplayString(_ctx.error), 1 /* TEXT */), _hoisted_2], 32 /* HYDRATE_EVENTS */);\n}","map":{"version":3,"mappings":";;EAKaA,KAAK,EAAC;AAAO;gCAClBC,oBAAwB,gBAAhB,SAAO;;;uBALnBC,oBAMO;IANAC,QAAM,wDAAUC,+CAAY;sBAC/BH,oBAA6E;IAAtEI,IAAI,EAAC,MAAM;IAACC,QAAQ,EAAR,EAAQ;IAACC,WAAW,EAAC,cAAc;+DAAUH,gBAAW;iDAAXA,gBAAW,qBAC3EH,oBAAiE;IAA1DI,IAAI,EAAC,OAAO;IAACC,QAAQ,EAAR,EAAQ;IAACC,WAAW,EAAC,OAAO;+DAAUH,UAAK;iDAALA,UAAK,qBAC/DH,oBAA0E;IAAnEI,IAAI,EAAC,UAAU;IAACC,QAAQ,EAAR,EAAQ;IAACC,WAAW,EAAC,UAAU;+DAAUH,aAAQ;iDAARA,aAAQ,KACxEH,oBAAoC,OAApCO,UAAoC,mBAAdJ,UAAK,kBAC3BK,UAAwB","names":["class","_createElementVNode","_createElementBlock","onSubmit","_ctx","type","required","placeholder","_hoisted_1","_hoisted_2"],"sourceRoot":"","sources":["C:\\Users\\JW\\Desktop\\VUE_JS\\class10\\live-chat-0\\src\\components\\SignUpForm.vue"],"sourcesContent":["<template>\r\n    <form @submit.prevent=\"handleSubmit\">\r\n        <input type=\"text\" required placeholder=\"display name\" v-model=\"displayName\">\r\n        <input type=\"email\" required placeholder=\"email\" v-model=\"email\">\r\n        <input type=\"password\" required placeholder=\"password\" v-model=\"password\">\r\n        <div class=\"error\">{{ error }}</div>\r\n        <button>Sign up</button>\r\n    </form>\r\n</template>\r\n<script>\r\n    import {ref} from 'vue'\r\n    import useSignup from '../composables/useSignup.js'\r\n    import \r\n    export default{\r\n        setup(){\r\n            const {error, signup} = useSignup()\r\n            const displayName=ref('')\r\n            const email = ref('')\r\n            const password = ref('')\r\n            const handleSubmit = async () => {\r\n                await signup(email.value, password.value, displayName.value)\r\n                console.log('user signed up')\r\n            }\r\n            return {email, password, displayName, handleSubmit, error }\r\n        }\r\n    }\r\n</script>\r\n<style>\r\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}