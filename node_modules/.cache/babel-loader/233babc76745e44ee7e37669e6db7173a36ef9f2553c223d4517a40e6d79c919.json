{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"error\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_emoji_picker = _resolveComponent(\"emoji-picker\");\n  return _openBlock(), _createElementBlock(\"form\", null, [_createVNode(_component_emoji_picker, {\n    modelValue: $setup.message,\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.message = $event),\n    onSelect: _ctx.handleEmojiSelect\n  }, null, 8 /* PROPS */, [\"modelValue\", \"onSelect\"]), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = $event => $setup.showEmojiPicker = !$setup.showEmojiPicker)\n  }, \"Pick Emoji\"), _createElementVNode(\"div\", _hoisted_1, _toDisplayString($setup.error), 1 /* TEXT */)]);\n}","map":{"version":3,"mappings":";;EAIaA,KAAK,EAAC;AAAO;;;uBAHtBC,oBAIO,eAHHC,aAA2EC;gBAApDC,cAAO;+DAAPA,cAAO;IAAGC,QAAM,EAAEC;uDACzCC,oBAAuE;IAA9DC,OAAK,sCAAEJ,sBAAe,IAAIA,sBAAe;KAAE,YAAU,GAC9DG,oBAAoC,OAApCE,UAAoC,mBAAdL,YAAK","names":["class","_createElementBlock","_createVNode","_component_emoji_picker","$setup","onSelect","_ctx","_createElementVNode","onClick","_hoisted_1"],"sourceRoot":"","sources":["C:\\Users\\lego5\\Desktop\\Vue-Project\\Vue-Project\\src\\components\\NewChatForm.vue"],"sourcesContent":["<template>\r\n    <form>\r\n        <emoji-picker v-model=\"message\" @select=\"handleEmojiSelect\"></emoji-picker>\r\n        <button @click=\"showEmojiPicker = !showEmojiPicker\">Pick Emoji</button>\r\n        <div class=\"error\">{{ error }}</div>\r\n    </form>\r\n</template>\r\n\r\n<script>\r\n    import { ref } from 'vue'\r\n    import getCurrentUser from '../composables/getCurrentUser'\r\n    import { timestamp } from '../firebase/config'\r\n    import useCollection from '../composables/useCollection.js'\r\n    import { Picker } from 'emoji-mart'\r\n    import 'emoji-mart/css/emoji-mart.css'\r\n\r\n    export default{\r\n        components: {\r\n            'emoji-picker': Picker\r\n        },\r\n        setup(){\r\n            const { user } = getCurrentUser()\r\n            const {addDoc, error} = useCollection('messages')\r\n            const message = ref('')\r\n            const showEmojiPicker = ref(false)\r\n            const handleEmojiSelect = (emoji) => {\r\n                message.value += emoji.native\r\n            }\r\n\r\n            const handleSubmit = async () => {\r\n                const chat = {\r\n                    name: user.value.displayName,\r\n                    message: message.value,\r\n                    createdAt: timestamp()\r\n                }\r\n                await addDoc(chat)\r\n                //console.log(chat)\r\n                if(!error.val){\r\n                    message.value=''\r\n                }\r\n            }\r\n            return {message, handleSubmit, error, showEmojiPicker}\r\n        }\r\n    }\r\n</script>\r\n\r\n\r\n<style>\r\n\r\n/* Box for commenting */\r\n.comment-box {\r\n    border: 1px solid #ddd;\r\n    padding: 10px;\r\n    border-radius: 5px;\r\n    box-shadow: 2px 2px 5px #ccc;\r\n    width: 100%;\r\n    height: 200px;\r\n    resize: none;\r\n}\r\n\r\n\r\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}